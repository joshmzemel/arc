{
    "docs": [
        {
            "location": "/", 
            "text": "Detailed contracts documentation can be found \nhere\n\n\nA document which describes the concepts involved can be found \nhere\n\n\nGuides \n Recipes can be found \nhere\n\n\nDAOstack Whitepaper\n\n\nContributing to Arc Docs\n\n\nSame as above, with the following exceptions:\n\n\n\n\nAll docs are \n.md\n files that live under \ndocs/\n with the following structure:\n\n\nref/\n - generated automatic documentation.\n\n\nheaders/\n - manual static \n.md\n headers that are included in the generated \nref/\n (headers are included based on their path, which must match the path of the corresponding generated file in \nref/\n).\n\n\n\n\n\n\nUse \nyarn run docs:generate\n to generate docs\n\n\nIn case of missing or incorrect documentation please open an issue with the label \ndocumentation\n, indicating the file, line number and any extra details.", 
            "title": "Home"
        }, 
        {
            "location": "/#contributing-to-arc-docs", 
            "text": "Same as above, with the following exceptions:   All docs are  .md  files that live under  docs/  with the following structure:  ref/  - generated automatic documentation.  headers/  - manual static  .md  headers that are included in the generated  ref/  (headers are included based on their path, which must match the path of the corresponding generated file in  ref/ ).    Use  yarn run docs:generate  to generate docs  In case of missing or incorrect documentation please open an issue with the label  documentation , indicating the file, line number and any extra details.", 
            "title": "Contributing to Arc Docs"
        }, 
        {
            "location": "/DAO-protocol/", 
            "text": "DAO Protocol\n\n\n\n\nThis document describes the general framework and protocol for collaborative DAOs. It parallels the \nformal whitepaper\n (\nsource\n), which is supposed to cover the same material in a rigorous language.  \n\n\n\n\nWelcome to edit, add comments/questions, and submit pull request.\n\n\n\n\nTip: try \nStackEdit\n or \nDilinger\n for editing.\n\n\n\n\nBasics\n\n\n\n\nValue System\n\n\nA Value System (VS) is a smart contract allowing a dynamic community of \nAgents\n to manage collective decisions, in particular about the ownership and distribution of digital assets.\n\n\nThere are generally five types of decisions a VS can make:\n\n\n\n\nInternal fund management\n: in terms of distribution of the native token controlled by the VS smart contract.\n\n\nExternal fund management\n: in terms of distribution of other tokens (of other VS) which are owned and managed by the VS smart contract (e.g. as a result of investments in its native token).\n\n\nCuration\n: in terms of adding metadata to (and particularly ranking of) digitally-identified objects, such as article, websites, questions and answers, ideas, physical entities (companies, restaurants), etc.\n\n\nOperation\n: in terms of calling and executing functions of other smart contracts (that may be triggering similar activities in other VS but can also be more general).\n\n\nProtocol update\n: in terms of changing the VS protocol for the process of making these (five types of) collective decisions itself.\n\n\n\n\nGenerally a VS may process all of them, but often each VS will have one type of decision making that is primary (i.e. being its \npurpose\n) and the others that will be \nsecondary\n (serving the primary).\n\n\n\n\nFor example, a pure curation VS could be purposed for collective curation of articles, websites or restaurant. A collaborative code-development VS would primarily distribute its internal tokens (as ownership of the guild) to contributors of valuable code. And a decentralized investment (or insurance) fund will primarily allocate external funds (such as ETH) to promising projects (or peers' claims).\n\n\n\n\nGenerally speaking, the VS distributes its \ntokens\n and \nreputation\n to agents for posting successful \nevaluations\n and \ncontributions\n (as perceived by the VS through the evaluations of its reputation holders).\n\n\n\n\n\n\n\nAgents\n\n\nAgent is an address that can interact with the blockchain, and it comes in two types:\n\n\n\n\nprivate key\n: and a private holder of that key (that has to be kept somewhere by someone).\n\n\ncontract\n: would it be a multisig contract of several private agents, another value system, or more generally any other contract.\n\n\n\n\n\n\nFor example, three private agents can form their own private VS, could be a simple 2-of-3 multisig contract or a more complicated one, and collective become an agent inside other VSs. That collective agent makes its own contributions and evaluations (so that their internal contract should also define how their private inputs turn into single voice), and correspondingly gains its own reputation and tokens (of other VSs). While earned tokens can be distributed between the private agents comprising that collective contract agent, the reputation is forever attributed to the contract as a single, indivisible agent.\n\n\n\n\nGenerally an agent has the following attributes within a VS:\n\n\n\n\ntoken balance\n\n\nreputation score\n\n\nhistory of \ncontributions\n and \nevaluations\n\n\n\n\nThe public actions of an agent in a VS are posting \ncontributions\n,  \nevaluations\n of contributions, and casting votes on the VS \nproposals\n. Privately, an agent can transfer tokens and delegate reputation to other peers. (One can also consider making agents' evaluations secret.)\n\n\n\n\nTokens\n\n\nEach value system (VS) has its own native token which is transferrable.\n\n\n\n\nWhile a token is generally \ntransferrable\n,  various conditions can be applied to it, such as \nVesting\n or \nFreezing\n, when  tokens are distributed under future conditions, or remained non-transferrable for a period of time. For example, a distribution mechanism might allow a successful contributor to choose if she likes to be rewarded with 10 two-months locked tokens (i.e. rendered non-transferrable for two months), or 5 tangible tokens (which are transferrable immediately).\n\n\n\n\nAgents in the VS have their native token balance, and the distribution of internal tokens is at the core of the VS's activity (or decision making). The token balance is analogous to their financial ownership in that VS, and generally (unless otherwise implemented), internal tokens are backed by the VS assets.\n\n\n\n\nFor example, if VS-A owns 10 tokens of VS-B, and has distributed 100 VS-A tokens to its agents, then each VS-A token is generally redeemable against 0.1 VS-B tokens. Practically it means an agent X can send to the VS-A contract his 5 VS-A tokens; the contract effectively burns those tokens out of circulation (or simply deletes it from its database), and correspondingly sends 0.5 of its VS-B owned tokens back to the address of X from which he has sent his 5 VS-A tokens. That's the default, but of course, could also devised differently by VS-A.\n\n\n\n\nThere are generally two ways a VS gains external assets:\n\n\n\n\nThrough agents \npurchasing\n its native tokens via one of its \ntoken distribution\n schemes.\n\n\n\n\n\n\nAgent X sends 10 ETH\n\n\n\n\n\n\nThrough successful contributions of the VS into other VSs\n\n\n\n\n\n\nSay,\n\n\n\n\nToken Distribution\n\n\nThe VS contract mints and distributes new internal tokens upon three types of triggers:\n\n\n\n\nInvestment\n:  agent A sends \nexternal\n funds (say, D1 tokens) into the contract (say, D2 VS), and resultingly the D2 contract keeps the sent D1 tokens, mints T D2 tokens and send them back to agent A. (Possibly also issuing R D2 reputation score to be allocated to agent A as well.) The exact details of how many tokens, vested or not (and for how long), reputation or not (and how much) can be very general and depend on the token distribution scheme adopted by the D2 VS. DAOstack lets each founded VS decide and constantly update (through majority votes \u2014but this default choice is also open for change by the VS) the token- and reputation-distribution schemes, and additional templates will be built during its evolution.\n\n\n\n\n\n\nFor example, a crowd-sale type template can offer a bounded sale of tokens (say, 1M of them), open for 1 month, with price rising linearly from: 1 D2 token = 1 D1 token, to 1 D2 token = 2 D1 tokens over that period, and a total of 10% of the D2 reputation score allocated to the investors, in proportion to their investment and in linearly decreasing amount over time. Infinitely many other distribution schemes can be suggested to design different economies and incentive structures. We'll offer a few initial \ntoken sale schemes\n below, including their contracts.\n\n\n\n\n\n\nObjective contribution\n (or objectively measured), which is not transaction of tokens (i.e. purchase). \nMORE ON THIS\n\n\nSubjective contribution\n, that needs to be evaluated by the VS reputation holders. \nMORE ON THIS\n\n\n\n\nToken Value\n\n\n...where the token get its value from, the token's \"business model\", submission fee, VS reserve...\n\n\n\n\nReputation\n\n\nReputation score is just another name for \nvoting power\n. That is, if an agent A have the sum of reputation of agent B and agent C, then A's vote amounts to B and C voting together (assuming they all vote the same).\n\n\n\n\nMore generally, we could have imagined vote impact to behave superlinearly or sublinearly with respect to reputation, so that A's vote could be stronger or weaker than votes of B and C together. Sublinearity will induce bias towards smaller players and superlinearity will induce a bias towards larger players. The former will also induce an incentive for an identity split (i.e. the same physical agent using multiple identities) and is thus undesirable. The latter will induce incentive for cooperation, or grouping/pools, and might be considered both desirable (including cooperation and fractal governance) or undesirable (giving more power to the already powerful ones, as well as more prone to majority attack). The default choice, unless otherwise is clearly devised, would be to stick with linearity.\n\n\n\n\nReputation is non-transferrable, but can can be \nreversibly\n delegated. Reputation can be awarded (or distributed) by vote of current reputation holders, usually as part of an agent's contribution to the network \u2014together with award of tokens.\n\n\n\n\nA VS can also decide to award reputation to an agent who hasn't contributed directly to this VS but is known to have reputation/competence from past activity. In that case usually the reputation distribution will not be tight up with tokens, but the voting procedure would be similar.\n\n\n\n\nA more advanced (and important) feature is the  \nreputation flow\n between curators upon their evaluations of proposals. Generally reputation should flow to curators who are found to be retrospectively aligned with decisions made by the VS (from those who are found misaligned, or those who haven't participated in voting), and in that way the VS induces systematic alignment of opinions (and interests) and defines its \nemergent\n value system. At the same time, misaligned agents become less effective within that VS, and are incentivized to open a new VS (where they define the first axis of alignment) or join another one better suiting their personal value system.\n\n\n\n\nFor example, agent Cony posts a contribution of a code repository. Agent Eva reviews that contribution and posts an evaluation to distribute 10 (say, DAOstack\n1\n) tokens to agent Cony for that contribution. Then, the more reputable agents\n2\n endorse Eva's evaluation (i.e. posts similar evaluations \u2014and defining \nsimilar\n is, for example, where things get more complicated) the more Eva's reputation increases; and vice versa. So, basically when making an evaluation amounts to putting your reputation at risk \u2014and gaining if being \"right\". To define of \"being right\" requires more work.\n\n\n\n\nThe reputation flow element is perhaps the complex part of the reputation protocol, which needs to be carefully designed in a resistant way. (I.e. a way that makes is impossible for an agent to game the system and gain reputation without actually be retrospectively aligned with the VS it belongs to.) We'll elaborate on this in a separate chapter \nbelow\n.\n\n\n1\n If the contribution and evaluation are within the DAOstack VS. Generally they can be in any other VS, that can be a sub-VS of DAOstack, or not. \n\u21a9\n\n\n2\n Reputation is what counts, not number of people. \n\u21a9\n\n\n\n\nProposal\n\n\n... submitting a proposal for token/reputation-distribution scheme, for example:\n\n\n\n\ncontribution proposal with fixed reward and majority approval (Yes/No vote)\n\n\ncontribution proposal with open reward (numeric evaluation and reputation-weighted median)\n\n\ntoken-sale distribution scheme 1: fixed-rate sale with no reputation distribution\n\n\ntoken-sale distribution scheme 2: linearly-growing rate sale with exponentially-decreasing reputation distribution (20% in total)\n\n\n\n\n...\n\n\n\n\nContribution\n\n\n\n\nEvaluation\n\n\n\n\nToken Sale Schemes\n\n\n\n\nReputation Flow - I\n\n\n\n\nContract Architecture\n\n\nA preliminary contract architecture looks something like this:", 
            "title": "DAO protocol"
        }, 
        {
            "location": "/DAO-protocol/#dao-protocol", 
            "text": "This document describes the general framework and protocol for collaborative DAOs. It parallels the  formal whitepaper  ( source ), which is supposed to cover the same material in a rigorous language.     Welcome to edit, add comments/questions, and submit pull request.   Tip: try  StackEdit  or  Dilinger  for editing.", 
            "title": "DAO Protocol"
        }, 
        {
            "location": "/DAO-protocol/#basics", 
            "text": "", 
            "title": "Basics"
        }, 
        {
            "location": "/DAO-protocol/#value-system", 
            "text": "A Value System (VS) is a smart contract allowing a dynamic community of  Agents  to manage collective decisions, in particular about the ownership and distribution of digital assets.  There are generally five types of decisions a VS can make:   Internal fund management : in terms of distribution of the native token controlled by the VS smart contract.  External fund management : in terms of distribution of other tokens (of other VS) which are owned and managed by the VS smart contract (e.g. as a result of investments in its native token).  Curation : in terms of adding metadata to (and particularly ranking of) digitally-identified objects, such as article, websites, questions and answers, ideas, physical entities (companies, restaurants), etc.  Operation : in terms of calling and executing functions of other smart contracts (that may be triggering similar activities in other VS but can also be more general).  Protocol update : in terms of changing the VS protocol for the process of making these (five types of) collective decisions itself.   Generally a VS may process all of them, but often each VS will have one type of decision making that is primary (i.e. being its  purpose ) and the others that will be  secondary  (serving the primary).   For example, a pure curation VS could be purposed for collective curation of articles, websites or restaurant. A collaborative code-development VS would primarily distribute its internal tokens (as ownership of the guild) to contributors of valuable code. And a decentralized investment (or insurance) fund will primarily allocate external funds (such as ETH) to promising projects (or peers' claims).   Generally speaking, the VS distributes its  tokens  and  reputation  to agents for posting successful  evaluations  and  contributions  (as perceived by the VS through the evaluations of its reputation holders).", 
            "title": "Value System"
        }, 
        {
            "location": "/DAO-protocol/#agents", 
            "text": "Agent is an address that can interact with the blockchain, and it comes in two types:   private key : and a private holder of that key (that has to be kept somewhere by someone).  contract : would it be a multisig contract of several private agents, another value system, or more generally any other contract.    For example, three private agents can form their own private VS, could be a simple 2-of-3 multisig contract or a more complicated one, and collective become an agent inside other VSs. That collective agent makes its own contributions and evaluations (so that their internal contract should also define how their private inputs turn into single voice), and correspondingly gains its own reputation and tokens (of other VSs). While earned tokens can be distributed between the private agents comprising that collective contract agent, the reputation is forever attributed to the contract as a single, indivisible agent.   Generally an agent has the following attributes within a VS:   token balance  reputation score  history of  contributions  and  evaluations   The public actions of an agent in a VS are posting  contributions ,   evaluations  of contributions, and casting votes on the VS  proposals . Privately, an agent can transfer tokens and delegate reputation to other peers. (One can also consider making agents' evaluations secret.)", 
            "title": "Agents"
        }, 
        {
            "location": "/DAO-protocol/#tokens", 
            "text": "Each value system (VS) has its own native token which is transferrable.   While a token is generally  transferrable ,  various conditions can be applied to it, such as  Vesting  or  Freezing , when  tokens are distributed under future conditions, or remained non-transferrable for a period of time. For example, a distribution mechanism might allow a successful contributor to choose if she likes to be rewarded with 10 two-months locked tokens (i.e. rendered non-transferrable for two months), or 5 tangible tokens (which are transferrable immediately).   Agents in the VS have their native token balance, and the distribution of internal tokens is at the core of the VS's activity (or decision making). The token balance is analogous to their financial ownership in that VS, and generally (unless otherwise implemented), internal tokens are backed by the VS assets.   For example, if VS-A owns 10 tokens of VS-B, and has distributed 100 VS-A tokens to its agents, then each VS-A token is generally redeemable against 0.1 VS-B tokens. Practically it means an agent X can send to the VS-A contract his 5 VS-A tokens; the contract effectively burns those tokens out of circulation (or simply deletes it from its database), and correspondingly sends 0.5 of its VS-B owned tokens back to the address of X from which he has sent his 5 VS-A tokens. That's the default, but of course, could also devised differently by VS-A.   There are generally two ways a VS gains external assets:   Through agents  purchasing  its native tokens via one of its  token distribution  schemes.    Agent X sends 10 ETH    Through successful contributions of the VS into other VSs    Say,", 
            "title": "Tokens"
        }, 
        {
            "location": "/DAO-protocol/#token-distribution", 
            "text": "The VS contract mints and distributes new internal tokens upon three types of triggers:   Investment :  agent A sends  external  funds (say, D1 tokens) into the contract (say, D2 VS), and resultingly the D2 contract keeps the sent D1 tokens, mints T D2 tokens and send them back to agent A. (Possibly also issuing R D2 reputation score to be allocated to agent A as well.) The exact details of how many tokens, vested or not (and for how long), reputation or not (and how much) can be very general and depend on the token distribution scheme adopted by the D2 VS. DAOstack lets each founded VS decide and constantly update (through majority votes \u2014but this default choice is also open for change by the VS) the token- and reputation-distribution schemes, and additional templates will be built during its evolution.    For example, a crowd-sale type template can offer a bounded sale of tokens (say, 1M of them), open for 1 month, with price rising linearly from: 1 D2 token = 1 D1 token, to 1 D2 token = 2 D1 tokens over that period, and a total of 10% of the D2 reputation score allocated to the investors, in proportion to their investment and in linearly decreasing amount over time. Infinitely many other distribution schemes can be suggested to design different economies and incentive structures. We'll offer a few initial  token sale schemes  below, including their contracts.    Objective contribution  (or objectively measured), which is not transaction of tokens (i.e. purchase).  MORE ON THIS  Subjective contribution , that needs to be evaluated by the VS reputation holders.  MORE ON THIS", 
            "title": "Token Distribution"
        }, 
        {
            "location": "/DAO-protocol/#token-value", 
            "text": "...where the token get its value from, the token's \"business model\", submission fee, VS reserve...", 
            "title": "Token Value"
        }, 
        {
            "location": "/DAO-protocol/#reputation", 
            "text": "Reputation score is just another name for  voting power . That is, if an agent A have the sum of reputation of agent B and agent C, then A's vote amounts to B and C voting together (assuming they all vote the same).   More generally, we could have imagined vote impact to behave superlinearly or sublinearly with respect to reputation, so that A's vote could be stronger or weaker than votes of B and C together. Sublinearity will induce bias towards smaller players and superlinearity will induce a bias towards larger players. The former will also induce an incentive for an identity split (i.e. the same physical agent using multiple identities) and is thus undesirable. The latter will induce incentive for cooperation, or grouping/pools, and might be considered both desirable (including cooperation and fractal governance) or undesirable (giving more power to the already powerful ones, as well as more prone to majority attack). The default choice, unless otherwise is clearly devised, would be to stick with linearity.   Reputation is non-transferrable, but can can be  reversibly  delegated. Reputation can be awarded (or distributed) by vote of current reputation holders, usually as part of an agent's contribution to the network \u2014together with award of tokens.   A VS can also decide to award reputation to an agent who hasn't contributed directly to this VS but is known to have reputation/competence from past activity. In that case usually the reputation distribution will not be tight up with tokens, but the voting procedure would be similar.   A more advanced (and important) feature is the   reputation flow  between curators upon their evaluations of proposals. Generally reputation should flow to curators who are found to be retrospectively aligned with decisions made by the VS (from those who are found misaligned, or those who haven't participated in voting), and in that way the VS induces systematic alignment of opinions (and interests) and defines its  emergent  value system. At the same time, misaligned agents become less effective within that VS, and are incentivized to open a new VS (where they define the first axis of alignment) or join another one better suiting their personal value system.   For example, agent Cony posts a contribution of a code repository. Agent Eva reviews that contribution and posts an evaluation to distribute 10 (say, DAOstack 1 ) tokens to agent Cony for that contribution. Then, the more reputable agents 2  endorse Eva's evaluation (i.e. posts similar evaluations \u2014and defining  similar  is, for example, where things get more complicated) the more Eva's reputation increases; and vice versa. So, basically when making an evaluation amounts to putting your reputation at risk \u2014and gaining if being \"right\". To define of \"being right\" requires more work.   The reputation flow element is perhaps the complex part of the reputation protocol, which needs to be carefully designed in a resistant way. (I.e. a way that makes is impossible for an agent to game the system and gain reputation without actually be retrospectively aligned with the VS it belongs to.) We'll elaborate on this in a separate chapter  below .  1  If the contribution and evaluation are within the DAOstack VS. Generally they can be in any other VS, that can be a sub-VS of DAOstack, or not.  \u21a9  2  Reputation is what counts, not number of people.  \u21a9", 
            "title": "Reputation"
        }, 
        {
            "location": "/DAO-protocol/#proposal", 
            "text": "... submitting a proposal for token/reputation-distribution scheme, for example:   contribution proposal with fixed reward and majority approval (Yes/No vote)  contribution proposal with open reward (numeric evaluation and reputation-weighted median)  token-sale distribution scheme 1: fixed-rate sale with no reputation distribution  token-sale distribution scheme 2: linearly-growing rate sale with exponentially-decreasing reputation distribution (20% in total)   ...", 
            "title": "Proposal"
        }, 
        {
            "location": "/DAO-protocol/#contribution", 
            "text": "", 
            "title": "Contribution"
        }, 
        {
            "location": "/DAO-protocol/#evaluation", 
            "text": "", 
            "title": "Evaluation"
        }, 
        {
            "location": "/DAO-protocol/#token-sale-schemes", 
            "text": "", 
            "title": "Token Sale Schemes"
        }, 
        {
            "location": "/DAO-protocol/#reputation-flow-i", 
            "text": "", 
            "title": "Reputation Flow - I"
        }, 
        {
            "location": "/DAO-protocol/#contract-architecture", 
            "text": "A preliminary contract architecture looks something like this:", 
            "title": "Contract Architecture"
        }, 
        {
            "location": "/concepts/", 
            "text": "An Overview of Arc\n\n\nFor more: \nRead the whitepaper\n\n\nArc is the lower layer of the DAOStack. It consists of several smart contracts deployed on the Ethereum blockchain that define the basic building blocks and standard components that can be used to implement any DAO.\n\n\n\n\nThe DAOStack:\n1. \nEthereum\n - \nBase blockchain.\n\n2. ArcHives - \nA public curated database of \nelement\ns, organizations and a shared place for community collaboration\n.\n3. \nArc - This project\n\n4. \nArc.js\n - \nJavaScript library that talks to Arc, built on top of web3.js.\n\n5. \nAlchemy\n (and more...) - \nCollaborative DApps, built on top of DAOStack using Arc.js\n\n\nThe Structure of a DAO\n\n\nEach DAO consists of the following components:\n\n\n\n\nNative token\n - \nA Standard \nERC20 token\n that defines the value system of the DAO, participants are rewarded for their contributions based on this token\n.\n\n\nReputation\n system\n - \nSimilar to native token but is \nnon-transferable\n, the reputation is used system is used to assign an importance to participants and their votes\n.\n\n\nAvatar\n - \nThis is the public facing part of the DAO that handles the interaction of the DAO with the rest of the world(interacing with other DAOs, paying third party participants, etc...)\n.\n\n\nSubscribed \nElements\n - \nThe set of \nSchemes\n and \nGlobal Constraints\n the DAO consists of\n.\n\n\n\n\nThose components are organized in a single smart contract called a \nController\n.\n\n\nElements\n\n\nThe main configurable and extendable building blocks of DAOs are: \nSchemes\n and \nGlobal Constraints\n, which are collectively called \nelements\n.\n\n \nSchemes\n \ndefine the \"do's\" of the DAO, defining rules under which actions are taken, based on the participants input.\n Examples of Schemes are:\n    * Rewarding contributions if other participants recognize them as worthy.\n    * Voting on proposals and automatically executing the chosen proposal.\n\n \nGlobal constraints\n \ndefine the \"don't\" of the DAO, they define conditions that must always hold and can prevent an action from being taken if it violates these conditions.\n Examples of Global Constraints are:\n    * Limiting the amount of tokens or reputation that can be minted per day.\n    * Blacklisting certain participants from performing certain actions.\n\n\nArcHives and the Developer Ecosystem\n\n\nCompendium\n\n\nDevelopers can create and extend \nelements\n to define more rules that DAOs can subscribe to. \nThose \nelements\n can then be registered(for a fee) to a public database called \nCompendium\n.", 
            "title": "Concepts"
        }, 
        {
            "location": "/concepts/#an-overview-of-arc", 
            "text": "For more:  Read the whitepaper  Arc is the lower layer of the DAOStack. It consists of several smart contracts deployed on the Ethereum blockchain that define the basic building blocks and standard components that can be used to implement any DAO.   The DAOStack:\n1.  Ethereum  -  Base blockchain. \n2. ArcHives -  A public curated database of  element s, organizations and a shared place for community collaboration .\n3.  Arc - This project \n4.  Arc.js  -  JavaScript library that talks to Arc, built on top of web3.js. \n5.  Alchemy  (and more...) -  Collaborative DApps, built on top of DAOStack using Arc.js", 
            "title": "An Overview of Arc"
        }, 
        {
            "location": "/concepts/#the-structure-of-a-dao", 
            "text": "Each DAO consists of the following components:   Native token  -  A Standard  ERC20 token  that defines the value system of the DAO, participants are rewarded for their contributions based on this token .  Reputation  system  -  Similar to native token but is  non-transferable , the reputation is used system is used to assign an importance to participants and their votes .  Avatar  -  This is the public facing part of the DAO that handles the interaction of the DAO with the rest of the world(interacing with other DAOs, paying third party participants, etc...) .  Subscribed  Elements  -  The set of  Schemes  and  Global Constraints  the DAO consists of .   Those components are organized in a single smart contract called a  Controller .", 
            "title": "The Structure of a DAO"
        }, 
        {
            "location": "/concepts/#elements", 
            "text": "The main configurable and extendable building blocks of DAOs are:  Schemes  and  Global Constraints , which are collectively called  elements .   Schemes   define the \"do's\" of the DAO, defining rules under which actions are taken, based on the participants input.  Examples of Schemes are:\n    * Rewarding contributions if other participants recognize them as worthy.\n    * Voting on proposals and automatically executing the chosen proposal.   Global constraints   define the \"don't\" of the DAO, they define conditions that must always hold and can prevent an action from being taken if it violates these conditions.  Examples of Global Constraints are:\n    * Limiting the amount of tokens or reputation that can be minted per day.\n    * Blacklisting certain participants from performing certain actions.", 
            "title": "Elements"
        }, 
        {
            "location": "/concepts/#archives-and-the-developer-ecosystem", 
            "text": "", 
            "title": "ArcHives and the Developer Ecosystem"
        }, 
        {
            "location": "/concepts/#compendium", 
            "text": "Developers can create and extend  elements  to define more rules that DAOs can subscribe to. \nThose  elements  can then be registered(for a fee) to a public database called  Compendium .", 
            "title": "Compendium"
        }, 
        {
            "location": "/roadmap/", 
            "text": "Roadmap for the DOAStack\n\n\nDAOStack is: \n\n\n\n\nA collective of programmers and blockchain experts that is growing and bootstrapping itself into a DAO while building the necessary blockchain (and other) code for itself. \n\n\nIt's, in a sense, a DAO accelerator, making the infrastructure for DAOs and helping them bootstrap. \n\n\nA blockchain-dev guild, offering blockchain (and perhaps more general) development service for others. \n\n\nEconomic framework for the cooperation of DAO-related companies in the blockchain space, by incentivizing the building and sharing of related components, design for interoperability and co-creation.\n\n\n\n\nWe aim to launch an MVP platform for a collaborative DAO before the end of Q1 and use it for further collaborative development.\n\n\nFormal and informal whitepaper\n\n\nThe whitepaper describes the general structure of a collaborative DAO and the particular protocol (and code) of DAOStack. The goal is to produce two versions: an \ninformal version\n that explains the general concepts and ideas in layman's terms, and a \nformal specification\n in which all aspects are rigorously defined. Rough content should include:\n\n\n\n\nBackground, intro, definitions, basics, vision, purpose, mission\n\n\nGovernance model (and its potential evolution) \n\n\nToken and business model, including investment scheme\n\n\nCode \n\n\n\n\nSmart Contracts\n\n\nThe core of the DAOStack is a set of \nSmart Contracts\n, written in Solidity, and deployed on the Ethereum blockchain. These contracts will implement at least the following functionality (and much more over time):\n\n\n\n\nMain architecture for upgradable, modular and secure distribution of Tokens and Reputation upon the vote of reputation holders\n\n\nVoting on (change of) of core value system\n\n\nVoting on distribution-scheme proposals\n\n\nA number of proposal schemas, including: Median voting, Yes/No proposal, investment distribution \n\n\nDocumentations\n\n\n\n\nSee also \nthis issue\n\n\nUI\n\n\nThe User Interface is a DApp written in JavaScript, that reputation holders can use to interact with the DAO. It will provide at least the following functionalities:\n\n\n\n\nMake proposals for distribution of tokens and reputation \n\n\nMake proposals to change the value system (i.e. the main contract)\n\n\nPropose contribution to be considered for Token and reputation awards\n\n\nVote for the above-mentioned proposals. Such votes can be either binary (yes/no), or with a ranged number (if vote is based on Reputation-Weighed Median, i.e. the amount to be distributed is determined as the median of all votes, weighed by reputation)\n\n\nAccess information about agents (tokens and reputation balances), objects (proposals, contributions, public votes) and value systems (and their properties).\n\n\nTransfer tokens\n\n\nDelegate reputation\n\n\n\n\nMarketing\n\n\nTowards going \"public\" and launching an ICO, the DAOStack with also need: \n\n\n\n\nA website explaining the project (including the above UI)\n\n\nSimple documentation, general story, blog and deck\n\n\nFirst set of  staked-in partners/companies\n\n\nEarly investors/projects", 
            "title": "Roadmap for the DOAStack"
        }, 
        {
            "location": "/roadmap/#roadmap-for-the-doastack", 
            "text": "DAOStack is:    A collective of programmers and blockchain experts that is growing and bootstrapping itself into a DAO while building the necessary blockchain (and other) code for itself.   It's, in a sense, a DAO accelerator, making the infrastructure for DAOs and helping them bootstrap.   A blockchain-dev guild, offering blockchain (and perhaps more general) development service for others.   Economic framework for the cooperation of DAO-related companies in the blockchain space, by incentivizing the building and sharing of related components, design for interoperability and co-creation.   We aim to launch an MVP platform for a collaborative DAO before the end of Q1 and use it for further collaborative development.", 
            "title": "Roadmap for the DOAStack"
        }, 
        {
            "location": "/roadmap/#formal-and-informal-whitepaper", 
            "text": "The whitepaper describes the general structure of a collaborative DAO and the particular protocol (and code) of DAOStack. The goal is to produce two versions: an  informal version  that explains the general concepts and ideas in layman's terms, and a  formal specification  in which all aspects are rigorously defined. Rough content should include:   Background, intro, definitions, basics, vision, purpose, mission  Governance model (and its potential evolution)   Token and business model, including investment scheme  Code", 
            "title": "Formal and informal whitepaper"
        }, 
        {
            "location": "/roadmap/#smart-contracts", 
            "text": "The core of the DAOStack is a set of  Smart Contracts , written in Solidity, and deployed on the Ethereum blockchain. These contracts will implement at least the following functionality (and much more over time):   Main architecture for upgradable, modular and secure distribution of Tokens and Reputation upon the vote of reputation holders  Voting on (change of) of core value system  Voting on distribution-scheme proposals  A number of proposal schemas, including: Median voting, Yes/No proposal, investment distribution   Documentations   See also  this issue", 
            "title": "Smart Contracts"
        }, 
        {
            "location": "/roadmap/#ui", 
            "text": "The User Interface is a DApp written in JavaScript, that reputation holders can use to interact with the DAO. It will provide at least the following functionalities:   Make proposals for distribution of tokens and reputation   Make proposals to change the value system (i.e. the main contract)  Propose contribution to be considered for Token and reputation awards  Vote for the above-mentioned proposals. Such votes can be either binary (yes/no), or with a ranged number (if vote is based on Reputation-Weighed Median, i.e. the amount to be distributed is determined as the median of all votes, weighed by reputation)  Access information about agents (tokens and reputation balances), objects (proposals, contributions, public votes) and value systems (and their properties).  Transfer tokens  Delegate reputation", 
            "title": "UI"
        }, 
        {
            "location": "/roadmap/#marketing", 
            "text": "Towards going \"public\" and launching an ICO, the DAOStack with also need:    A website explaining the project (including the above UI)  Simple documentation, general story, blog and deck  First set of  staked-in partners/companies  Early investors/projects", 
            "title": "Marketing"
        }, 
        {
            "location": "/guides/building_a_simple_charity/", 
            "text": "Building a simple charity\n\n\nTODO ...", 
            "title": "Building a simple charity"
        }, 
        {
            "location": "/guides/building_a_simple_charity/#building-a-simple-charity", 
            "text": "TODO ...", 
            "title": "Building a simple charity"
        }, 
        {
            "location": "/guides/creating_a_register_scheme_time_lock_constraint/", 
            "text": "Creating a register scheme time lock constraint\n\n\nTODO ...", 
            "title": "Creating a register scheme time lock constraint"
        }, 
        {
            "location": "/guides/creating_a_register_scheme_time_lock_constraint/#creating-a-register-scheme-time-lock-constraint", 
            "text": "TODO ...", 
            "title": "Creating a register scheme time lock constraint"
        }, 
        {
            "location": "/guides/", 
            "text": "This pages includes some examples of building DAOs using \nArc\n, and creating your own \nelements\n.\n\n\nPrerequisites: \n\n\n\n\nInstall \nArc\n in your project\n.\n\n\nGet familiar with the \nconcepts\n involved", 
            "title": "Home"
        }, 
        {
            "location": "/reference/", 
            "text": "Note\n\n\nBefore delving into the reference it is recommended to first get familiar with the \nconcepts\n involved.\n\n\n\n\nThis is where you'll find:\n\n\n\n\nDetailed explanations of each source file in Arc.\n\n\nUseful how-to's that demonstrate the use of each contract.\n\n\nTechnical reference documentation of each contract.", 
            "title": "Home"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/", 
            "text": "AbsoluteVote\n\n\nsee the source\n\n\nCode deposit cost: \nless than 862000 gas.\n\n\nExecution cost: \nless than 891 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 862891 gas.\n\n\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nevent\n VoteProposal\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_voter\n \nof type address\n\n\n_vote\n \nof type uint256\n\n\n_reputation\n \nof type uint256\n\n\n_isOwnerVote\n \nof type bool\n\n\n\n\nevent\n NewProposal\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_numOfChoices\n \nof type uint256\n\n\n_proposer\n \nof type address\n\n\n_paramsHash\n \nof type bytes32\n\n\n\n\nevent\n ExecuteProposal\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_decision\n \nof type uint256\n\n\n\n\nevent\n CancelVoting\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_voter\n \nof type address\n\n\n\n\nevent\n CancelProposal\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n votesStatus\n\n\n\n\nvotesStatus returns the number of yes, no, and abstain and if the proposal is ended of a given proposal id\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nvotes array of votes for each choice\n\n\nfunction\n setParameters\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_reputationSystem\n \nof type address\n\n\n_precReq\n \nof type uint256\n\n\n_allowOwner\n \nof type bool\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n voteInfo\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_voter\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n voteWithSpecifiedAmounts\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_vote\n \nof type uint256\n\n\n_rep\n \nof type uint256\n\n\nunnamed\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n vote\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_vote\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n propose\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_numOfChoices\n \nof type uint256\n\n\n_paramsHash\n \nof type bytes32\n\n\n_avatar\n \nof type address\n\n\n_executable\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n proposals\n\n\nExecution cost: \nless than 2188 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nowner\n \nof type address\n\n\navatar\n \nof type address\n\n\nnumOfChoices\n \nof type uint256\n\n\nexecutable\n \nof type address\n\n\nparamsHash\n \nof type bytes32\n\n\ntotalVotes\n \nof type uint256\n\n\nopen\n \nof type bool\n\n\n\n\nfunction\n parameters\n\n\nExecution cost: \nless than 1169 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nreputationSystem\n \nof type address\n\n\nprecReq\n \nof type uint256\n\n\nallowOwner\n \nof type bool\n\n\n\n\nfunction\n ownerVote\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_vote\n \nof type uint256\n\n\n_voter\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n isVotable\n\n\n\n\nisVotable check if the proposal is votable\n\n\n\n\nExecution cost: \nless than 790 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nbool true or false\n\n\nfunction\n getParametersHash\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | pure\n\n\nInputs:\n\n\n\n\n_reputationSystem\n \nof type address\n\n\n_precReq\n \nof type uint256\n\n\n_allowOwner\n \nof type bool\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n getNumberOfChoices\n\n\n\n\ngetNumberOfChoices returns the number of choices possible in this proposal\n\n\n\n\nExecution cost: \nless than 734 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nuint that contains number of choices\n\n\nfunction\n execute\n\n\n\n\nexecute check if the proposal has been decided, and if so, execute the proposal\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the id of the proposal\n\n\n\n\nbool true - the proposal has been executed             false - otherwise.\n\n\nfunction\n cancelVote\n\n\n\n\nCancel the vote of the msg.sender: subtract the reputation amount from the votes and delete the voter from the proposal struct\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- id of the proposal\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n cancelProposal\n\n\n\n\nCancel a proposal, only the owner can call this function and only if allowOwner flag is true.\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the proposal ID\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "AbsoluteVote"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#absolutevote", 
            "text": "see the source  Code deposit cost:  less than 862000 gas.  Execution cost:  less than 891 gas.  Total deploy cost(deposit + execution):  less than 862891 gas.", 
            "title": "AbsoluteVote"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#event-voteproposal", 
            "text": "Params:   _proposalId   of type bytes32  _voter   of type address  _vote   of type uint256  _reputation   of type uint256  _isOwnerVote   of type bool", 
            "title": "event VoteProposal"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#event-newproposal", 
            "text": "Params:   _proposalId   of type bytes32  _numOfChoices   of type uint256  _proposer   of type address  _paramsHash   of type bytes32", 
            "title": "event NewProposal"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#event-executeproposal", 
            "text": "Params:   _proposalId   of type bytes32  _decision   of type uint256", 
            "title": "event ExecuteProposal"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#event-cancelvoting", 
            "text": "Params:   _proposalId   of type bytes32  _voter   of type address", 
            "title": "event CancelVoting"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#event-cancelproposal", 
            "text": "Params:   _proposalId   of type bytes32", 
            "title": "event CancelProposal"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#function-votesstatus", 
            "text": "votesStatus returns the number of yes, no, and abstain and if the proposal is ended of a given proposal id   Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   votes array of votes for each choice", 
            "title": "function votesStatus"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#function-setparameters", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _reputationSystem   of type address  _precReq   of type uint256  _allowOwner   of type bool   Returns:   unnamed   of type bytes32", 
            "title": "function setParameters"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#function-voteinfo", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32  _voter   of type address   Returns:   unnamed   of type uint256  unnamed   of type uint256", 
            "title": "function voteInfo"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#function-votewithspecifiedamounts", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _vote   of type uint256  _rep   of type uint256  unnamed   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function voteWithSpecifiedAmounts"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#function-vote", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _vote   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function vote"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#function-propose", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _numOfChoices   of type uint256  _paramsHash   of type bytes32  _avatar   of type address  _executable   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function propose"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#function-proposals", 
            "text": "Execution cost:  less than 2188 gas.  constant | view  Inputs:   unnamed   of type bytes32   Returns:   owner   of type address  avatar   of type address  numOfChoices   of type uint256  executable   of type address  paramsHash   of type bytes32  totalVotes   of type uint256  open   of type bool", 
            "title": "function proposals"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#function-parameters", 
            "text": "Execution cost:  less than 1169 gas.  constant | view  Inputs:   unnamed   of type bytes32   Returns:   reputationSystem   of type address  precReq   of type uint256  allowOwner   of type bool", 
            "title": "function parameters"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#function-ownervote", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _vote   of type uint256  _voter   of type address   Returns:   unnamed   of type bool", 
            "title": "function ownerVote"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#function-isvotable", 
            "text": "isVotable check if the proposal is votable   Execution cost:  less than 790 gas.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   bool true or false", 
            "title": "function isVotable"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#function-getparametershash", 
            "text": "Execution cost:  No bound available.  constant | pure  Inputs:   _reputationSystem   of type address  _precReq   of type uint256  _allowOwner   of type bool   Returns:   unnamed   of type bytes32", 
            "title": "function getParametersHash"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#function-getnumberofchoices", 
            "text": "getNumberOfChoices returns the number of choices possible in this proposal   Execution cost:  less than 734 gas.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   uint that contains number of choices", 
            "title": "function getNumberOfChoices"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#function-execute", 
            "text": "execute check if the proposal has been decided, and if so, execute the proposal   Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32- the id of the proposal   bool true - the proposal has been executed             false - otherwise.", 
            "title": "function execute"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#function-cancelvote", 
            "text": "Cancel the vote of the msg.sender: subtract the reputation amount from the votes and delete the voter from the proposal struct   Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32- id of the proposal   Returns:  Nothing", 
            "title": "function cancelVote"
        }, 
        {
            "location": "/reference/VotingMachines/AbsoluteVote/#function-cancelproposal", 
            "text": "Cancel a proposal, only the owner can call this function and only if allowOwner flag is true.   Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32- the proposal ID   Returns:   unnamed   of type bool", 
            "title": "function cancelProposal"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/", 
            "text": "GenesisProtocol\n\n\nsee the source\n\n\nCode deposit cost: \nless than 2022200 gas.\n\n\nExecution cost: \nless than 42795 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 2064995 gas.\n\n\n\n\nA governance contract -an organization's voting machine scheme.\n\n\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n GenesisProtocol(address)\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\n\n\n_stakingToken\n \nof type address\n\n\n\n\nEvents\n\n\nevent\n VoteProposal\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_voter\n \nof type address\n\n\n_vote\n \nof type uint256\n\n\n_reputation\n \nof type uint256\n\n\n\n\nevent\n Stake\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_voter\n \nof type address\n\n\n_vote\n \nof type uint256\n\n\n_amount\n \nof type uint256\n\n\n\n\nevent\n Redeem\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_beneficiary\n \nof type address\n\n\n_amount\n \nof type uint256\n\n\n\n\nevent\n OwnershipTransferred\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type address\n\n\nnewOwner\n \nof type address\n\n\n\n\nevent\n NewProposal\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_numOfChoices\n \nof type uint256\n\n\n_proposer\n \nof type address\n\n\n_paramsHash\n \nof type bytes32\n\n\n\n\nevent\n LogNewProposal\n\n\nParams:\n\n\n\n\nproposalId\n \nof type bytes32\n\n\n\n\nevent\n ExecuteProposal\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_decision\n \nof type uint256\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n staker\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_staker\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n parameters\n\n\nExecution cost: \nless than 2119 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nreputationSystem\n \nof type address\n\n\nnonBoostedVoteRequiredPercentage\n \nof type uint256\n\n\nnonBoostedVotePeriodLimit\n \nof type uint256\n\n\nboostedVotePeriodLimit\n \nof type uint256\n\n\nscoreThreshold\n \nof type uint256\n\n\ngovernanceFormulasInterface\n \nof type address\n\n\nminimumStakingFee\n \nof type uint256\n\n\n\n\nfunction\n redeemAmount\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_player\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n updateParameters\n\n\nExecution cost: \nless than 20572 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_hashedParameters\n \nof type bytes32\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n stake\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_vote\n \nof type uint256\n\n\n_amount\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n proposals\n\n\nExecution cost: \nless than 2945 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\navatar\n \nof type address\n\n\nnumOfChoices\n \nof type uint256\n\n\nexecutable\n \nof type address\n\n\ntotalVotes\n \nof type uint256\n\n\ntotalStakes\n \nof type uint256\n\n\nsubmittedTime\n \nof type uint256\n\n\nboostedPhaseTime\n \nof type uint256\n\n\nstate\n \nof type uint8\n\n\nwinningVote\n \nof type uint256\n\n\n\n\nfunction\n proposalAvatar\n\n\n\n\nproposalAvatar return the avatar for a given proposal\n\n\n\n\nExecution cost: \nless than 1387 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nuint total reputation supply\n\n\nfunction\n transferOwnership\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost: \nless than 23511 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nnewOwner\n \nof type address- The address to transfer ownership to.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n winningVote\n\n\n\n\nvoteStake return the winningVote for a given proposal\n\n\n\n\nExecution cost: \nless than 690 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nuint winningVote\n\n\nfunction\n setParameters\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_reputationSystem\n \nof type address\n\n\n_nonBoostedVoteRequiredPercentage\n \nof type uint256\n\n\n_nonBoostedVotePeriodLimit\n \nof type uint256\n\n\n_boostedVotePeriodLimit\n \nof type uint256\n\n\n_scoreThreshold\n \nof type uint256\n\n\n_governanceFormulasInterface\n \nof type address\n\n\n_minimumStakingFee\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n scoreThreshold\n\n\n\n\nscoreThreshold return the initial scoreThreshold param which is set for a given organization.\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address- the organization's avatar\n\n\n\n\nuint total reputation supply\n\n\nfunction\n state\n\n\n\n\nvoteStake return the state for a given proposal\n\n\n\n\nExecution cost: \nless than 804 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nProposalState proposal state\n\n\nfunction\n voteStake\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_vote\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n stakingToken\n\n\nExecution cost: \nless than 875 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n proposalStatus\n\n\n\n\nproposalStatus return the total votes and stakes for a given proposal\n\n\n\n\nExecution cost: \nless than 1070 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nuint totalVotesuint totalStakes\n\n\nfunction\n shouldBoost\n\n\n\n\nshouldBoost check if a proposal should be shifted to boosted phase.\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nbool true or false.\n\n\nfunction\n propose\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_numOfChoices\n \nof type uint256\n\n\n_paramsHash\n \nof type bytes32\n\n\n_avatar\n \nof type address\n\n\n_executable\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n voteInfo\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_voter\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n redeem\n\n\n\n\nredeem redeem a reward for a successful stake.\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nbool true or false.\n\n\nfunction\n votesStatus\n\n\n\n\nvotesStatus returns the number of yes, no, and abstain and if the proposal is ended of a given proposal id\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nvotes array of votes for each choice\n\n\nfunction\n score\n\n\n\n\nscore return the proposal score\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nuint proposal score.\n\n\nfunction\n vote\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_vote\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n totalReputationSupply\n\n\n\n\ntotalReputationSupply return the total reputation supply for a given proposal\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nuint total reputation supply\n\n\nfunction\n voteWithSpecifiedAmounts\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_vote\n \nof type uint256\n\n\n_rep\n \nof type uint256\n\n\nunnamed\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n threshold\n\n\n\n\nthreshold return the organization's score threshold which required by a proposal to shift to boosted state. This threshold is dynamically set and it depend on the number of boosted proposal.\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address- the organization avatar\n\n\n\n\nuint scoreThreshold.\n\n\nfunction\n ownerVote\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\nunnamed\n \nof type uint256\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n owner\n\n\nExecution cost: \nless than 985 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n orgBoostedProposalsCnt\n\n\nExecution cost: \nless than 1221 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n isVotable\n\n\n\n\nisVotable check if the proposal is votable\n\n\n\n\nExecution cost: \nless than 1443 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nbool true or false\n\n\nfunction\n hashedParameters\n\n\nExecution cost: \nless than 1184 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n getParametersHash\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | pure\n\n\nInputs:\n\n\n\n\n_reputationSystem\n \nof type address\n\n\n_nonBoostedVoteRequiredPercentage\n \nof type uint256\n\n\n_nonBoostedVotePeriodLimit\n \nof type uint256\n\n\n_boostedVotePeriodLimit\n \nof type uint256\n\n\n_scoreThreshold\n \nof type uint256\n\n\n_governanceFormulasInterface\n \nof type address\n\n\n_minimumStakingFee\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n getNumberOfChoices\n\n\n\n\ngetNumberOfChoices returns the number of choices possible in this proposal\n\n\n\n\nExecution cost: \nless than 998 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposals\n\n\n\n\nuint that contains number of choices\n\n\nfunction\n execute\n\n\n\n\nexecute check if the proposal has been decided, and if so, execute the proposal\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the id of the proposal\n\n\n\n\nbool true - the proposal has been executed             false - otherwise.\n\n\nfunction\n cancelVote\n\n\n\n\nCancel the vote of the msg.sender: subtract the reputation amount from the votes and delete the voter from the proposal struct\n\n\n\n\nExecution cost: \nless than 1321 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- id of the proposal\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n cancelProposal\n\n\n\n\nCancel a proposal, only the owner can call this function and only if allowOwner flag is true.\n\n\n\n\nExecution cost: \nless than 1106 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the proposal ID\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "GenesisProtocol"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#genesisprotocol", 
            "text": "see the source  Code deposit cost:  less than 2022200 gas.  Execution cost:  less than 42795 gas.  Total deploy cost(deposit + execution):  less than 2064995 gas.   A governance contract -an organization's voting machine scheme.", 
            "title": "GenesisProtocol"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#constructor-genesisprotocoladdress", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:   _stakingToken   of type address", 
            "title": "constructor GenesisProtocol(address)"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#event-voteproposal", 
            "text": "Params:   _proposalId   of type bytes32  _voter   of type address  _vote   of type uint256  _reputation   of type uint256", 
            "title": "event VoteProposal"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#event-stake", 
            "text": "Params:   _proposalId   of type bytes32  _voter   of type address  _vote   of type uint256  _amount   of type uint256", 
            "title": "event Stake"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#event-redeem", 
            "text": "Params:   _proposalId   of type bytes32  _beneficiary   of type address  _amount   of type uint256", 
            "title": "event Redeem"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#event-ownershiptransferred", 
            "text": "Params:   previousOwner   of type address  newOwner   of type address", 
            "title": "event OwnershipTransferred"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#event-newproposal", 
            "text": "Params:   _proposalId   of type bytes32  _numOfChoices   of type uint256  _proposer   of type address  _paramsHash   of type bytes32", 
            "title": "event NewProposal"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#event-lognewproposal", 
            "text": "Params:   proposalId   of type bytes32", 
            "title": "event LogNewProposal"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#event-executeproposal", 
            "text": "Params:   _proposalId   of type bytes32  _decision   of type uint256", 
            "title": "event ExecuteProposal"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-staker", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32  _staker   of type address   Returns:   unnamed   of type uint256  unnamed   of type uint256", 
            "title": "function staker"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-parameters", 
            "text": "Execution cost:  less than 2119 gas.  constant | view  Inputs:   unnamed   of type bytes32   Returns:   reputationSystem   of type address  nonBoostedVoteRequiredPercentage   of type uint256  nonBoostedVotePeriodLimit   of type uint256  boostedVotePeriodLimit   of type uint256  scoreThreshold   of type uint256  governanceFormulasInterface   of type address  minimumStakingFee   of type uint256", 
            "title": "function parameters"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-redeemamount", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32  _player   of type address   Returns:   unnamed   of type uint256", 
            "title": "function redeemAmount"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-updateparameters", 
            "text": "Execution cost:  less than 20572 gas.  nonpayable  Inputs:   _hashedParameters   of type bytes32   Returns:  Nothing", 
            "title": "function updateParameters"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-stake", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _vote   of type uint256  _amount   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function stake"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-proposals", 
            "text": "Execution cost:  less than 2945 gas.  constant | view  Inputs:   unnamed   of type bytes32   Returns:   avatar   of type address  numOfChoices   of type uint256  executable   of type address  totalVotes   of type uint256  totalStakes   of type uint256  submittedTime   of type uint256  boostedPhaseTime   of type uint256  state   of type uint8  winningVote   of type uint256", 
            "title": "function proposals"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-proposalavatar", 
            "text": "proposalAvatar return the avatar for a given proposal   Execution cost:  less than 1387 gas.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   uint total reputation supply", 
            "title": "function proposalAvatar"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-transferownership", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost:  less than 23511 gas.  nonpayable  Inputs:   newOwner   of type address- The address to transfer ownership to.   Returns:  Nothing", 
            "title": "function transferOwnership"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-winningvote", 
            "text": "voteStake return the winningVote for a given proposal   Execution cost:  less than 690 gas.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   uint winningVote", 
            "title": "function winningVote"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-setparameters", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _reputationSystem   of type address  _nonBoostedVoteRequiredPercentage   of type uint256  _nonBoostedVotePeriodLimit   of type uint256  _boostedVotePeriodLimit   of type uint256  _scoreThreshold   of type uint256  _governanceFormulasInterface   of type address  _minimumStakingFee   of type uint256   Returns:   unnamed   of type bytes32", 
            "title": "function setParameters"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-scorethreshold", 
            "text": "scoreThreshold return the initial scoreThreshold param which is set for a given organization.   Execution cost:  No bound available.  constant | view  Inputs:   _avatar   of type address- the organization's avatar   uint total reputation supply", 
            "title": "function scoreThreshold"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-state", 
            "text": "voteStake return the state for a given proposal   Execution cost:  less than 804 gas.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   ProposalState proposal state", 
            "title": "function state"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-votestake", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32  _vote   of type uint256   Returns:   unnamed   of type uint256", 
            "title": "function voteStake"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-stakingtoken", 
            "text": "Execution cost:  less than 875 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function stakingToken"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-proposalstatus", 
            "text": "proposalStatus return the total votes and stakes for a given proposal   Execution cost:  less than 1070 gas.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   uint totalVotesuint totalStakes", 
            "title": "function proposalStatus"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-shouldboost", 
            "text": "shouldBoost check if a proposal should be shifted to boosted phase.   Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   bool true or false.", 
            "title": "function shouldBoost"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-propose", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _numOfChoices   of type uint256  _paramsHash   of type bytes32  _avatar   of type address  _executable   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function propose"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-voteinfo", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32  _voter   of type address   Returns:   unnamed   of type uint256  unnamed   of type uint256", 
            "title": "function voteInfo"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-redeem", 
            "text": "redeem redeem a reward for a successful stake.   Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32- the ID of the proposal   bool true or false.", 
            "title": "function redeem"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-votesstatus", 
            "text": "votesStatus returns the number of yes, no, and abstain and if the proposal is ended of a given proposal id   Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   votes array of votes for each choice", 
            "title": "function votesStatus"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-score", 
            "text": "score return the proposal score   Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   uint proposal score.", 
            "title": "function score"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-vote", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _vote   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function vote"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-totalreputationsupply", 
            "text": "totalReputationSupply return the total reputation supply for a given proposal   Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   uint total reputation supply", 
            "title": "function totalReputationSupply"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-votewithspecifiedamounts", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _vote   of type uint256  _rep   of type uint256  unnamed   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function voteWithSpecifiedAmounts"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-threshold", 
            "text": "threshold return the organization's score threshold which required by a proposal to shift to boosted state. This threshold is dynamically set and it depend on the number of boosted proposal.   Execution cost:  No bound available.  constant | view  Inputs:   _avatar   of type address- the organization avatar   uint scoreThreshold.", 
            "title": "function threshold"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-ownervote", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  unnamed   of type uint256  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function ownerVote"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-owner", 
            "text": "Execution cost:  less than 985 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function owner"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-orgboostedproposalscnt", 
            "text": "Execution cost:  less than 1221 gas.  constant | view  Inputs:   unnamed   of type address   Returns:   unnamed   of type uint256", 
            "title": "function orgBoostedProposalsCnt"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-isvotable", 
            "text": "isVotable check if the proposal is votable   Execution cost:  less than 1443 gas.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   bool true or false", 
            "title": "function isVotable"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-hashedparameters", 
            "text": "Execution cost:  less than 1184 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type bytes32", 
            "title": "function hashedParameters"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-getparametershash", 
            "text": "Execution cost:  No bound available.  constant | pure  Inputs:   _reputationSystem   of type address  _nonBoostedVoteRequiredPercentage   of type uint256  _nonBoostedVotePeriodLimit   of type uint256  _boostedVotePeriodLimit   of type uint256  _scoreThreshold   of type uint256  _governanceFormulasInterface   of type address  _minimumStakingFee   of type uint256   Returns:   unnamed   of type bytes32", 
            "title": "function getParametersHash"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-getnumberofchoices", 
            "text": "getNumberOfChoices returns the number of choices possible in this proposal   Execution cost:  less than 998 gas.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposals   uint that contains number of choices", 
            "title": "function getNumberOfChoices"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-execute", 
            "text": "execute check if the proposal has been decided, and if so, execute the proposal   Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32- the id of the proposal   bool true - the proposal has been executed             false - otherwise.", 
            "title": "function execute"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-cancelvote", 
            "text": "Cancel the vote of the msg.sender: subtract the reputation amount from the votes and delete the voter from the proposal struct   Execution cost:  less than 1321 gas.  nonpayable  Inputs:   _proposalId   of type bytes32- id of the proposal   Returns:  Nothing", 
            "title": "function cancelVote"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocol/#function-cancelproposal", 
            "text": "Cancel a proposal, only the owner can call this function and only if allowOwner flag is true.   Execution cost:  less than 1106 gas.  nonpayable  Inputs:   _proposalId   of type bytes32- the proposal ID   Returns:   unnamed   of type bool", 
            "title": "function cancelProposal"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocolFormulasInterface/", 
            "text": "GenesisProtocolFormulasInterface\n\n\nsee the source\n\n\nCode deposit cost: \nNo bound available.\n\n\nExecution cost: \nNo bound available.\n\n\nTotal deploy cost(deposit + execution): \nNo bound available.\n\n\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nNothing\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n threshold\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n shouldBoost\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n score\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n redeemAmount\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_staker\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256", 
            "title": "GenesisProtocolFormulasInterface"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocolFormulasInterface/#genesisprotocolformulasinterface", 
            "text": "see the source  Code deposit cost:  No bound available.  Execution cost:  No bound available.  Total deploy cost(deposit + execution):  No bound available.", 
            "title": "GenesisProtocolFormulasInterface"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocolFormulasInterface/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocolFormulasInterface/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocolFormulasInterface/#events", 
            "text": "Nothing", 
            "title": "Events"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocolFormulasInterface/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocolFormulasInterface/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocolFormulasInterface/#function-threshold", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _avatar   of type address   Returns:   unnamed   of type uint256", 
            "title": "function threshold"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocolFormulasInterface/#function-shouldboost", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32   Returns:   unnamed   of type bool", 
            "title": "function shouldBoost"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocolFormulasInterface/#function-score", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32   Returns:   unnamed   of type uint256", 
            "title": "function score"
        }, 
        {
            "location": "/reference/VotingMachines/GenesisProtocolFormulasInterface/#function-redeemamount", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32  _staker   of type address   Returns:   unnamed   of type uint256", 
            "title": "function redeemAmount"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/", 
            "text": "IntVoteInterface\n\n\nsee the source\n\n\nCode deposit cost: \nNo bound available.\n\n\nExecution cost: \nNo bound available.\n\n\nTotal deploy cost(deposit + execution): \nNo bound available.\n\n\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nNothing\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n voteWithSpecifiedAmounts\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_vote\n \nof type uint256\n\n\n_rep\n \nof type uint256\n\n\n_token\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n vote\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_vote\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n propose\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_numOfChoices\n \nof type uint256\n\n\n_proposalParameters\n \nof type bytes32\n\n\n_avatar\n \nof type address\n\n\n_executable\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n ownerVote\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_vote\n \nof type uint256\n\n\n_voter\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n isVotable\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n getNumberOfChoices\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n execute\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n cancelVote\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n cancelProposal\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "IntVoteInterface"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/#intvoteinterface", 
            "text": "see the source  Code deposit cost:  No bound available.  Execution cost:  No bound available.  Total deploy cost(deposit + execution):  No bound available.", 
            "title": "IntVoteInterface"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/#events", 
            "text": "Nothing", 
            "title": "Events"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/#function-votewithspecifiedamounts", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _vote   of type uint256  _rep   of type uint256  _token   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function voteWithSpecifiedAmounts"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/#function-vote", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _vote   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function vote"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/#function-propose", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _numOfChoices   of type uint256  _proposalParameters   of type bytes32  _avatar   of type address  _executable   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function propose"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/#function-ownervote", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _vote   of type uint256  _voter   of type address   Returns:   unnamed   of type bool", 
            "title": "function ownerVote"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/#function-isvotable", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32   Returns:   unnamed   of type bool", 
            "title": "function isVotable"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/#function-getnumberofchoices", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32   Returns:   unnamed   of type uint256", 
            "title": "function getNumberOfChoices"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/#function-execute", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32   Returns:   unnamed   of type bool", 
            "title": "function execute"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/#function-cancelvote", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32   Returns:  Nothing", 
            "title": "function cancelVote"
        }, 
        {
            "location": "/reference/VotingMachines/IntVoteInterface/#function-cancelproposal", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32   Returns:   unnamed   of type bool", 
            "title": "function cancelProposal"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/", 
            "text": "QuorumVote\n\n\nsee the source\n\n\nCode deposit cost: \nless than 924000 gas.\n\n\nExecution cost: \nless than 957 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 924957 gas.\n\n\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nevent\n VoteProposal\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_voter\n \nof type address\n\n\n_vote\n \nof type uint256\n\n\n_reputation\n \nof type uint256\n\n\n_isOwnerVote\n \nof type bool\n\n\n\n\nevent\n NewProposal\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_numOfChoices\n \nof type uint256\n\n\n_proposer\n \nof type address\n\n\n_paramsHash\n \nof type bytes32\n\n\n\n\nevent\n ExecuteProposal\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_decision\n \nof type uint256\n\n\n\n\nevent\n CancelVoting\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_voter\n \nof type address\n\n\n\n\nevent\n CancelProposal\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n votesStatus\n\n\n\n\nvotesStatus returns the number of yes, no, and abstain and if the proposal is ended of a given proposal id\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nvotes array of votes for each choice\n\n\nfunction\n setParameters\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_reputationSystem\n \nof type address\n\n\n_precReq\n \nof type uint256\n\n\n_allowOwner\n \nof type bool\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n voteInfo\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_voter\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n voteWithSpecifiedAmounts\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_vote\n \nof type uint256\n\n\n_rep\n \nof type uint256\n\n\nunnamed\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n vote\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_vote\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n propose\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_numOfChoices\n \nof type uint256\n\n\n_paramsHash\n \nof type bytes32\n\n\n_avatar\n \nof type address\n\n\n_executable\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n proposals\n\n\nExecution cost: \nless than 2188 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nowner\n \nof type address\n\n\navatar\n \nof type address\n\n\nnumOfChoices\n \nof type uint256\n\n\nexecutable\n \nof type address\n\n\nparamsHash\n \nof type bytes32\n\n\ntotalVotes\n \nof type uint256\n\n\nopen\n \nof type bool\n\n\n\n\nfunction\n parameters\n\n\nExecution cost: \nless than 1169 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nreputationSystem\n \nof type address\n\n\nprecReq\n \nof type uint256\n\n\nallowOwner\n \nof type bool\n\n\n\n\nfunction\n ownerVote\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_vote\n \nof type uint256\n\n\n_voter\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n isVotable\n\n\n\n\nisVotable check if the proposal is votable\n\n\n\n\nExecution cost: \nless than 790 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nbool true or false\n\n\nfunction\n getParametersHash\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | pure\n\n\nInputs:\n\n\n\n\n_reputationSystem\n \nof type address\n\n\n_precReq\n \nof type uint256\n\n\n_allowOwner\n \nof type bool\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n getNumberOfChoices\n\n\n\n\ngetNumberOfChoices returns the number of choices possible in this proposal\n\n\n\n\nExecution cost: \nless than 734 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nuint that contains number of choices\n\n\nfunction\n execute\n\n\n\n\ncheck if the proposal has been decided, and if so, execute the proposal\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the id of the proposal\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n cancelVote\n\n\n\n\nCancel the vote of the msg.sender: subtract the reputation amount from the votes and delete the voter from the proposal struct\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- id of the proposal\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n cancelProposal\n\n\n\n\nCancel a proposal, only the owner can call this function and only if allowOwner flag is true.\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the proposal ID\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "QuorumVote"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#quorumvote", 
            "text": "see the source  Code deposit cost:  less than 924000 gas.  Execution cost:  less than 957 gas.  Total deploy cost(deposit + execution):  less than 924957 gas.", 
            "title": "QuorumVote"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#event-voteproposal", 
            "text": "Params:   _proposalId   of type bytes32  _voter   of type address  _vote   of type uint256  _reputation   of type uint256  _isOwnerVote   of type bool", 
            "title": "event VoteProposal"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#event-newproposal", 
            "text": "Params:   _proposalId   of type bytes32  _numOfChoices   of type uint256  _proposer   of type address  _paramsHash   of type bytes32", 
            "title": "event NewProposal"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#event-executeproposal", 
            "text": "Params:   _proposalId   of type bytes32  _decision   of type uint256", 
            "title": "event ExecuteProposal"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#event-cancelvoting", 
            "text": "Params:   _proposalId   of type bytes32  _voter   of type address", 
            "title": "event CancelVoting"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#event-cancelproposal", 
            "text": "Params:   _proposalId   of type bytes32", 
            "title": "event CancelProposal"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#function-votesstatus", 
            "text": "votesStatus returns the number of yes, no, and abstain and if the proposal is ended of a given proposal id   Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   votes array of votes for each choice", 
            "title": "function votesStatus"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#function-setparameters", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _reputationSystem   of type address  _precReq   of type uint256  _allowOwner   of type bool   Returns:   unnamed   of type bytes32", 
            "title": "function setParameters"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#function-voteinfo", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32  _voter   of type address   Returns:   unnamed   of type uint256  unnamed   of type uint256", 
            "title": "function voteInfo"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#function-votewithspecifiedamounts", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _vote   of type uint256  _rep   of type uint256  unnamed   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function voteWithSpecifiedAmounts"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#function-vote", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _vote   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function vote"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#function-propose", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _numOfChoices   of type uint256  _paramsHash   of type bytes32  _avatar   of type address  _executable   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function propose"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#function-proposals", 
            "text": "Execution cost:  less than 2188 gas.  constant | view  Inputs:   unnamed   of type bytes32   Returns:   owner   of type address  avatar   of type address  numOfChoices   of type uint256  executable   of type address  paramsHash   of type bytes32  totalVotes   of type uint256  open   of type bool", 
            "title": "function proposals"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#function-parameters", 
            "text": "Execution cost:  less than 1169 gas.  constant | view  Inputs:   unnamed   of type bytes32   Returns:   reputationSystem   of type address  precReq   of type uint256  allowOwner   of type bool", 
            "title": "function parameters"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#function-ownervote", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _vote   of type uint256  _voter   of type address   Returns:   unnamed   of type bool", 
            "title": "function ownerVote"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#function-isvotable", 
            "text": "isVotable check if the proposal is votable   Execution cost:  less than 790 gas.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   bool true or false", 
            "title": "function isVotable"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#function-getparametershash", 
            "text": "Execution cost:  No bound available.  constant | pure  Inputs:   _reputationSystem   of type address  _precReq   of type uint256  _allowOwner   of type bool   Returns:   unnamed   of type bytes32", 
            "title": "function getParametersHash"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#function-getnumberofchoices", 
            "text": "getNumberOfChoices returns the number of choices possible in this proposal   Execution cost:  less than 734 gas.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   uint that contains number of choices", 
            "title": "function getNumberOfChoices"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#function-execute", 
            "text": "check if the proposal has been decided, and if so, execute the proposal   Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32- the id of the proposal   Returns:   unnamed   of type bool", 
            "title": "function execute"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#function-cancelvote", 
            "text": "Cancel the vote of the msg.sender: subtract the reputation amount from the votes and delete the voter from the proposal struct   Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32- id of the proposal   Returns:  Nothing", 
            "title": "function cancelVote"
        }, 
        {
            "location": "/reference/VotingMachines/QuorumVote/#function-cancelproposal", 
            "text": "Cancel a proposal, only the owner can call this function and only if allowOwner flag is true.   Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32- the proposal ID   Returns:   unnamed   of type bool", 
            "title": "function cancelProposal"
        }, 
        {
            "location": "/reference/controller/ActionInterface/", 
            "text": "ActionInterface\n\n\nsee the source\n\n\nCode deposit cost: \nNo bound available.\n\n\nExecution cost: \nNo bound available.\n\n\nTotal deploy cost(deposit + execution): \nNo bound available.\n\n\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nNothing\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n action\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_params\n \nof type bytes32[]\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "ActionInterface"
        }, 
        {
            "location": "/reference/controller/ActionInterface/#actioninterface", 
            "text": "see the source  Code deposit cost:  No bound available.  Execution cost:  No bound available.  Total deploy cost(deposit + execution):  No bound available.", 
            "title": "ActionInterface"
        }, 
        {
            "location": "/reference/controller/ActionInterface/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/controller/ActionInterface/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/controller/ActionInterface/#events", 
            "text": "Nothing", 
            "title": "Events"
        }, 
        {
            "location": "/reference/controller/ActionInterface/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/controller/ActionInterface/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/controller/ActionInterface/#function-action", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _params   of type bytes32[]   Returns:   unnamed   of type bool", 
            "title": "function action"
        }, 
        {
            "location": "/reference/controller/Avatar/", 
            "text": "Avatar\n\n\nsee the source\n\n\nCode deposit cost: \nless than 475800 gas.\n\n\nExecution cost: \nless than 81478 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 557278 gas.\n\n\n\n\nAn Avatar holds tokens, reputation and ether for a controller\n\n\n\n\nThe \nAvatar\n is the public facing entity a DAO exposes to interact with the outside world(vote on other DAOs, pay external actors, etc...)\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n Avatar(bytes32, address, address)\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\n\n\n_orgName\n \nof type bytes32\n\n\n_nativeToken\n \nof type address\n\n\n_nativeReputation\n \nof type address\n\n\n\n\nEvents\n\n\nevent\n SendEther\n\n\nParams:\n\n\n\n\n_amountInWei\n \nof type uint256\n\n\n_to\n \nof type address\n\n\n\n\nevent\n ReceiveEther\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nevent\n OwnershipTransferred\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type address\n\n\nnewOwner\n \nof type address\n\n\n\n\nevent\n GenericAction\n\n\nParams:\n\n\n\n\n_action\n \nof type address\n\n\n_params\n \nof type bytes32[]\n\n\n\n\nevent\n ExternalTokenTransferFrom\n\n\nParams:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_from\n \nof type address\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nevent\n ExternalTokenTransfer\n\n\nParams:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nevent\n ExternalTokenIncreaseApproval\n\n\nParams:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_spender\n \nof type address\n\n\n_addedValue\n \nof type uint256\n\n\n\n\nevent\n ExternalTokenDecreaseApproval\n\n\nParams:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_spender\n \nof type address\n\n\n_subtractedValue\n \nof type uint256\n\n\n\n\nFallback\n\n\nExecution cost: \nless than 1870 gas.\n\n\npayable\n\n\nFunctions\n\n\nfunction\n externalTokenTransferFrom\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_from\n \nof type address\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n transferOwnership\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost: \nless than 23027 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nnewOwner\n \nof type address- The address to transfer ownership to.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n sendEther\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_amountInWei\n \nof type uint256\n\n\n_to\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n owner\n\n\nExecution cost: \nless than 1545 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n orgName\n\n\nExecution cost: \nless than 1545 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n nativeToken\n\n\nExecution cost: \nless than 1545 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n nativeReputation\n\n\nExecution cost: \nless than 1545 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n genericAction\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_action\n \nof type address\n\n\n_params\n \nof type bytes32[]\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n externalTokenTransfer\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n externalTokenIncreaseApproval\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_spender\n \nof type address\n\n\n_addedValue\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n externalTokenDecreaseApproval\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_spender\n \nof type address\n\n\n_subtractedValue\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "Avatar"
        }, 
        {
            "location": "/reference/controller/Avatar/#avatar", 
            "text": "see the source  Code deposit cost:  less than 475800 gas.  Execution cost:  less than 81478 gas.  Total deploy cost(deposit + execution):  less than 557278 gas.   An Avatar holds tokens, reputation and ether for a controller   The  Avatar  is the public facing entity a DAO exposes to interact with the outside world(vote on other DAOs, pay external actors, etc...)", 
            "title": "Avatar"
        }, 
        {
            "location": "/reference/controller/Avatar/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/controller/Avatar/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/controller/Avatar/#constructor-avatarbytes32-address-address", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:   _orgName   of type bytes32  _nativeToken   of type address  _nativeReputation   of type address", 
            "title": "constructor Avatar(bytes32, address, address)"
        }, 
        {
            "location": "/reference/controller/Avatar/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/controller/Avatar/#event-sendether", 
            "text": "Params:   _amountInWei   of type uint256  _to   of type address", 
            "title": "event SendEther"
        }, 
        {
            "location": "/reference/controller/Avatar/#event-receiveether", 
            "text": "Params:   _sender   of type address  _value   of type uint256", 
            "title": "event ReceiveEther"
        }, 
        {
            "location": "/reference/controller/Avatar/#event-ownershiptransferred", 
            "text": "Params:   previousOwner   of type address  newOwner   of type address", 
            "title": "event OwnershipTransferred"
        }, 
        {
            "location": "/reference/controller/Avatar/#event-genericaction", 
            "text": "Params:   _action   of type address  _params   of type bytes32[]", 
            "title": "event GenericAction"
        }, 
        {
            "location": "/reference/controller/Avatar/#event-externaltokentransferfrom", 
            "text": "Params:   _externalToken   of type address  _from   of type address  _to   of type address  _value   of type uint256", 
            "title": "event ExternalTokenTransferFrom"
        }, 
        {
            "location": "/reference/controller/Avatar/#event-externaltokentransfer", 
            "text": "Params:   _externalToken   of type address  _to   of type address  _value   of type uint256", 
            "title": "event ExternalTokenTransfer"
        }, 
        {
            "location": "/reference/controller/Avatar/#event-externaltokenincreaseapproval", 
            "text": "Params:   _externalToken   of type address  _spender   of type address  _addedValue   of type uint256", 
            "title": "event ExternalTokenIncreaseApproval"
        }, 
        {
            "location": "/reference/controller/Avatar/#event-externaltokendecreaseapproval", 
            "text": "Params:   _externalToken   of type address  _spender   of type address  _subtractedValue   of type uint256", 
            "title": "event ExternalTokenDecreaseApproval"
        }, 
        {
            "location": "/reference/controller/Avatar/#fallback", 
            "text": "Execution cost:  less than 1870 gas.  payable", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/controller/Avatar/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/controller/Avatar/#function-externaltokentransferfrom", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _from   of type address  _to   of type address  _value   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function externalTokenTransferFrom"
        }, 
        {
            "location": "/reference/controller/Avatar/#function-transferownership", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost:  less than 23027 gas.  nonpayable  Inputs:   newOwner   of type address- The address to transfer ownership to.   Returns:  Nothing", 
            "title": "function transferOwnership"
        }, 
        {
            "location": "/reference/controller/Avatar/#function-sendether", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _amountInWei   of type uint256  _to   of type address   Returns:   unnamed   of type bool", 
            "title": "function sendEther"
        }, 
        {
            "location": "/reference/controller/Avatar/#function-owner", 
            "text": "Execution cost:  less than 1545 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function owner"
        }, 
        {
            "location": "/reference/controller/Avatar/#function-orgname", 
            "text": "Execution cost:  less than 1545 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type bytes32", 
            "title": "function orgName"
        }, 
        {
            "location": "/reference/controller/Avatar/#function-nativetoken", 
            "text": "Execution cost:  less than 1545 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function nativeToken"
        }, 
        {
            "location": "/reference/controller/Avatar/#function-nativereputation", 
            "text": "Execution cost:  less than 1545 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function nativeReputation"
        }, 
        {
            "location": "/reference/controller/Avatar/#function-genericaction", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _action   of type address  _params   of type bytes32[]   Returns:   unnamed   of type bool", 
            "title": "function genericAction"
        }, 
        {
            "location": "/reference/controller/Avatar/#function-externaltokentransfer", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _to   of type address  _value   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function externalTokenTransfer"
        }, 
        {
            "location": "/reference/controller/Avatar/#function-externaltokenincreaseapproval", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _spender   of type address  _addedValue   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function externalTokenIncreaseApproval"
        }, 
        {
            "location": "/reference/controller/Avatar/#function-externaltokendecreaseapproval", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _spender   of type address  _subtractedValue   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function externalTokenDecreaseApproval"
        }, 
        {
            "location": "/reference/controller/Controller/", 
            "text": "Controller\n\n\nsee the source\n\n\nCode deposit cost: \nless than 2358800 gas.\n\n\nExecution cost: \nNo bound available.\n\n\nTotal deploy cost(deposit + execution): \nless than 2358800 gas.\n\n\n\n\nController contract\n\n\n\n\nThe \nController\n is the central part of a DAO, it glues together all other components in a single smart contract.\n\n\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n Controller(address)\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n\n\nEvents\n\n\nevent\n ExternalTokenTransfer\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_externalToken\n \nof type address\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nevent\n UpgradeController\n\n\nParams:\n\n\n\n\n_oldController\n \nof type address\n\n\n_newController\n \nof type address\n\n\n\n\nevent\n ExternalTokenTransferFrom\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_externalToken\n \nof type address\n\n\n_from\n \nof type address\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nevent\n RegisterScheme\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_scheme\n \nof type address\n\n\n\n\nevent\n RemoveGlobalConstraint\n\n\nParams:\n\n\n\n\n_globalConstraint\n \nof type address\n\n\n_index\n \nof type uint256\n\n\n\n\nevent\n SendEther\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_amountInWei\n \nof type uint256\n\n\n_to\n \nof type address\n\n\n\n\nevent\n UnregisterScheme\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_scheme\n \nof type address\n\n\n\n\nevent\n MintTokens\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_beneficiary\n \nof type address\n\n\n_amount\n \nof type uint256\n\n\n\n\nevent\n MintReputation\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_beneficiary\n \nof type address\n\n\n_amount\n \nof type int256\n\n\n\n\nevent\n GenericAction\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_params\n \nof type bytes32[]\n\n\n\n\nevent\n ExternalTokenIncreaseApproval\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_externalToken\n \nof type address\n\n\n_spender\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nevent\n ExternalTokenDecreaseApproval\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_externalToken\n \nof type address\n\n\n_spender\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nevent\n AddGlobalConstraint\n\n\nParams:\n\n\n\n\n_globalConstraint\n \nof type address\n\n\n_params\n \nof type bytes32\n\n\n\n\nFallback\n\n\nExecution cost: \nless than 720 gas.\n\n\nnonpayable\n\n\nFunctions\n\n\nfunction\n mintReputation\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_amount\n \nof type int256\n\n\n_beneficiary\n \nof type address\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n unregisterScheme\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n unregisterSelf\n\n\n\n\nunregister the caller's scheme\n\n\n\n\nExecution cost: \nless than 28009 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nbool which represents a success\n\n\nfunction\n upgradeController\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_newController\n \nof type address\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n nativeReputation\n\n\nExecution cost: \nless than 922 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n removeGlobalConstraint\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_globalConstraint\n \nof type address\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n schemes\n\n\nExecution cost: \nless than 1411 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nparamsHash\n \nof type bytes32\n\n\npermissions\n \nof type bytes4\n\n\n\n\nfunction\n sendEther\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_amountInWei\n \nof type uint256\n\n\n_to\n \nof type address\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n isSchemeRegistered\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n mintTokens\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_amount\n \nof type uint256\n\n\n_beneficiary\n \nof type address\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n registerScheme\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\n_paramsHash\n \nof type bytes32\n\n\n_permissions\n \nof type bytes4\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n nativeToken\n\n\nExecution cost: \nless than 1054 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n newController\n\n\nExecution cost: \nless than 636 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n externalTokenDecreaseApproval\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_spender\n \nof type address\n\n\n_subtractedValue\n \nof type uint256\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n getSchemeParameters\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n isGlobalConstraintRegistered\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_globalConstraint\n \nof type address\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n getSchemePermissions\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes4\n\n\n\n\nfunction\n globalConstraintsRegister\n\n\nExecution cost: \nless than 1060 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nregister\n \nof type bool\n\n\nindex\n \nof type uint256\n\n\n\n\nfunction\n globalConstraints\n\n\nExecution cost: \nless than 1390 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\ngcAddress\n \nof type address\n\n\nparams\n \nof type bytes32\n\n\n\n\nfunction\n globalConstraintsCount\n\n\nExecution cost: \nless than 827 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n genericAction\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_params\n \nof type bytes32[]\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n externalTokenTransferFrom\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_from\n \nof type address\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n externalTokenTransfer\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n externalTokenIncreaseApproval\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_spender\n \nof type address\n\n\n_addedValue\n \nof type uint256\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n avatar\n\n\nExecution cost: \nless than 702 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n addGlobalConstraint\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_globalConstraint\n \nof type address\n\n\n_params\n \nof type bytes32\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "Controller"
        }, 
        {
            "location": "/reference/controller/Controller/#controller", 
            "text": "see the source  Code deposit cost:  less than 2358800 gas.  Execution cost:  No bound available.  Total deploy cost(deposit + execution):  less than 2358800 gas.   Controller contract   The  Controller  is the central part of a DAO, it glues together all other components in a single smart contract.", 
            "title": "Controller"
        }, 
        {
            "location": "/reference/controller/Controller/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/controller/Controller/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/controller/Controller/#constructor-controlleraddress", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:   _avatar   of type address", 
            "title": "constructor Controller(address)"
        }, 
        {
            "location": "/reference/controller/Controller/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/controller/Controller/#event-externaltokentransfer", 
            "text": "Params:   _sender   of type address  _externalToken   of type address  _to   of type address  _value   of type uint256", 
            "title": "event ExternalTokenTransfer"
        }, 
        {
            "location": "/reference/controller/Controller/#event-upgradecontroller", 
            "text": "Params:   _oldController   of type address  _newController   of type address", 
            "title": "event UpgradeController"
        }, 
        {
            "location": "/reference/controller/Controller/#event-externaltokentransferfrom", 
            "text": "Params:   _sender   of type address  _externalToken   of type address  _from   of type address  _to   of type address  _value   of type uint256", 
            "title": "event ExternalTokenTransferFrom"
        }, 
        {
            "location": "/reference/controller/Controller/#event-registerscheme", 
            "text": "Params:   _sender   of type address  _scheme   of type address", 
            "title": "event RegisterScheme"
        }, 
        {
            "location": "/reference/controller/Controller/#event-removeglobalconstraint", 
            "text": "Params:   _globalConstraint   of type address  _index   of type uint256", 
            "title": "event RemoveGlobalConstraint"
        }, 
        {
            "location": "/reference/controller/Controller/#event-sendether", 
            "text": "Params:   _sender   of type address  _amountInWei   of type uint256  _to   of type address", 
            "title": "event SendEther"
        }, 
        {
            "location": "/reference/controller/Controller/#event-unregisterscheme", 
            "text": "Params:   _sender   of type address  _scheme   of type address", 
            "title": "event UnregisterScheme"
        }, 
        {
            "location": "/reference/controller/Controller/#event-minttokens", 
            "text": "Params:   _sender   of type address  _beneficiary   of type address  _amount   of type uint256", 
            "title": "event MintTokens"
        }, 
        {
            "location": "/reference/controller/Controller/#event-mintreputation", 
            "text": "Params:   _sender   of type address  _beneficiary   of type address  _amount   of type int256", 
            "title": "event MintReputation"
        }, 
        {
            "location": "/reference/controller/Controller/#event-genericaction", 
            "text": "Params:   _sender   of type address  _params   of type bytes32[]", 
            "title": "event GenericAction"
        }, 
        {
            "location": "/reference/controller/Controller/#event-externaltokenincreaseapproval", 
            "text": "Params:   _sender   of type address  _externalToken   of type address  _spender   of type address  _value   of type uint256", 
            "title": "event ExternalTokenIncreaseApproval"
        }, 
        {
            "location": "/reference/controller/Controller/#event-externaltokendecreaseapproval", 
            "text": "Params:   _sender   of type address  _externalToken   of type address  _spender   of type address  _value   of type uint256", 
            "title": "event ExternalTokenDecreaseApproval"
        }, 
        {
            "location": "/reference/controller/Controller/#event-addglobalconstraint", 
            "text": "Params:   _globalConstraint   of type address  _params   of type bytes32", 
            "title": "event AddGlobalConstraint"
        }, 
        {
            "location": "/reference/controller/Controller/#fallback", 
            "text": "Execution cost:  less than 720 gas.  nonpayable", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/controller/Controller/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/controller/Controller/#function-mintreputation", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _amount   of type int256  _beneficiary   of type address  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function mintReputation"
        }, 
        {
            "location": "/reference/controller/Controller/#function-unregisterscheme", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _scheme   of type address  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function unregisterScheme"
        }, 
        {
            "location": "/reference/controller/Controller/#function-unregisterself", 
            "text": "unregister the caller's scheme   Execution cost:  less than 28009 gas.  nonpayable  Inputs:   unnamed   of type address   bool which represents a success", 
            "title": "function unregisterSelf"
        }, 
        {
            "location": "/reference/controller/Controller/#function-upgradecontroller", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _newController   of type address  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function upgradeController"
        }, 
        {
            "location": "/reference/controller/Controller/#function-nativereputation", 
            "text": "Execution cost:  less than 922 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function nativeReputation"
        }, 
        {
            "location": "/reference/controller/Controller/#function-removeglobalconstraint", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _globalConstraint   of type address  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function removeGlobalConstraint"
        }, 
        {
            "location": "/reference/controller/Controller/#function-schemes", 
            "text": "Execution cost:  less than 1411 gas.  constant | view  Inputs:   unnamed   of type address   Returns:   paramsHash   of type bytes32  permissions   of type bytes4", 
            "title": "function schemes"
        }, 
        {
            "location": "/reference/controller/Controller/#function-sendether", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _amountInWei   of type uint256  _to   of type address  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function sendEther"
        }, 
        {
            "location": "/reference/controller/Controller/#function-isschemeregistered", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _scheme   of type address  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function isSchemeRegistered"
        }, 
        {
            "location": "/reference/controller/Controller/#function-minttokens", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _amount   of type uint256  _beneficiary   of type address  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function mintTokens"
        }, 
        {
            "location": "/reference/controller/Controller/#function-registerscheme", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _scheme   of type address  _paramsHash   of type bytes32  _permissions   of type bytes4  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function registerScheme"
        }, 
        {
            "location": "/reference/controller/Controller/#function-nativetoken", 
            "text": "Execution cost:  less than 1054 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function nativeToken"
        }, 
        {
            "location": "/reference/controller/Controller/#function-newcontroller", 
            "text": "Execution cost:  less than 636 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function newController"
        }, 
        {
            "location": "/reference/controller/Controller/#function-externaltokendecreaseapproval", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _spender   of type address  _subtractedValue   of type uint256  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function externalTokenDecreaseApproval"
        }, 
        {
            "location": "/reference/controller/Controller/#function-getschemeparameters", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _scheme   of type address  unnamed   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function getSchemeParameters"
        }, 
        {
            "location": "/reference/controller/Controller/#function-isglobalconstraintregistered", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _globalConstraint   of type address  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function isGlobalConstraintRegistered"
        }, 
        {
            "location": "/reference/controller/Controller/#function-getschemepermissions", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _scheme   of type address  unnamed   of type address   Returns:   unnamed   of type bytes4", 
            "title": "function getSchemePermissions"
        }, 
        {
            "location": "/reference/controller/Controller/#function-globalconstraintsregister", 
            "text": "Execution cost:  less than 1060 gas.  constant | view  Inputs:   unnamed   of type address   Returns:   register   of type bool  index   of type uint256", 
            "title": "function globalConstraintsRegister"
        }, 
        {
            "location": "/reference/controller/Controller/#function-globalconstraints", 
            "text": "Execution cost:  less than 1390 gas.  constant | view  Inputs:   unnamed   of type uint256   Returns:   gcAddress   of type address  params   of type bytes32", 
            "title": "function globalConstraints"
        }, 
        {
            "location": "/reference/controller/Controller/#function-globalconstraintscount", 
            "text": "Execution cost:  less than 827 gas.  constant | view  Inputs:   unnamed   of type address   Returns:   unnamed   of type uint256", 
            "title": "function globalConstraintsCount"
        }, 
        {
            "location": "/reference/controller/Controller/#function-genericaction", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _params   of type bytes32[]  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function genericAction"
        }, 
        {
            "location": "/reference/controller/Controller/#function-externaltokentransferfrom", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _from   of type address  _to   of type address  _value   of type uint256  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function externalTokenTransferFrom"
        }, 
        {
            "location": "/reference/controller/Controller/#function-externaltokentransfer", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _to   of type address  _value   of type uint256  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function externalTokenTransfer"
        }, 
        {
            "location": "/reference/controller/Controller/#function-externaltokenincreaseapproval", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _spender   of type address  _addedValue   of type uint256  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function externalTokenIncreaseApproval"
        }, 
        {
            "location": "/reference/controller/Controller/#function-avatar", 
            "text": "Execution cost:  less than 702 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function avatar"
        }, 
        {
            "location": "/reference/controller/Controller/#function-addglobalconstraint", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _globalConstraint   of type address  _params   of type bytes32  unnamed   of type address   Returns:   unnamed   of type bool", 
            "title": "function addGlobalConstraint"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/", 
            "text": "ControllerInterface\n\n\nsee the source\n\n\nCode deposit cost: \nNo bound available.\n\n\nExecution cost: \nNo bound available.\n\n\nTotal deploy cost(deposit + execution): \nNo bound available.\n\n\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nNothing\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n mintReputation\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_amount\n \nof type int256\n\n\n_beneficiary\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n unregisterScheme\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n upgradeController\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_newController\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n unregisterSelf\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n getSchemePermissions\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes4\n\n\n\n\nfunction\n genericAction\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_params\n \nof type bytes32[]\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n mintTokens\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_amount\n \nof type uint256\n\n\n_beneficiary\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n isGlobalConstraintRegistered\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_globalConstraint\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n removeGlobalConstraint\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_globalConstraint\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n getSchemeParameters\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n globalConstraintsCount\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n sendEther\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_amountInWei\n \nof type uint256\n\n\n_to\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n isSchemeRegistered\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n registerScheme\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\n_paramsHash\n \nof type bytes32\n\n\n_permissions\n \nof type bytes4\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n externalTokenTransferFrom\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_from\n \nof type address\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n externalTokenTransfer\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n externalTokenIncreaseApproval\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_spender\n \nof type address\n\n\n_addedValue\n \nof type uint256\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n externalTokenDecreaseApproval\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_spender\n \nof type address\n\n\n_subtractedValue\n \nof type uint256\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n addGlobalConstraint\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_globalConstraint\n \nof type address\n\n\n_params\n \nof type bytes32\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "ControllerInterface"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#controllerinterface", 
            "text": "see the source  Code deposit cost:  No bound available.  Execution cost:  No bound available.  Total deploy cost(deposit + execution):  No bound available.", 
            "title": "ControllerInterface"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#events", 
            "text": "Nothing", 
            "title": "Events"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-mintreputation", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _amount   of type int256  _beneficiary   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function mintReputation"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-unregisterscheme", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _scheme   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function unregisterScheme"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-upgradecontroller", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _newController   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function upgradeController"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-unregisterself", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function unregisterSelf"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-getschemepermissions", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _scheme   of type address  _avatar   of type address   Returns:   unnamed   of type bytes4", 
            "title": "function getSchemePermissions"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-genericaction", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _params   of type bytes32[]  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function genericAction"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-minttokens", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _amount   of type uint256  _beneficiary   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function mintTokens"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-isglobalconstraintregistered", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _globalConstraint   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function isGlobalConstraintRegistered"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-removeglobalconstraint", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _globalConstraint   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function removeGlobalConstraint"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-getschemeparameters", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _scheme   of type address  _avatar   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function getSchemeParameters"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-globalconstraintscount", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _avatar   of type address   Returns:   unnamed   of type uint256", 
            "title": "function globalConstraintsCount"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-sendether", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _amountInWei   of type uint256  _to   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function sendEther"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-isschemeregistered", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _scheme   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function isSchemeRegistered"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-registerscheme", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _scheme   of type address  _paramsHash   of type bytes32  _permissions   of type bytes4  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function registerScheme"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-externaltokentransferfrom", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _from   of type address  _to   of type address  _value   of type uint256  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function externalTokenTransferFrom"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-externaltokentransfer", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _to   of type address  _value   of type uint256  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function externalTokenTransfer"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-externaltokenincreaseapproval", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _spender   of type address  _addedValue   of type uint256  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function externalTokenIncreaseApproval"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-externaltokendecreaseapproval", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _spender   of type address  _subtractedValue   of type uint256  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function externalTokenDecreaseApproval"
        }, 
        {
            "location": "/reference/controller/ControllerInterface/#function-addglobalconstraint", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _globalConstraint   of type address  _params   of type bytes32  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function addGlobalConstraint"
        }, 
        {
            "location": "/reference/controller/DAOToken/", 
            "text": "DAOToken\n\n\nsee the source\n\n\nCode deposit cost: \nless than 683600 gas.\n\n\nExecution cost: \nNo bound available.\n\n\nTotal deploy cost(deposit + execution): \nless than 683600 gas.\n\n\n\n\nDAOToken, base on zeppelin contract.\n\n\n\n\nThe \nDAO token\n is a simple token that is used by DAOs to assign value to, and reward participants actions. \nIt can be \nminted\n or \nburned\n by the DAO and also be \ndestroyed\n in the event of an upgrade to a better token or in other circumstances.\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n DAOToken(string, string)\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\n\n\n_name\n \nof type string\n\n\n_symbol\n \nof type string\n\n\n\n\nEvents\n\n\nevent\n Transfer\n\n\nParams:\n\n\n\n\nfrom\n \nof type address\n\n\nto\n \nof type address\n\n\nvalue\n \nof type uint256\n\n\n\n\nevent\n OwnershipTransferred\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type address\n\n\nnewOwner\n \nof type address\n\n\n\n\nevent\n MintFinished\n\n\nParams:\n\n\nNothing\n\n\nevent\n Mint\n\n\nParams:\n\n\n\n\nto\n \nof type address\n\n\namount\n \nof type uint256\n\n\n\n\nevent\n Burn\n\n\nParams:\n\n\n\n\nburner\n \nof type address\n\n\nvalue\n \nof type uint256\n\n\n\n\nevent\n Approval\n\n\nParams:\n\n\n\n\nowner\n \nof type address\n\n\nspender\n \nof type address\n\n\nvalue\n \nof type uint256\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n balanceOf\n\n\n\n\nGets the balance of the specified address.\n\n\n\n\nExecution cost: \nless than 793 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_owner\n \nof type address- The address to query the the balance of.\n\n\n\n\nAn uint256 representing the amount owned by the passed address.\n\n\nfunction\n mintingFinished\n\n\nExecution cost: \nless than 459 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n transferOwnership\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost: \nless than 23118 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nnewOwner\n \nof type address- The address to transfer ownership to.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n totalSupply\n\n\nExecution cost: \nless than 439 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n transferFrom\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_from\n \nof type address\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n transfer\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n symbol\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type string\n\n\n\n\nfunction\n owner\n\n\nExecution cost: \nless than 793 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n name\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type string\n\n\n\n\nfunction\n mint\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_to\n \nof type address\n\n\n_amount\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n increaseApproval\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_spender\n \nof type address\n\n\n_addedValue\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n finishMinting\n\n\n\n\nFunction to stop minting new tokens.\n\n\n\n\nExecution cost: \nless than 22080 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\nNothing\n\n\nTrue if the operation was successful.\n\n\nfunction\n destroyAndSend\n\n\nExecution cost: \nless than 30980 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_recipient\n \nof type address\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n destroy\n\n\n\n\nTransfers the current balance to the owner and terminates the contract.\n\n\n\n\nExecution cost: \nless than 30945 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n decreaseApproval\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_spender\n \nof type address\n\n\n_subtractedValue\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n burn\n\n\n\n\nBurns a specific amount of tokens.\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_value\n \nof type uint256- The amount of token to be burned.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n approve\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_spender\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n allowance\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_owner\n \nof type address\n\n\n_spender\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n DECIMAL\n\n\nExecution cost: \nless than 349 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256", 
            "title": "DAOToken"
        }, 
        {
            "location": "/reference/controller/DAOToken/#daotoken", 
            "text": "see the source  Code deposit cost:  less than 683600 gas.  Execution cost:  No bound available.  Total deploy cost(deposit + execution):  less than 683600 gas.   DAOToken, base on zeppelin contract.   The  DAO token  is a simple token that is used by DAOs to assign value to, and reward participants actions. \nIt can be  minted  or  burned  by the DAO and also be  destroyed  in the event of an upgrade to a better token or in other circumstances.", 
            "title": "DAOToken"
        }, 
        {
            "location": "/reference/controller/DAOToken/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/controller/DAOToken/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/controller/DAOToken/#constructor-daotokenstring-string", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:   _name   of type string  _symbol   of type string", 
            "title": "constructor DAOToken(string, string)"
        }, 
        {
            "location": "/reference/controller/DAOToken/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/controller/DAOToken/#event-transfer", 
            "text": "Params:   from   of type address  to   of type address  value   of type uint256", 
            "title": "event Transfer"
        }, 
        {
            "location": "/reference/controller/DAOToken/#event-ownershiptransferred", 
            "text": "Params:   previousOwner   of type address  newOwner   of type address", 
            "title": "event OwnershipTransferred"
        }, 
        {
            "location": "/reference/controller/DAOToken/#event-mintfinished", 
            "text": "Params:  Nothing", 
            "title": "event MintFinished"
        }, 
        {
            "location": "/reference/controller/DAOToken/#event-mint", 
            "text": "Params:   to   of type address  amount   of type uint256", 
            "title": "event Mint"
        }, 
        {
            "location": "/reference/controller/DAOToken/#event-burn", 
            "text": "Params:   burner   of type address  value   of type uint256", 
            "title": "event Burn"
        }, 
        {
            "location": "/reference/controller/DAOToken/#event-approval", 
            "text": "Params:   owner   of type address  spender   of type address  value   of type uint256", 
            "title": "event Approval"
        }, 
        {
            "location": "/reference/controller/DAOToken/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/controller/DAOToken/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-balanceof", 
            "text": "Gets the balance of the specified address.   Execution cost:  less than 793 gas.  constant | view  Inputs:   _owner   of type address- The address to query the the balance of.   An uint256 representing the amount owned by the passed address.", 
            "title": "function balanceOf"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-mintingfinished", 
            "text": "Execution cost:  less than 459 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type bool", 
            "title": "function mintingFinished"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-transferownership", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost:  less than 23118 gas.  nonpayable  Inputs:   newOwner   of type address- The address to transfer ownership to.   Returns:  Nothing", 
            "title": "function transferOwnership"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-totalsupply", 
            "text": "Execution cost:  less than 439 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type uint256", 
            "title": "function totalSupply"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-transferfrom", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _from   of type address  _to   of type address  _value   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function transferFrom"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-transfer", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _to   of type address  _value   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function transfer"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-symbol", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type string", 
            "title": "function symbol"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-owner", 
            "text": "Execution cost:  less than 793 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function owner"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-name", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type string", 
            "title": "function name"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-mint", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _to   of type address  _amount   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function mint"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-increaseapproval", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _spender   of type address  _addedValue   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function increaseApproval"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-finishminting", 
            "text": "Function to stop minting new tokens.   Execution cost:  less than 22080 gas.  nonpayable  Inputs:  Nothing  True if the operation was successful.", 
            "title": "function finishMinting"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-destroyandsend", 
            "text": "Execution cost:  less than 30980 gas.  nonpayable  Inputs:   _recipient   of type address   Returns:  Nothing", 
            "title": "function destroyAndSend"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-destroy", 
            "text": "Transfers the current balance to the owner and terminates the contract.   Execution cost:  less than 30945 gas.  nonpayable  Inputs:  Nothing  Returns:  Nothing", 
            "title": "function destroy"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-decreaseapproval", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _spender   of type address  _subtractedValue   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function decreaseApproval"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-burn", 
            "text": "Burns a specific amount of tokens.   Execution cost:  No bound available.  nonpayable  Inputs:   _value   of type uint256- The amount of token to be burned.   Returns:  Nothing", 
            "title": "function burn"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-approve", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _spender   of type address  _value   of type uint256   Returns:   unnamed   of type bool", 
            "title": "function approve"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-allowance", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _owner   of type address  _spender   of type address   Returns:   unnamed   of type uint256", 
            "title": "function allowance"
        }, 
        {
            "location": "/reference/controller/DAOToken/#function-decimal", 
            "text": "Execution cost:  less than 349 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type uint256", 
            "title": "function DECIMAL"
        }, 
        {
            "location": "/reference/controller/Reputation/", 
            "text": "Reputation\n\n\nsee the source\n\n\nCode deposit cost: \nless than 168000 gas.\n\n\nExecution cost: \nless than 50663 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 218663 gas.\n\n\n\n\nSimple static reputation storage\n\n\n\n\nA \nReputation\n is a way of assigning importance to participants and their votes. \n\nReputation\n is similar to regular tokens but with one crucial difference: \nIt is non-transferable\n.\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n Reputation()\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\nNothing\n\n\nEvents\n\n\nevent\n OwnershipTransferred\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type address\n\n\nnewOwner\n \nof type address\n\n\n\n\nevent\n Mint\n\n\nParams:\n\n\n\n\nto\n \nof type address\n\n\namount\n \nof type int256\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n transferOwnership\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost: \nless than 22832 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nnewOwner\n \nof type address- The address to transfer ownership to.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n totalSupply\n\n\nExecution cost: \nless than 373 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n reputationOf\n\n\n\n\nreturn the reputation amount of a given owner\n\n\n\n\nExecution cost: \nless than 661 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_owner\n \nof type address- an address of the owner which we want to get his reputation\n\n\n\n\nReturns:\n\n\n\n\nbalance\n \nof type uint256\n\n\n\n\nfunction\n owner\n\n\nExecution cost: \nless than 573 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n mint\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_to\n \nof type address\n\n\n_amount\n \nof type int256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n decimals\n\n\nExecution cost: \nless than 395 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256", 
            "title": "Reputation"
        }, 
        {
            "location": "/reference/controller/Reputation/#reputation", 
            "text": "see the source  Code deposit cost:  less than 168000 gas.  Execution cost:  less than 50663 gas.  Total deploy cost(deposit + execution):  less than 218663 gas.   Simple static reputation storage   A  Reputation  is a way of assigning importance to participants and their votes.  Reputation  is similar to regular tokens but with one crucial difference:  It is non-transferable .", 
            "title": "Reputation"
        }, 
        {
            "location": "/reference/controller/Reputation/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/controller/Reputation/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/controller/Reputation/#constructor-reputation", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:  Nothing", 
            "title": "constructor Reputation()"
        }, 
        {
            "location": "/reference/controller/Reputation/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/controller/Reputation/#event-ownershiptransferred", 
            "text": "Params:   previousOwner   of type address  newOwner   of type address", 
            "title": "event OwnershipTransferred"
        }, 
        {
            "location": "/reference/controller/Reputation/#event-mint", 
            "text": "Params:   to   of type address  amount   of type int256", 
            "title": "event Mint"
        }, 
        {
            "location": "/reference/controller/Reputation/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/controller/Reputation/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/controller/Reputation/#function-transferownership", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost:  less than 22832 gas.  nonpayable  Inputs:   newOwner   of type address- The address to transfer ownership to.   Returns:  Nothing", 
            "title": "function transferOwnership"
        }, 
        {
            "location": "/reference/controller/Reputation/#function-totalsupply", 
            "text": "Execution cost:  less than 373 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type uint256", 
            "title": "function totalSupply"
        }, 
        {
            "location": "/reference/controller/Reputation/#function-reputationof", 
            "text": "return the reputation amount of a given owner   Execution cost:  less than 661 gas.  constant | view  Inputs:   _owner   of type address- an address of the owner which we want to get his reputation   Returns:   balance   of type uint256", 
            "title": "function reputationOf"
        }, 
        {
            "location": "/reference/controller/Reputation/#function-owner", 
            "text": "Execution cost:  less than 573 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function owner"
        }, 
        {
            "location": "/reference/controller/Reputation/#function-mint", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _to   of type address  _amount   of type int256   Returns:   unnamed   of type bool", 
            "title": "function mint"
        }, 
        {
            "location": "/reference/controller/Reputation/#function-decimals", 
            "text": "Execution cost:  less than 395 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type uint256", 
            "title": "function decimals"
        }, 
        {
            "location": "/reference/controller/UController/", 
            "text": "UController\n\n\nsee the source\n\n\nCode deposit cost: \nless than 2864000 gas.\n\n\nExecution cost: \nless than 3126 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 2867126 gas.\n\n\n\n\nUniversal Controller contract\n\n\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n UController()\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\nNothing\n\n\nEvents\n\n\nevent\n ExternalTokenTransfer\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_externalToken\n \nof type address\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nevent\n UpgradeController\n\n\nParams:\n\n\n\n\n_oldController\n \nof type address\n\n\n_newController\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nevent\n ExternalTokenTransferFrom\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_externalToken\n \nof type address\n\n\n_from\n \nof type address\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nevent\n RegisterScheme\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_scheme\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nevent\n RemoveGlobalConstraint\n\n\nParams:\n\n\n\n\n_globalConstraint\n \nof type address\n\n\n_index\n \nof type uint256\n\n\n\n\nevent\n SendEther\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_amountInWei\n \nof type uint256\n\n\n_to\n \nof type address\n\n\n\n\nevent\n UnregisterScheme\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_scheme\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nevent\n MintTokens\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_beneficiary\n \nof type address\n\n\n_amount\n \nof type uint256\n\n\n_avatar\n \nof type address\n\n\n\n\nevent\n MintReputation\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_beneficiary\n \nof type address\n\n\n_amount\n \nof type int256\n\n\n_avatar\n \nof type address\n\n\n\n\nevent\n GenericAction\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_params\n \nof type bytes32[]\n\n\n\n\nevent\n ExternalTokenIncreaseApproval\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_externalToken\n \nof type address\n\n\n_spender\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nevent\n ExternalTokenDecreaseApproval\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_externalToken\n \nof type address\n\n\n_spender\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n\n\nevent\n AddGlobalConstraint\n\n\nParams:\n\n\n\n\n_globalConstraint\n \nof type address\n\n\n_params\n \nof type bytes32\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n mintReputation\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_amount\n \nof type int256\n\n\n_beneficiary\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n unregisterScheme\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n upgradeController\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_newController\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n unregisterSelf\n\n\n\n\nunregister the caller's scheme\n\n\n\n\nExecution cost: \nless than 28509 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address- the organization avatar.\n\n\n\n\nbool which represents a success\n\n\nfunction\n getSchemePermissions\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes4\n\n\n\n\nfunction\n newControllers\n\n\nExecution cost: \nless than 824 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n sendEther\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_amountInWei\n \nof type uint256\n\n\n_to\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n registerScheme\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\n_paramsHash\n \nof type bytes32\n\n\n_permissions\n \nof type bytes4\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n newOrganization\n\n\n\n\nnewOrganization set up a new organization with default genesisScheme.\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address- the organization avatar\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n removeGlobalConstraint\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_globalConstraint\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n externalTokenTransfer\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n getSchemeParameters\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n isGlobalConstraintRegistered\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_globalConstraint\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n isSchemeRegistered\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n mintTokens\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_amount\n \nof type uint256\n\n\n_beneficiary\n \nof type address\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n globalConstraintsCount\n\n\nExecution cost: \nless than 909 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n genericAction\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_params\n \nof type bytes32[]\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n externalTokenTransferFrom\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_from\n \nof type address\n\n\n_to\n \nof type address\n\n\n_value\n \nof type uint256\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n externalTokenIncreaseApproval\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_spender\n \nof type address\n\n\n_addedValue\n \nof type uint256\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n externalTokenDecreaseApproval\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_externalToken\n \nof type address\n\n\n_spender\n \nof type address\n\n\n_subtractedValue\n \nof type uint256\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n addGlobalConstraint\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_globalConstraint\n \nof type address\n\n\n_params\n \nof type bytes32\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "UController"
        }, 
        {
            "location": "/reference/controller/UController/#ucontroller", 
            "text": "see the source  Code deposit cost:  less than 2864000 gas.  Execution cost:  less than 3126 gas.  Total deploy cost(deposit + execution):  less than 2867126 gas.   Universal Controller contract", 
            "title": "UController"
        }, 
        {
            "location": "/reference/controller/UController/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/controller/UController/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/controller/UController/#constructor-ucontroller", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:  Nothing", 
            "title": "constructor UController()"
        }, 
        {
            "location": "/reference/controller/UController/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/controller/UController/#event-externaltokentransfer", 
            "text": "Params:   _sender   of type address  _externalToken   of type address  _to   of type address  _value   of type uint256", 
            "title": "event ExternalTokenTransfer"
        }, 
        {
            "location": "/reference/controller/UController/#event-upgradecontroller", 
            "text": "Params:   _oldController   of type address  _newController   of type address  _avatar   of type address", 
            "title": "event UpgradeController"
        }, 
        {
            "location": "/reference/controller/UController/#event-externaltokentransferfrom", 
            "text": "Params:   _sender   of type address  _externalToken   of type address  _from   of type address  _to   of type address  _value   of type uint256", 
            "title": "event ExternalTokenTransferFrom"
        }, 
        {
            "location": "/reference/controller/UController/#event-registerscheme", 
            "text": "Params:   _sender   of type address  _scheme   of type address  _avatar   of type address", 
            "title": "event RegisterScheme"
        }, 
        {
            "location": "/reference/controller/UController/#event-removeglobalconstraint", 
            "text": "Params:   _globalConstraint   of type address  _index   of type uint256", 
            "title": "event RemoveGlobalConstraint"
        }, 
        {
            "location": "/reference/controller/UController/#event-sendether", 
            "text": "Params:   _sender   of type address  _amountInWei   of type uint256  _to   of type address", 
            "title": "event SendEther"
        }, 
        {
            "location": "/reference/controller/UController/#event-unregisterscheme", 
            "text": "Params:   _sender   of type address  _scheme   of type address  _avatar   of type address", 
            "title": "event UnregisterScheme"
        }, 
        {
            "location": "/reference/controller/UController/#event-minttokens", 
            "text": "Params:   _sender   of type address  _beneficiary   of type address  _amount   of type uint256  _avatar   of type address", 
            "title": "event MintTokens"
        }, 
        {
            "location": "/reference/controller/UController/#event-mintreputation", 
            "text": "Params:   _sender   of type address  _beneficiary   of type address  _amount   of type int256  _avatar   of type address", 
            "title": "event MintReputation"
        }, 
        {
            "location": "/reference/controller/UController/#event-genericaction", 
            "text": "Params:   _sender   of type address  _params   of type bytes32[]", 
            "title": "event GenericAction"
        }, 
        {
            "location": "/reference/controller/UController/#event-externaltokenincreaseapproval", 
            "text": "Params:   _sender   of type address  _externalToken   of type address  _spender   of type address  _value   of type uint256", 
            "title": "event ExternalTokenIncreaseApproval"
        }, 
        {
            "location": "/reference/controller/UController/#event-externaltokendecreaseapproval", 
            "text": "Params:   _sender   of type address  _externalToken   of type address  _spender   of type address  _value   of type uint256", 
            "title": "event ExternalTokenDecreaseApproval"
        }, 
        {
            "location": "/reference/controller/UController/#event-addglobalconstraint", 
            "text": "Params:   _globalConstraint   of type address  _params   of type bytes32", 
            "title": "event AddGlobalConstraint"
        }, 
        {
            "location": "/reference/controller/UController/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/controller/UController/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/controller/UController/#function-mintreputation", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _amount   of type int256  _beneficiary   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function mintReputation"
        }, 
        {
            "location": "/reference/controller/UController/#function-unregisterscheme", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _scheme   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function unregisterScheme"
        }, 
        {
            "location": "/reference/controller/UController/#function-upgradecontroller", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _newController   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function upgradeController"
        }, 
        {
            "location": "/reference/controller/UController/#function-unregisterself", 
            "text": "unregister the caller's scheme   Execution cost:  less than 28509 gas.  nonpayable  Inputs:   _avatar   of type address- the organization avatar.   bool which represents a success", 
            "title": "function unregisterSelf"
        }, 
        {
            "location": "/reference/controller/UController/#function-getschemepermissions", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _scheme   of type address  _avatar   of type address   Returns:   unnamed   of type bytes4", 
            "title": "function getSchemePermissions"
        }, 
        {
            "location": "/reference/controller/UController/#function-newcontrollers", 
            "text": "Execution cost:  less than 824 gas.  constant | view  Inputs:   unnamed   of type address   Returns:   unnamed   of type address", 
            "title": "function newControllers"
        }, 
        {
            "location": "/reference/controller/UController/#function-sendether", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _amountInWei   of type uint256  _to   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function sendEther"
        }, 
        {
            "location": "/reference/controller/UController/#function-registerscheme", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _scheme   of type address  _paramsHash   of type bytes32  _permissions   of type bytes4  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function registerScheme"
        }, 
        {
            "location": "/reference/controller/UController/#function-neworganization", 
            "text": "newOrganization set up a new organization with default genesisScheme.   Execution cost:  No bound available.  nonpayable  Inputs:   _avatar   of type address- the organization avatar   Returns:  Nothing", 
            "title": "function newOrganization"
        }, 
        {
            "location": "/reference/controller/UController/#function-removeglobalconstraint", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _globalConstraint   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function removeGlobalConstraint"
        }, 
        {
            "location": "/reference/controller/UController/#function-externaltokentransfer", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _to   of type address  _value   of type uint256  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function externalTokenTransfer"
        }, 
        {
            "location": "/reference/controller/UController/#function-getschemeparameters", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _scheme   of type address  _avatar   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function getSchemeParameters"
        }, 
        {
            "location": "/reference/controller/UController/#function-isglobalconstraintregistered", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _globalConstraint   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function isGlobalConstraintRegistered"
        }, 
        {
            "location": "/reference/controller/UController/#function-isschemeregistered", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _scheme   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function isSchemeRegistered"
        }, 
        {
            "location": "/reference/controller/UController/#function-minttokens", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _amount   of type uint256  _beneficiary   of type address  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function mintTokens"
        }, 
        {
            "location": "/reference/controller/UController/#function-globalconstraintscount", 
            "text": "Execution cost:  less than 909 gas.  constant | view  Inputs:   _avatar   of type address   Returns:   unnamed   of type uint256", 
            "title": "function globalConstraintsCount"
        }, 
        {
            "location": "/reference/controller/UController/#function-genericaction", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _params   of type bytes32[]  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function genericAction"
        }, 
        {
            "location": "/reference/controller/UController/#function-externaltokentransferfrom", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _from   of type address  _to   of type address  _value   of type uint256  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function externalTokenTransferFrom"
        }, 
        {
            "location": "/reference/controller/UController/#function-externaltokenincreaseapproval", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _spender   of type address  _addedValue   of type uint256  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function externalTokenIncreaseApproval"
        }, 
        {
            "location": "/reference/controller/UController/#function-externaltokendecreaseapproval", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _externalToken   of type address  _spender   of type address  _subtractedValue   of type uint256  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function externalTokenDecreaseApproval"
        }, 
        {
            "location": "/reference/controller/UController/#function-addglobalconstraint", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _globalConstraint   of type address  _params   of type bytes32  _avatar   of type address   Returns:   unnamed   of type bool", 
            "title": "function addGlobalConstraint"
        }, 
        {
            "location": "/reference/globalConstraints/GlobalConstraintInterface/", 
            "text": "GlobalConstraintInterface\n\n\nsee the source\n\n\nCode deposit cost: \nNo bound available.\n\n\nExecution cost: \nNo bound available.\n\n\nTotal deploy cost(deposit + execution): \nNo bound available.\n\n\n\n\nrelated: \nTokenCapGC\n\n\n\n\nGlobal Constraint\ns define certain conditions the DAO must hold at all times. More concretely, they define \npre\n \n \npost\n conditions that must hold before \n after any action the DAO takes.\nThey are meant to be \nUniversal\n(i.e. only one deployed instance), but do not strictly need to be.\n\n\nWhen an action is about to happen, the \nController\n consults the \nGlobal Constraint\n and runs it's \npre\n \n \npost\n methods to see if the conditions hold.\nIt passes the following parameters to \npre\n \n \npost\n:\n\n\n\n\naddress scheme\n - the scheme that performs the action.\n\n\nbytes32 hash\n - a hash of the parameters to be used.\n\n\nbytes32 method\n - what kind of event occurred, available \nmethod\ns:\n\n\nmintReputation\n\n\nmintTokens\n\n\nregisterScheme\n\n\nunregisterScheme\n\n\nsendEther\n\n\nexternalTokenTransfer\n\n\nexternalTokenTransferFrom\n\n\nexternalTokenIncreaseApproval\n\n\nexternalTokenDecreaseApproval\n\n\ngenericAction\n - all other actions.\n\n\n\n\n\n\n\n\nExamples\n\n\nA simple time-lock constraint for registering schemes\n\n\nDefining it\n\n\nWe are going to define a simple global constraint that disallows registering new \nScheme\ns during a certain time period.\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\nimport\n \ndaostack-arc/contracts/globalConstraints/GlobalConstraintInterface.sol\n;\n\n\n\ncontract\n \nSchemeRegisterTimeLock\n \nis\n \nGlobalConstraintInterface\n{\n\n\n    \n/*\n \nDefine\n \nhow\n \nour\n \nparameters\n \nlook\n \nlike\n*/\n\n    \nstruct\n \nParams\n{\n\n        \nuint\n \nstart\n;\n\n        \nuint\n \nend\n;\n\n    \n}\n\n\n    \nmapping\n(\nbytes32\n=\nParams\n)\n \npublic\n \nparams\n;\n\n\n    \nfunction\n \nsetParams\n(\nuint\n \nstart\n,\n \nuint\n \nend\n)\n \nreturns\n(\nbytes32\n){\n\n        \nbytes32\n \nhash\n \n=\n \nkeccak256\n(\nstart\n,\nend\n);\n\n        \nparams\n[\nhash\n]\n.\nstart\n \n=\n \nstart\n;\n\n        \nparams\n[\nhash\n]\n.\nend\n \n=\n \nend\n;\n\n        \nreturn\n \nhash\n;\n\n    \n}\n\n\n    \nfunction\n \npre\n(\naddress\n \nscheme\n,\n \nbytes32\n \nhash\n,\n \nbytes32\n \nmethod\n){\n\n        \n/*\n \nThis\n \nruns\n \n*\nbefore\n*\n \nan\n \naction\n \nis\n \ntaken\n \n*/\n\n\n        \n/*\n \nmake\n \nsure\n \nno\n \nregisterations\n \noccur\n \nbetween\n \n`start`\n \nand\n \n`end`\n*/\n\n        \nif\n(\nmethod\n \n==\n \nregisterScheme\n \n            \n \nparams\n[\nhash\n]\n.\nstart\n \n=\n \nnow\n \n            \n \nnow\n \n=\n \nparams\n[\nhash\n]\n.\nend\n)\n\n                \nreturn\n \nfalse\n;\n\n\n        \nreturn\n \ntrue\n;\n\n    \n}\n\n\n    \nfunction\n \npost\n(\naddress\n \nscheme\n,\n \nbytes32\n \nhash\n,\n \nbytes32\n \nmethod\n){\n\n        \n/*\n \nThis\n \nruns\n \n*\nafter\n*\n \nan\n \naction\n \nis\n \ntaken\n \n*/\n\n        \nreturn\n \ntrue\n;\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nRegistering it with the controller\n\n\nRegistering a global constraint is done inside a method of a \nScheme\n which is permitted to add/remove global constraints. \n\n\n1\n2\n3\n4\n5\nSchemeRegisterTimeLock gc = new SchemeRegisterTimeLock();\n\n/* Somewhere inside a scheme with permission to add global constraints */\nbytes32 hash = gc.setParameters(now,now + 2 days)\ncontoller.addGlobalConstraint(address(myGlobalConstraint),hash)\n\n\n\n\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nNothing\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n pre\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\n_params\n \nof type bytes32\n\n\n_method\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n post\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_scheme\n \nof type address\n\n\n_params\n \nof type bytes32\n\n\n_method\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "GlobalConstraintInterface"
        }, 
        {
            "location": "/reference/globalConstraints/GlobalConstraintInterface/#globalconstraintinterface", 
            "text": "see the source  Code deposit cost:  No bound available.  Execution cost:  No bound available.  Total deploy cost(deposit + execution):  No bound available.   related:  TokenCapGC   Global Constraint s define certain conditions the DAO must hold at all times. More concretely, they define  pre     post  conditions that must hold before   after any action the DAO takes.\nThey are meant to be  Universal (i.e. only one deployed instance), but do not strictly need to be.  When an action is about to happen, the  Controller  consults the  Global Constraint  and runs it's  pre     post  methods to see if the conditions hold.\nIt passes the following parameters to  pre     post :   address scheme  - the scheme that performs the action.  bytes32 hash  - a hash of the parameters to be used.  bytes32 method  - what kind of event occurred, available  method s:  mintReputation  mintTokens  registerScheme  unregisterScheme  sendEther  externalTokenTransfer  externalTokenTransferFrom  externalTokenIncreaseApproval  externalTokenDecreaseApproval  genericAction  - all other actions.", 
            "title": "GlobalConstraintInterface"
        }, 
        {
            "location": "/reference/globalConstraints/GlobalConstraintInterface/#examples", 
            "text": "", 
            "title": "Examples"
        }, 
        {
            "location": "/reference/globalConstraints/GlobalConstraintInterface/#a-simple-time-lock-constraint-for-registering-schemes", 
            "text": "", 
            "title": "A simple time-lock constraint for registering schemes"
        }, 
        {
            "location": "/reference/globalConstraints/GlobalConstraintInterface/#defining-it", 
            "text": "We are going to define a simple global constraint that disallows registering new  Scheme s during a certain time period.   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36 import   daostack-arc/contracts/globalConstraints/GlobalConstraintInterface.sol ;  contract   SchemeRegisterTimeLock   is   GlobalConstraintInterface { \n\n     /*   Define   how   our   parameters   look   like */ \n     struct   Params { \n         uint   start ; \n         uint   end ; \n     } \n\n     mapping ( bytes32 = Params )   public   params ; \n\n     function   setParams ( uint   start ,   uint   end )   returns ( bytes32 ){ \n         bytes32   hash   =   keccak256 ( start , end ); \n         params [ hash ] . start   =   start ; \n         params [ hash ] . end   =   end ; \n         return   hash ; \n     } \n\n     function   pre ( address   scheme ,   bytes32   hash ,   bytes32   method ){ \n         /*   This   runs   * before *   an   action   is   taken   */ \n\n         /*   make   sure   no   registerations   occur   between   `start`   and   `end` */ \n         if ( method   ==   registerScheme  \n               params [ hash ] . start   =   now  \n               now   =   params [ hash ] . end ) \n                 return   false ; \n\n         return   true ; \n     } \n\n     function   post ( address   scheme ,   bytes32   hash ,   bytes32   method ){ \n         /*   This   runs   * after *   an   action   is   taken   */ \n         return   true ; \n     }  }", 
            "title": "Defining it"
        }, 
        {
            "location": "/reference/globalConstraints/GlobalConstraintInterface/#registering-it-with-the-controller", 
            "text": "Registering a global constraint is done inside a method of a  Scheme  which is permitted to add/remove global constraints.   1\n2\n3\n4\n5 SchemeRegisterTimeLock gc = new SchemeRegisterTimeLock();\n\n/* Somewhere inside a scheme with permission to add global constraints */\nbytes32 hash = gc.setParameters(now,now + 2 days)\ncontoller.addGlobalConstraint(address(myGlobalConstraint),hash)", 
            "title": "Registering it with the controller"
        }, 
        {
            "location": "/reference/globalConstraints/GlobalConstraintInterface/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/globalConstraints/GlobalConstraintInterface/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/globalConstraints/GlobalConstraintInterface/#events", 
            "text": "Nothing", 
            "title": "Events"
        }, 
        {
            "location": "/reference/globalConstraints/GlobalConstraintInterface/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/globalConstraints/GlobalConstraintInterface/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/globalConstraints/GlobalConstraintInterface/#function-pre", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _scheme   of type address  _params   of type bytes32  _method   of type bytes32   Returns:   unnamed   of type bool", 
            "title": "function pre"
        }, 
        {
            "location": "/reference/globalConstraints/GlobalConstraintInterface/#function-post", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _scheme   of type address  _params   of type bytes32  _method   of type bytes32   Returns:   unnamed   of type bool", 
            "title": "function post"
        }, 
        {
            "location": "/reference/globalConstraints/TokenCapGC/", 
            "text": "TokenCapGC\n\n\nsee the source\n\n\nCode deposit cost: \nless than 183400 gas.\n\n\nExecution cost: \nless than 221 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 183621 gas.\n\n\n\n\nToken Cap Global Constraint\n\n\n\n\nTokenCapGC\n is a simple global constraint that limits the number of tokens that can be issued.\n\n\nUsage\n\n\n1\n2\n3\n4\n5\nTokenCapGC gc = new TokenCapGC();\n\n/* some where inside a scheme with relevent permissions */\nbytes32 hash = gc.setParameters(contoller.nativeToken,100) /*limit DAO token issuance to 100*/\ncontroller.addGlobalConstraint(gc,hash)\n\n\n\n\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nNothing\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n setParameters\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_token\n \nof type address\n\n\n_cap\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n pre\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | pure\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\nunnamed\n \nof type bytes32\n\n\nunnamed\n \nof type bytes\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n post\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\n_paramsHash\n \nof type bytes32\n\n\nunnamed\n \nof type bytes\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n params\n\n\nExecution cost: \nless than 934 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\ntoken\n \nof type address\n\n\ncap\n \nof type uint256\n\n\n\n\nfunction\n getParametersHash\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | pure\n\n\nInputs:\n\n\n\n\n_token\n \nof type address\n\n\n_cap\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32", 
            "title": "TokenCapGC"
        }, 
        {
            "location": "/reference/globalConstraints/TokenCapGC/#tokencapgc", 
            "text": "see the source  Code deposit cost:  less than 183400 gas.  Execution cost:  less than 221 gas.  Total deploy cost(deposit + execution):  less than 183621 gas.   Token Cap Global Constraint   TokenCapGC  is a simple global constraint that limits the number of tokens that can be issued.", 
            "title": "TokenCapGC"
        }, 
        {
            "location": "/reference/globalConstraints/TokenCapGC/#usage", 
            "text": "1\n2\n3\n4\n5 TokenCapGC gc = new TokenCapGC();\n\n/* some where inside a scheme with relevent permissions */\nbytes32 hash = gc.setParameters(contoller.nativeToken,100) /*limit DAO token issuance to 100*/\ncontroller.addGlobalConstraint(gc,hash)", 
            "title": "Usage"
        }, 
        {
            "location": "/reference/globalConstraints/TokenCapGC/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/globalConstraints/TokenCapGC/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/globalConstraints/TokenCapGC/#events", 
            "text": "Nothing", 
            "title": "Events"
        }, 
        {
            "location": "/reference/globalConstraints/TokenCapGC/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/globalConstraints/TokenCapGC/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/globalConstraints/TokenCapGC/#function-setparameters", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _token   of type address  _cap   of type uint256   Returns:   unnamed   of type bytes32", 
            "title": "function setParameters"
        }, 
        {
            "location": "/reference/globalConstraints/TokenCapGC/#function-pre", 
            "text": "Execution cost:  No bound available.  constant | pure  Inputs:   unnamed   of type address  unnamed   of type bytes32  unnamed   of type bytes   Returns:   unnamed   of type bool", 
            "title": "function pre"
        }, 
        {
            "location": "/reference/globalConstraints/TokenCapGC/#function-post", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   unnamed   of type address  _paramsHash   of type bytes32  unnamed   of type bytes   Returns:   unnamed   of type bool", 
            "title": "function post"
        }, 
        {
            "location": "/reference/globalConstraints/TokenCapGC/#function-params", 
            "text": "Execution cost:  less than 934 gas.  constant | view  Inputs:   unnamed   of type bytes32   Returns:   token   of type address  cap   of type uint256", 
            "title": "function params"
        }, 
        {
            "location": "/reference/globalConstraints/TokenCapGC/#function-getparametershash", 
            "text": "Execution cost:  No bound available.  constant | pure  Inputs:   _token   of type address  _cap   of type uint256   Returns:   unnamed   of type bytes32", 
            "title": "function getParametersHash"
        }, 
        {
            "location": "/reference/test/ActionMock/", 
            "text": "ActionMock\n\n\nsee the source\n\n\nCode deposit cost: \nless than 142000 gas.\n\n\nExecution cost: \nless than 185 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 142185 gas.\n\n\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nevent\n Action\n\n\nParams:\n\n\n\n\n_sender\n \nof type address\n\n\n_param\n \nof type bytes32\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n genericAction\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\navatar\n \nof type address\n\n\nparams\n \nof type bytes32[]\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n action\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nparams\n \nof type bytes32[]\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "ActionMock"
        }, 
        {
            "location": "/reference/test/ActionMock/#actionmock", 
            "text": "see the source  Code deposit cost:  less than 142000 gas.  Execution cost:  less than 185 gas.  Total deploy cost(deposit + execution):  less than 142185 gas.", 
            "title": "ActionMock"
        }, 
        {
            "location": "/reference/test/ActionMock/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/test/ActionMock/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/test/ActionMock/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/test/ActionMock/#event-action", 
            "text": "Params:   _sender   of type address  _param   of type bytes32", 
            "title": "event Action"
        }, 
        {
            "location": "/reference/test/ActionMock/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/test/ActionMock/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/test/ActionMock/#function-genericaction", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   avatar   of type address  params   of type bytes32[]   Returns:   unnamed   of type bool", 
            "title": "function genericAction"
        }, 
        {
            "location": "/reference/test/ActionMock/#function-action", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   params   of type bytes32[]   Returns:   unnamed   of type bool", 
            "title": "function action"
        }, 
        {
            "location": "/reference/test/Debug/", 
            "text": "Debug\n\n\nsee the source\n\n\nCode deposit cost: \nless than 10600 gas.\n\n\nExecution cost: \nless than 61 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 10661 gas.\n\n\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nevent\n LogUint\n\n\nParams:\n\n\n\n\n_msg\n \nof type uint256\n\n\n\n\nevent\n LogString\n\n\nParams:\n\n\n\n\n_msg\n \nof type string\n\n\n\n\nevent\n LogInt\n\n\nParams:\n\n\n\n\n_msg\n \nof type int256\n\n\n\n\nevent\n LogBytes32\n\n\nParams:\n\n\n\n\n_msg\n \nof type bytes32\n\n\n\n\nevent\n LogBytes\n\n\nParams:\n\n\n\n\n_msg\n \nof type bytes\n\n\n\n\nevent\n LogBool\n\n\nParams:\n\n\n\n\n_msg\n \nof type bool\n\n\n\n\nevent\n LogAddress\n\n\nParams:\n\n\n\n\n_msg\n \nof type address\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nNothing", 
            "title": "Debug"
        }, 
        {
            "location": "/reference/test/Debug/#debug", 
            "text": "see the source  Code deposit cost:  less than 10600 gas.  Execution cost:  less than 61 gas.  Total deploy cost(deposit + execution):  less than 10661 gas.", 
            "title": "Debug"
        }, 
        {
            "location": "/reference/test/Debug/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/test/Debug/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/test/Debug/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/test/Debug/#event-loguint", 
            "text": "Params:   _msg   of type uint256", 
            "title": "event LogUint"
        }, 
        {
            "location": "/reference/test/Debug/#event-logstring", 
            "text": "Params:   _msg   of type string", 
            "title": "event LogString"
        }, 
        {
            "location": "/reference/test/Debug/#event-logint", 
            "text": "Params:   _msg   of type int256", 
            "title": "event LogInt"
        }, 
        {
            "location": "/reference/test/Debug/#event-logbytes32", 
            "text": "Params:   _msg   of type bytes32", 
            "title": "event LogBytes32"
        }, 
        {
            "location": "/reference/test/Debug/#event-logbytes", 
            "text": "Params:   _msg   of type bytes", 
            "title": "event LogBytes"
        }, 
        {
            "location": "/reference/test/Debug/#event-logbool", 
            "text": "Params:   _msg   of type bool", 
            "title": "event LogBool"
        }, 
        {
            "location": "/reference/test/Debug/#event-logaddress", 
            "text": "Params:   _msg   of type address", 
            "title": "event LogAddress"
        }, 
        {
            "location": "/reference/test/Debug/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/test/Debug/#functions", 
            "text": "Nothing", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/test/ExecutableTest/", 
            "text": "ExecutableTest\n\n\nsee the source\n\n\nCode deposit cost: \nless than 74000 gas.\n\n\nExecution cost: \nless than 118 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 74118 gas.\n\n\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nevent\n LogUint\n\n\nParams:\n\n\n\n\n_msg\n \nof type uint256\n\n\n\n\nevent\n LogString\n\n\nParams:\n\n\n\n\n_msg\n \nof type string\n\n\n\n\nevent\n LogInt\n\n\nParams:\n\n\n\n\n_msg\n \nof type int256\n\n\n\n\nevent\n LogBytes32\n\n\nParams:\n\n\n\n\n_msg\n \nof type bytes32\n\n\n\n\nevent\n LogBytes\n\n\nParams:\n\n\n\n\n_msg\n \nof type bytes\n\n\n\n\nevent\n LogBool\n\n\nParams:\n\n\n\n\n_msg\n \nof type bool\n\n\n\n\nevent\n LogAddress\n\n\nParams:\n\n\n\n\n_msg\n \nof type address\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n execute\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_avatar\n \nof type address\n\n\n_param\n \nof type int256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "ExecutableTest"
        }, 
        {
            "location": "/reference/test/ExecutableTest/#executabletest", 
            "text": "see the source  Code deposit cost:  less than 74000 gas.  Execution cost:  less than 118 gas.  Total deploy cost(deposit + execution):  less than 74118 gas.", 
            "title": "ExecutableTest"
        }, 
        {
            "location": "/reference/test/ExecutableTest/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/test/ExecutableTest/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/test/ExecutableTest/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/test/ExecutableTest/#event-loguint", 
            "text": "Params:   _msg   of type uint256", 
            "title": "event LogUint"
        }, 
        {
            "location": "/reference/test/ExecutableTest/#event-logstring", 
            "text": "Params:   _msg   of type string", 
            "title": "event LogString"
        }, 
        {
            "location": "/reference/test/ExecutableTest/#event-logint", 
            "text": "Params:   _msg   of type int256", 
            "title": "event LogInt"
        }, 
        {
            "location": "/reference/test/ExecutableTest/#event-logbytes32", 
            "text": "Params:   _msg   of type bytes32", 
            "title": "event LogBytes32"
        }, 
        {
            "location": "/reference/test/ExecutableTest/#event-logbytes", 
            "text": "Params:   _msg   of type bytes", 
            "title": "event LogBytes"
        }, 
        {
            "location": "/reference/test/ExecutableTest/#event-logbool", 
            "text": "Params:   _msg   of type bool", 
            "title": "event LogBool"
        }, 
        {
            "location": "/reference/test/ExecutableTest/#event-logaddress", 
            "text": "Params:   _msg   of type address", 
            "title": "event LogAddress"
        }, 
        {
            "location": "/reference/test/ExecutableTest/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/test/ExecutableTest/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/test/ExecutableTest/#function-execute", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _avatar   of type address  _param   of type int256   Returns:   unnamed   of type bool", 
            "title": "function execute"
        }, 
        {
            "location": "/reference/test/GenesisProtocolFormulasMock/", 
            "text": "GenesisProtocolFormulasMock\n\n\nsee the source\n\n\nCode deposit cost: \nless than 332600 gas.\n\n\nExecution cost: \nless than 363 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 332963 gas.\n\n\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nNothing\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n threshold\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n shouldBoost\n\n\n\n\nisBoost check if the proposal will shift to the relative voting phase.\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32- the ID of the proposal\n\n\n\n\nbool true or false.\n\n\nfunction\n score\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n redeemAmount\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_staker\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256", 
            "title": "GenesisProtocolFormulasMock"
        }, 
        {
            "location": "/reference/test/GenesisProtocolFormulasMock/#genesisprotocolformulasmock", 
            "text": "see the source  Code deposit cost:  less than 332600 gas.  Execution cost:  less than 363 gas.  Total deploy cost(deposit + execution):  less than 332963 gas.", 
            "title": "GenesisProtocolFormulasMock"
        }, 
        {
            "location": "/reference/test/GenesisProtocolFormulasMock/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/test/GenesisProtocolFormulasMock/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/test/GenesisProtocolFormulasMock/#events", 
            "text": "Nothing", 
            "title": "Events"
        }, 
        {
            "location": "/reference/test/GenesisProtocolFormulasMock/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/test/GenesisProtocolFormulasMock/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/test/GenesisProtocolFormulasMock/#function-threshold", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _avatar   of type address   Returns:   unnamed   of type uint256", 
            "title": "function threshold"
        }, 
        {
            "location": "/reference/test/GenesisProtocolFormulasMock/#function-shouldboost", 
            "text": "isBoost check if the proposal will shift to the relative voting phase.   Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32- the ID of the proposal   bool true or false.", 
            "title": "function shouldBoost"
        }, 
        {
            "location": "/reference/test/GenesisProtocolFormulasMock/#function-score", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32   Returns:   unnamed   of type uint256", 
            "title": "function score"
        }, 
        {
            "location": "/reference/test/GenesisProtocolFormulasMock/#function-redeemamount", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   _proposalId   of type bytes32  _staker   of type address   Returns:   unnamed   of type uint256", 
            "title": "function redeemAmount"
        }, 
        {
            "location": "/reference/test/GlobalConstraintMock/", 
            "text": "GlobalConstraintMock\n\n\nsee the source\n\n\nCode deposit cost: \nless than 192400 gas.\n\n\nExecution cost: \nless than 233 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 192633 gas.\n\n\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nNothing\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n setConstraint\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nmethod\n \nof type bytes\n\n\npre\n \nof type bool\n\n\npost\n \nof type bool\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n pre\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\nunnamed\n \nof type bytes32\n\n\nmethod\n \nof type bytes\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n post\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\nunnamed\n \nof type bytes32\n\n\nmethod\n \nof type bytes\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "GlobalConstraintMock"
        }, 
        {
            "location": "/reference/test/GlobalConstraintMock/#globalconstraintmock", 
            "text": "see the source  Code deposit cost:  less than 192400 gas.  Execution cost:  less than 233 gas.  Total deploy cost(deposit + execution):  less than 192633 gas.", 
            "title": "GlobalConstraintMock"
        }, 
        {
            "location": "/reference/test/GlobalConstraintMock/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/test/GlobalConstraintMock/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/test/GlobalConstraintMock/#events", 
            "text": "Nothing", 
            "title": "Events"
        }, 
        {
            "location": "/reference/test/GlobalConstraintMock/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/test/GlobalConstraintMock/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/test/GlobalConstraintMock/#function-setconstraint", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   method   of type bytes  pre   of type bool  post   of type bool   Returns:   unnamed   of type bool", 
            "title": "function setConstraint"
        }, 
        {
            "location": "/reference/test/GlobalConstraintMock/#function-pre", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   unnamed   of type address  unnamed   of type bytes32  method   of type bytes   Returns:   unnamed   of type bool", 
            "title": "function pre"
        }, 
        {
            "location": "/reference/test/GlobalConstraintMock/#function-post", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   unnamed   of type address  unnamed   of type bytes32  method   of type bytes   Returns:   unnamed   of type bool", 
            "title": "function post"
        }, 
        {
            "location": "/reference/test/UniversalSchemeMock/", 
            "text": "UniversalSchemeMock\n\n\nsee the source\n\n\nCode deposit cost: \nless than 98600 gas.\n\n\nExecution cost: \nless than 20515 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 119115 gas.\n\n\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n UniversalSchemeMock()\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\nNothing\n\n\nEvents\n\n\nevent\n OwnershipTransferred\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type address\n\n\nnewOwner\n \nof type address\n\n\n\n\nevent\n LogNewProposal\n\n\nParams:\n\n\n\n\nproposalId\n \nof type bytes32\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n updateParameters\n\n\nExecution cost: \nless than 20443 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_hashedParameters\n \nof type bytes32\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n transferOwnership\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost: \nless than 22788 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nnewOwner\n \nof type address- The address to transfer ownership to.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n owner\n\n\nExecution cost: \nless than 548 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n hashedParameters\n\n\nExecution cost: \nless than 439 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32", 
            "title": "UniversalSchemeMock"
        }, 
        {
            "location": "/reference/test/UniversalSchemeMock/#universalschememock", 
            "text": "see the source  Code deposit cost:  less than 98600 gas.  Execution cost:  less than 20515 gas.  Total deploy cost(deposit + execution):  less than 119115 gas.", 
            "title": "UniversalSchemeMock"
        }, 
        {
            "location": "/reference/test/UniversalSchemeMock/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/test/UniversalSchemeMock/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/test/UniversalSchemeMock/#constructor-universalschememock", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:  Nothing", 
            "title": "constructor UniversalSchemeMock()"
        }, 
        {
            "location": "/reference/test/UniversalSchemeMock/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/test/UniversalSchemeMock/#event-ownershiptransferred", 
            "text": "Params:   previousOwner   of type address  newOwner   of type address", 
            "title": "event OwnershipTransferred"
        }, 
        {
            "location": "/reference/test/UniversalSchemeMock/#event-lognewproposal", 
            "text": "Params:   proposalId   of type bytes32", 
            "title": "event LogNewProposal"
        }, 
        {
            "location": "/reference/test/UniversalSchemeMock/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/test/UniversalSchemeMock/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/test/UniversalSchemeMock/#function-updateparameters", 
            "text": "Execution cost:  less than 20443 gas.  nonpayable  Inputs:   _hashedParameters   of type bytes32   Returns:  Nothing", 
            "title": "function updateParameters"
        }, 
        {
            "location": "/reference/test/UniversalSchemeMock/#function-transferownership", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost:  less than 22788 gas.  nonpayable  Inputs:   newOwner   of type address- The address to transfer ownership to.   Returns:  Nothing", 
            "title": "function transferOwnership"
        }, 
        {
            "location": "/reference/test/UniversalSchemeMock/#function-owner", 
            "text": "Execution cost:  less than 548 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function owner"
        }, 
        {
            "location": "/reference/test/UniversalSchemeMock/#function-hashedparameters", 
            "text": "Execution cost:  less than 439 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type bytes32", 
            "title": "function hashedParameters"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/", 
            "text": "ContributionReward\n\n\nsee the source\n\n\nCode deposit cost: \nless than 781200 gas.\n\n\nExecution cost: \nless than 21186 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 802386 gas.\n\n\n\n\nA scheme for proposing and rewarding contributions to an organization\n\n\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n ContributionReward()\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\nNothing\n\n\nEvents\n\n\nevent\n ProposalExecuted\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nevent\n ProposalDeleted\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nevent\n OwnershipTransferred\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type address\n\n\nnewOwner\n \nof type address\n\n\n\n\nevent\n NewContributionProposal\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n_intVoteInterface\n \nof type address\n\n\n_contributionDescription\n \nof type bytes32\n\n\n_rewards\n \nof type uint256[4]\n\n\n_externalToken\n \nof type address\n\n\n_beneficiary\n \nof type address\n\n\n\n\nevent\n LogNewProposal\n\n\nParams:\n\n\n\n\nproposalId\n \nof type bytes32\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n updateParameters\n\n\nExecution cost: \nless than 20550 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_hashedParameters\n \nof type bytes32\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n transferOwnership\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost: \nless than 22983 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nnewOwner\n \nof type address- The address to transfer ownership to.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n setParameters\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_orgNativeTokenFee\n \nof type uint256\n\n\n_voteApproveParams\n \nof type bytes32\n\n\n_intVote\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n proposeContributionReward\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n_contributionDescriptionHash\n \nof type bytes32\n\n\n_rewards\n \nof type uint256[4]\n\n\n_externalToken\n \nof type address\n\n\n_beneficiary\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n parameters\n\n\nExecution cost: \nless than 1148 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\norgNativeTokenFee\n \nof type uint256\n\n\nvoteApproveParams\n \nof type bytes32\n\n\nintVote\n \nof type address\n\n\n\n\nfunction\n owner\n\n\nExecution cost: \nless than 721 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n organizationsProposals\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\ncontributionDescriptionHash\n \nof type bytes32\n\n\nnativeTokenReward\n \nof type uint256\n\n\nreputationReward\n \nof type uint256\n\n\nethReward\n \nof type uint256\n\n\nexternalToken\n \nof type address\n\n\nexternalTokenReward\n \nof type uint256\n\n\nbeneficiary\n \nof type address\n\n\n\n\nfunction\n hashedParameters\n\n\nExecution cost: \nless than 634 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n getParametersHash\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | pure\n\n\nInputs:\n\n\n\n\n_orgNativeTokenFee\n \nof type uint256\n\n\n_voteApproveParams\n \nof type bytes32\n\n\n_intVote\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n execute\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_avatar\n \nof type address\n\n\n_param\n \nof type int256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "ContributionReward"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#contributionreward", 
            "text": "see the source  Code deposit cost:  less than 781200 gas.  Execution cost:  less than 21186 gas.  Total deploy cost(deposit + execution):  less than 802386 gas.   A scheme for proposing and rewarding contributions to an organization", 
            "title": "ContributionReward"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#constructor-contributionreward", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:  Nothing", 
            "title": "constructor ContributionReward()"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#event-proposalexecuted", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32", 
            "title": "event ProposalExecuted"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#event-proposaldeleted", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32", 
            "title": "event ProposalDeleted"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#event-ownershiptransferred", 
            "text": "Params:   previousOwner   of type address  newOwner   of type address", 
            "title": "event OwnershipTransferred"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#event-newcontributionproposal", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32  _intVoteInterface   of type address  _contributionDescription   of type bytes32  _rewards   of type uint256[4]  _externalToken   of type address  _beneficiary   of type address", 
            "title": "event NewContributionProposal"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#event-lognewproposal", 
            "text": "Params:   proposalId   of type bytes32", 
            "title": "event LogNewProposal"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#function-updateparameters", 
            "text": "Execution cost:  less than 20550 gas.  nonpayable  Inputs:   _hashedParameters   of type bytes32   Returns:  Nothing", 
            "title": "function updateParameters"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#function-transferownership", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost:  less than 22983 gas.  nonpayable  Inputs:   newOwner   of type address- The address to transfer ownership to.   Returns:  Nothing", 
            "title": "function transferOwnership"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#function-setparameters", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _orgNativeTokenFee   of type uint256  _voteApproveParams   of type bytes32  _intVote   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function setParameters"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#function-proposecontributionreward", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _avatar   of type address  _contributionDescriptionHash   of type bytes32  _rewards   of type uint256[4]  _externalToken   of type address  _beneficiary   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function proposeContributionReward"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#function-parameters", 
            "text": "Execution cost:  less than 1148 gas.  constant | view  Inputs:   unnamed   of type bytes32   Returns:   orgNativeTokenFee   of type uint256  voteApproveParams   of type bytes32  intVote   of type address", 
            "title": "function parameters"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#function-owner", 
            "text": "Execution cost:  less than 721 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function owner"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#function-organizationsproposals", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   unnamed   of type address  unnamed   of type bytes32   Returns:   contributionDescriptionHash   of type bytes32  nativeTokenReward   of type uint256  reputationReward   of type uint256  ethReward   of type uint256  externalToken   of type address  externalTokenReward   of type uint256  beneficiary   of type address", 
            "title": "function organizationsProposals"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#function-hashedparameters", 
            "text": "Execution cost:  less than 634 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type bytes32", 
            "title": "function hashedParameters"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#function-getparametershash", 
            "text": "Execution cost:  No bound available.  constant | pure  Inputs:   _orgNativeTokenFee   of type uint256  _voteApproveParams   of type bytes32  _intVote   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function getParametersHash"
        }, 
        {
            "location": "/reference/universalSchemes/ContributionReward/#function-execute", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _avatar   of type address  _param   of type int256   Returns:   unnamed   of type bool", 
            "title": "function execute"
        }, 
        {
            "location": "/reference/universalSchemes/ExecutableInterface/", 
            "text": "ExecutableInterface\n\n\nsee the source\n\n\nCode deposit cost: \nNo bound available.\n\n\nExecution cost: \nNo bound available.\n\n\nTotal deploy cost(deposit + execution): \nNo bound available.\n\n\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nNothing\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n execute\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_avatar\n \nof type address\n\n\n_param\n \nof type int256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "ExecutableInterface"
        }, 
        {
            "location": "/reference/universalSchemes/ExecutableInterface/#executableinterface", 
            "text": "see the source  Code deposit cost:  No bound available.  Execution cost:  No bound available.  Total deploy cost(deposit + execution):  No bound available.", 
            "title": "ExecutableInterface"
        }, 
        {
            "location": "/reference/universalSchemes/ExecutableInterface/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/universalSchemes/ExecutableInterface/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/universalSchemes/ExecutableInterface/#events", 
            "text": "Nothing", 
            "title": "Events"
        }, 
        {
            "location": "/reference/universalSchemes/ExecutableInterface/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/universalSchemes/ExecutableInterface/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/universalSchemes/ExecutableInterface/#function-execute", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _avatar   of type address  _param   of type int256   Returns:   unnamed   of type bool", 
            "title": "function execute"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/", 
            "text": "GenesisScheme\n\n\nsee the source\n\n\nCode deposit cost: \nless than 4440000 gas.\n\n\nExecution cost: \nless than 5150 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 4445150 gas.\n\n\n\n\nGenesis Scheme that creates organizations\n\n\n\n\nThe \nGenesis Scheme\n is a special scheme that creates a brand new DAO and initializes it with a set of default \nSchemes\n.\nIt is the main way to create new DAOs on the DAOStack.\n\n\nUsage\n\n\nStep 1: Create the organization\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\nGenesisScheme gs = new GenesisScheme();\naddress avatar = \n    gs.forgeOrg(\n        \nOrganization name\n,\n        \nToken name\n,\n        \nTKN\n, /*Token symbol*/\n        [me,you], /*founders addresses*/\n        [5,7], /*founders initial token allocation*/\n        [10,12], /*founders initial reputation allocation*/\n    );\n\n\n\n\n\n\nStep 2: Configure some schemes\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\nContributionReward crScheme = new ContributionReward();\nbytes32 paramsHash = crScheme.setParameters(...);\n\nbytes4 permission = 0; /* set to zero = no special permissions */\n    /* permission is a 4 bit number indicating what kind of operations can the scheme do in this organization:\n        1st bit - irrelevent to us.\n        2nd bit - can register other schemes.\n        3rd bit - can add/remove global constraints.\n        4th bit - can upgrade controller. \n    */\n\n\n\n\n\n\nStep 3: Register schemes with the organization\n\n\n1\n2\n3\n4\n5\n6\n7\ngs.setSchemes(\n    Avatar(avatar),\n    [address(crSchemes)], /* schemes to regsiter*/\n    [paramsHash], /* params hash */\n    [true], /* is the scheme a universal scheme */\n    [permission] \n);\n\n\n\n\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n GenesisScheme()\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\nNothing\n\n\nEvents\n\n\nevent\n NewOrg\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n\n\nevent\n InitialSchemesSet\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n setSchemes\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n_schemes\n \nof type address[]\n\n\n_params\n \nof type bytes32[]\n\n\n_permissions\n \nof type bytes4[]\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n forgeOrg\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_orgName\n \nof type bytes32\n\n\n_tokenName\n \nof type string\n\n\n_tokenSymbol\n \nof type string\n\n\n_founders\n \nof type address[]\n\n\n_foundersTokenAmount\n \nof type uint256[]\n\n\n_foundersReputationAmount\n \nof type int256[]\n\n\n_uController\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address", 
            "title": "GenesisScheme"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/#genesisscheme", 
            "text": "see the source  Code deposit cost:  less than 4440000 gas.  Execution cost:  less than 5150 gas.  Total deploy cost(deposit + execution):  less than 4445150 gas.   Genesis Scheme that creates organizations   The  Genesis Scheme  is a special scheme that creates a brand new DAO and initializes it with a set of default  Schemes .\nIt is the main way to create new DAOs on the DAOStack.", 
            "title": "GenesisScheme"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/#step-1-create-the-organization", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10 GenesisScheme gs = new GenesisScheme();\naddress avatar = \n    gs.forgeOrg(\n         Organization name ,\n         Token name ,\n         TKN , /*Token symbol*/\n        [me,you], /*founders addresses*/\n        [5,7], /*founders initial token allocation*/\n        [10,12], /*founders initial reputation allocation*/\n    );", 
            "title": "Step 1: Create the organization"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/#step-2-configure-some-schemes", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10 ContributionReward crScheme = new ContributionReward();\nbytes32 paramsHash = crScheme.setParameters(...);\n\nbytes4 permission = 0; /* set to zero = no special permissions */\n    /* permission is a 4 bit number indicating what kind of operations can the scheme do in this organization:\n        1st bit - irrelevent to us.\n        2nd bit - can register other schemes.\n        3rd bit - can add/remove global constraints.\n        4th bit - can upgrade controller. \n    */", 
            "title": "Step 2: Configure some schemes"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/#step-3-register-schemes-with-the-organization", 
            "text": "1\n2\n3\n4\n5\n6\n7 gs.setSchemes(\n    Avatar(avatar),\n    [address(crSchemes)], /* schemes to regsiter*/\n    [paramsHash], /* params hash */\n    [true], /* is the scheme a universal scheme */\n    [permission] \n);", 
            "title": "Step 3: Register schemes with the organization"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/#constructor-genesisscheme", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:  Nothing", 
            "title": "constructor GenesisScheme()"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/#event-neworg", 
            "text": "Params:   _avatar   of type address", 
            "title": "event NewOrg"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/#event-initialschemesset", 
            "text": "Params:   _avatar   of type address", 
            "title": "event InitialSchemesSet"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/#function-setschemes", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _avatar   of type address  _schemes   of type address[]  _params   of type bytes32[]  _permissions   of type bytes4[]   Returns:  Nothing", 
            "title": "function setSchemes"
        }, 
        {
            "location": "/reference/universalSchemes/GenesisScheme/#function-forgeorg", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _orgName   of type bytes32  _tokenName   of type string  _tokenSymbol   of type string  _founders   of type address[]  _foundersTokenAmount   of type uint256[]  _foundersReputationAmount   of type int256[]  _uController   of type address   Returns:   unnamed   of type address", 
            "title": "function forgeOrg"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/", 
            "text": "GlobalConstraintRegistrar\n\n\nsee the source\n\n\nCode deposit cost: \nless than 717800 gas.\n\n\nExecution cost: \nless than 21121 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 738921 gas.\n\n\n\n\nA scheme to manage global constraint for organizations\n\n\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n GlobalConstraintRegistrar()\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\nNothing\n\n\nEvents\n\n\nevent\n RemoveGlobalConstraintsProposal\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n_intVoteInterface\n \nof type address\n\n\n_gc\n \nof type address\n\n\n\n\nevent\n ProposalExecuted\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nevent\n OwnershipTransferred\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type address\n\n\nnewOwner\n \nof type address\n\n\n\n\nevent\n NewGlobalConstraintsProposal\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n_intVoteInterface\n \nof type address\n\n\n_gc\n \nof type address\n\n\n_params\n \nof type bytes32\n\n\n_voteToRemoveParams\n \nof type bytes32\n\n\n\n\nevent\n LogProposalDeleted\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nevent\n LogNewProposal\n\n\nParams:\n\n\n\n\nproposalId\n \nof type bytes32\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n execute\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_avatar\n \nof type address\n\n\n_param\n \nof type int256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n parameters\n\n\nExecution cost: \nless than 894 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nvoteRegisterParams\n \nof type bytes32\n\n\nintVote\n \nof type address\n\n\n\n\nfunction\n proposeToRemoveGC\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n_gc\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n transferOwnership\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost: \nless than 22983 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nnewOwner\n \nof type address- The address to transfer ownership to.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n updateParameters\n\n\nExecution cost: \nless than 20594 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_hashedParameters\n \nof type bytes32\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n proposeGlobalConstraint\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n_gc\n \nof type address\n\n\n_params\n \nof type bytes32\n\n\n_voteToRemoveParams\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n setParameters\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_voteRegisterParams\n \nof type bytes32\n\n\n_intVote\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n owner\n\n\nExecution cost: \nless than 743 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n organizationsData\n\n\nExecution cost: \nless than 1013 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nvoteRegisterParams\n \nof type bytes32\n\n\nintVote\n \nof type address\n\n\n\n\nfunction\n hashedParameters\n\n\nExecution cost: \nless than 656 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n getParametersHash\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | pure\n\n\nInputs:\n\n\n\n\n_voteRegisterParams\n \nof type bytes32\n\n\n_intVote\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32", 
            "title": "GlobalConstraintRegistrar"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#globalconstraintregistrar", 
            "text": "see the source  Code deposit cost:  less than 717800 gas.  Execution cost:  less than 21121 gas.  Total deploy cost(deposit + execution):  less than 738921 gas.   A scheme to manage global constraint for organizations", 
            "title": "GlobalConstraintRegistrar"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#constructor-globalconstraintregistrar", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:  Nothing", 
            "title": "constructor GlobalConstraintRegistrar()"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#event-removeglobalconstraintsproposal", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32  _intVoteInterface   of type address  _gc   of type address", 
            "title": "event RemoveGlobalConstraintsProposal"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#event-proposalexecuted", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32", 
            "title": "event ProposalExecuted"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#event-ownershiptransferred", 
            "text": "Params:   previousOwner   of type address  newOwner   of type address", 
            "title": "event OwnershipTransferred"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#event-newglobalconstraintsproposal", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32  _intVoteInterface   of type address  _gc   of type address  _params   of type bytes32  _voteToRemoveParams   of type bytes32", 
            "title": "event NewGlobalConstraintsProposal"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#event-logproposaldeleted", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32", 
            "title": "event LogProposalDeleted"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#event-lognewproposal", 
            "text": "Params:   proposalId   of type bytes32", 
            "title": "event LogNewProposal"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#function-execute", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _avatar   of type address  _param   of type int256   Returns:   unnamed   of type bool", 
            "title": "function execute"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#function-parameters", 
            "text": "Execution cost:  less than 894 gas.  constant | view  Inputs:   unnamed   of type bytes32   Returns:   voteRegisterParams   of type bytes32  intVote   of type address", 
            "title": "function parameters"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#function-proposetoremovegc", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _avatar   of type address  _gc   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function proposeToRemoveGC"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#function-transferownership", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost:  less than 22983 gas.  nonpayable  Inputs:   newOwner   of type address- The address to transfer ownership to.   Returns:  Nothing", 
            "title": "function transferOwnership"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#function-updateparameters", 
            "text": "Execution cost:  less than 20594 gas.  nonpayable  Inputs:   _hashedParameters   of type bytes32   Returns:  Nothing", 
            "title": "function updateParameters"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#function-proposeglobalconstraint", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _avatar   of type address  _gc   of type address  _params   of type bytes32  _voteToRemoveParams   of type bytes32   Returns:   unnamed   of type bytes32", 
            "title": "function proposeGlobalConstraint"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#function-setparameters", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _voteRegisterParams   of type bytes32  _intVote   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function setParameters"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#function-owner", 
            "text": "Execution cost:  less than 743 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function owner"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#function-organizationsdata", 
            "text": "Execution cost:  less than 1013 gas.  constant | view  Inputs:   unnamed   of type address   Returns:   voteRegisterParams   of type bytes32  intVote   of type address", 
            "title": "function organizationsData"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#function-hashedparameters", 
            "text": "Execution cost:  less than 656 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type bytes32", 
            "title": "function hashedParameters"
        }, 
        {
            "location": "/reference/universalSchemes/GlobalConstraintRegistrar/#function-getparametershash", 
            "text": "Execution cost:  No bound available.  constant | pure  Inputs:   _voteRegisterParams   of type bytes32  _intVote   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function getParametersHash"
        }, 
        {
            "location": "/reference/universalSchemes/MirrorContractICO/", 
            "text": "MirrorContractICO\n\n\nsee the source\n\n\nCode deposit cost: \nless than 158400 gas.\n\n\nExecution cost: \nless than 61130 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 219530 gas.\n\n\n\n\nAn avatar contract for ICO.\n\n\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n MirrorContractICO(address, address)\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\n\n\n_organization\n \nof type address\n\n\n_simpleICO\n \nof type address\n\n\n\n\nEvents\n\n\nevent\n OwnershipTransferred\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type address\n\n\nnewOwner\n \nof type address\n\n\n\n\nFallback\n\n\nExecution cost: \nNo bound available.\n\n\npayable\n\n\nFunctions\n\n\nfunction\n transferOwnership\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nnewOwner\n \nof type address- The address to transfer ownership to.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n simpleICO\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n owner\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n organization\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n destroyAndSend\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_recipient\n \nof type address\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n destroy\n\n\n\n\nTransfers the current balance to the owner and terminates the contract.\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\nNothing", 
            "title": "MirrorContractICO"
        }, 
        {
            "location": "/reference/universalSchemes/MirrorContractICO/#mirrorcontractico", 
            "text": "see the source  Code deposit cost:  less than 158400 gas.  Execution cost:  less than 61130 gas.  Total deploy cost(deposit + execution):  less than 219530 gas.   An avatar contract for ICO.", 
            "title": "MirrorContractICO"
        }, 
        {
            "location": "/reference/universalSchemes/MirrorContractICO/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/universalSchemes/MirrorContractICO/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/universalSchemes/MirrorContractICO/#constructor-mirrorcontracticoaddress-address", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:   _organization   of type address  _simpleICO   of type address", 
            "title": "constructor MirrorContractICO(address, address)"
        }, 
        {
            "location": "/reference/universalSchemes/MirrorContractICO/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/universalSchemes/MirrorContractICO/#event-ownershiptransferred", 
            "text": "Params:   previousOwner   of type address  newOwner   of type address", 
            "title": "event OwnershipTransferred"
        }, 
        {
            "location": "/reference/universalSchemes/MirrorContractICO/#fallback", 
            "text": "Execution cost:  No bound available.  payable", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/universalSchemes/MirrorContractICO/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/universalSchemes/MirrorContractICO/#function-transferownership", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost:  No bound available.  nonpayable  Inputs:   newOwner   of type address- The address to transfer ownership to.   Returns:  Nothing", 
            "title": "function transferOwnership"
        }, 
        {
            "location": "/reference/universalSchemes/MirrorContractICO/#function-simpleico", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function simpleICO"
        }, 
        {
            "location": "/reference/universalSchemes/MirrorContractICO/#function-owner", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function owner"
        }, 
        {
            "location": "/reference/universalSchemes/MirrorContractICO/#function-organization", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function organization"
        }, 
        {
            "location": "/reference/universalSchemes/MirrorContractICO/#function-destroyandsend", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _recipient   of type address   Returns:  Nothing", 
            "title": "function destroyAndSend"
        }, 
        {
            "location": "/reference/universalSchemes/MirrorContractICO/#function-destroy", 
            "text": "Transfers the current balance to the owner and terminates the contract.   Execution cost:  No bound available.  nonpayable  Inputs:  Nothing  Returns:  Nothing", 
            "title": "function destroy"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/", 
            "text": "OrganizationRegister\n\n\nsee the source\n\n\nCode deposit cost: \nless than 358000 gas.\n\n\nExecution cost: \nless than 20761 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 378761 gas.\n\n\n\n\nA universal organization registry.\n\n\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n OrganizationRegister()\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\nNothing\n\n\nEvents\n\n\nevent\n Promotion\n\n\nParams:\n\n\n\n\n_registry\n \nof type address\n\n\n_org\n \nof type address\n\n\n_amount\n \nof type uint256\n\n\n\n\nevent\n OwnershipTransferred\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type address\n\n\nnewOwner\n \nof type address\n\n\n\n\nevent\n OrgAdded\n\n\nParams:\n\n\n\n\n_registry\n \nof type address\n\n\n_org\n \nof type address\n\n\n\n\nevent\n LogNewProposal\n\n\nParams:\n\n\n\n\nproposalId\n \nof type bytes32\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n updateParameters\n\n\nExecution cost: \nless than 20550 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_hashedParameters\n \nof type bytes32\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n transferOwnership\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost: \nless than 22961 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nnewOwner\n \nof type address- The address to transfer ownership to.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n setParameters\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_token\n \nof type address\n\n\n_fee\n \nof type uint256\n\n\n_beneficiary\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n parameters\n\n\nExecution cost: \nless than 1157 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nfee\n \nof type uint256\n\n\ntoken\n \nof type address\n\n\nbeneficiary\n \nof type address\n\n\n\n\nfunction\n owner\n\n\nExecution cost: \nless than 677 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n organizationsRegistery\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n hashedParameters\n\n\nExecution cost: \nless than 612 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n getParametersHash\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | pure\n\n\nInputs:\n\n\n\n\n_token\n \nof type address\n\n\n_fee\n \nof type uint256\n\n\n_beneficiary\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n addOrPromoteAddress\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n_record\n \nof type address\n\n\n_amount\n \nof type uint256\n\n\n\n\nReturns:\n\n\nNothing", 
            "title": "OrganizationRegister"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#organizationregister", 
            "text": "see the source  Code deposit cost:  less than 358000 gas.  Execution cost:  less than 20761 gas.  Total deploy cost(deposit + execution):  less than 378761 gas.   A universal organization registry.", 
            "title": "OrganizationRegister"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#constructor-organizationregister", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:  Nothing", 
            "title": "constructor OrganizationRegister()"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#event-promotion", 
            "text": "Params:   _registry   of type address  _org   of type address  _amount   of type uint256", 
            "title": "event Promotion"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#event-ownershiptransferred", 
            "text": "Params:   previousOwner   of type address  newOwner   of type address", 
            "title": "event OwnershipTransferred"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#event-orgadded", 
            "text": "Params:   _registry   of type address  _org   of type address", 
            "title": "event OrgAdded"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#event-lognewproposal", 
            "text": "Params:   proposalId   of type bytes32", 
            "title": "event LogNewProposal"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#function-updateparameters", 
            "text": "Execution cost:  less than 20550 gas.  nonpayable  Inputs:   _hashedParameters   of type bytes32   Returns:  Nothing", 
            "title": "function updateParameters"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#function-transferownership", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost:  less than 22961 gas.  nonpayable  Inputs:   newOwner   of type address- The address to transfer ownership to.   Returns:  Nothing", 
            "title": "function transferOwnership"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#function-setparameters", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _token   of type address  _fee   of type uint256  _beneficiary   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function setParameters"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#function-parameters", 
            "text": "Execution cost:  less than 1157 gas.  constant | view  Inputs:   unnamed   of type bytes32   Returns:   fee   of type uint256  token   of type address  beneficiary   of type address", 
            "title": "function parameters"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#function-owner", 
            "text": "Execution cost:  less than 677 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function owner"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#function-organizationsregistery", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   unnamed   of type address  unnamed   of type address   Returns:   unnamed   of type uint256", 
            "title": "function organizationsRegistery"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#function-hashedparameters", 
            "text": "Execution cost:  less than 612 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type bytes32", 
            "title": "function hashedParameters"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#function-getparametershash", 
            "text": "Execution cost:  No bound available.  constant | pure  Inputs:   _token   of type address  _fee   of type uint256  _beneficiary   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function getParametersHash"
        }, 
        {
            "location": "/reference/universalSchemes/OrganizationRegister/#function-addorpromoteaddress", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _avatar   of type address  _record   of type address  _amount   of type uint256   Returns:  Nothing", 
            "title": "function addOrPromoteAddress"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/", 
            "text": "SchemeRegistrar\n\n\nsee the source\n\n\nCode deposit cost: \nless than 738200 gas.\n\n\nExecution cost: \nless than 21141 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 759341 gas.\n\n\n\n\nA registrar for Schemes for organizations\n\n\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n SchemeRegistrar()\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\nNothing\n\n\nEvents\n\n\nevent\n OwnershipTransferred\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type address\n\n\nnewOwner\n \nof type address\n\n\n\n\nevent\n LogRemoveSchemeProposal\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n_intVoteInterface\n \nof type address\n\n\n_scheme\n \nof type address\n\n\n\n\nevent\n LogProposalExecuted\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nevent\n LogProposalDeleted\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nevent\n LogNewSchemeProposal\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n_intVoteInterface\n \nof type address\n\n\n_scheme\n \nof type address\n\n\n_parametersHash\n \nof type bytes32\n\n\n_isRegistering\n \nof type bool\n\n\n\n\nevent\n LogNewProposal\n\n\nParams:\n\n\n\n\nproposalId\n \nof type bytes32\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n proposeToRemoveScheme\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n_scheme\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n parameters\n\n\nExecution cost: \nless than 1148 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nvoteRegisterParams\n \nof type bytes32\n\n\nvoteRemoveParams\n \nof type bytes32\n\n\nintVote\n \nof type address\n\n\n\n\nfunction\n setParameters\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_voteRegisterParams\n \nof type bytes32\n\n\n_voteRemoveParams\n \nof type bytes32\n\n\n_intVote\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n updateParameters\n\n\nExecution cost: \nless than 20572 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_hashedParameters\n \nof type bytes32\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n transferOwnership\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost: \nless than 23005 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nnewOwner\n \nof type address- The address to transfer ownership to.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n proposeScheme\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n_scheme\n \nof type address\n\n\n_parametersHash\n \nof type bytes32\n\n\n_isRegistering\n \nof type bool\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n owner\n\n\nExecution cost: \nless than 765 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n organizationsProposals\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nscheme\n \nof type address\n\n\nparametersHash\n \nof type bytes32\n\n\nproposalType\n \nof type uint256\n\n\nisRegistering\n \nof type bool\n\n\n\n\nfunction\n hashedParameters\n\n\nExecution cost: \nless than 656 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n getParametersHash\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | pure\n\n\nInputs:\n\n\n\n\n_voteRegisterParams\n \nof type bytes32\n\n\n_voteRemoveParams\n \nof type bytes32\n\n\n_intVote\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n execute\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_avatar\n \nof type address\n\n\n_param\n \nof type int256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool", 
            "title": "SchemeRegistrar"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#schemeregistrar", 
            "text": "see the source  Code deposit cost:  less than 738200 gas.  Execution cost:  less than 21141 gas.  Total deploy cost(deposit + execution):  less than 759341 gas.   A registrar for Schemes for organizations", 
            "title": "SchemeRegistrar"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#constructor-schemeregistrar", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:  Nothing", 
            "title": "constructor SchemeRegistrar()"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#event-ownershiptransferred", 
            "text": "Params:   previousOwner   of type address  newOwner   of type address", 
            "title": "event OwnershipTransferred"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#event-logremoveschemeproposal", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32  _intVoteInterface   of type address  _scheme   of type address", 
            "title": "event LogRemoveSchemeProposal"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#event-logproposalexecuted", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32", 
            "title": "event LogProposalExecuted"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#event-logproposaldeleted", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32", 
            "title": "event LogProposalDeleted"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#event-lognewschemeproposal", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32  _intVoteInterface   of type address  _scheme   of type address  _parametersHash   of type bytes32  _isRegistering   of type bool", 
            "title": "event LogNewSchemeProposal"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#event-lognewproposal", 
            "text": "Params:   proposalId   of type bytes32", 
            "title": "event LogNewProposal"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#function-proposetoremovescheme", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _avatar   of type address  _scheme   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function proposeToRemoveScheme"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#function-parameters", 
            "text": "Execution cost:  less than 1148 gas.  constant | view  Inputs:   unnamed   of type bytes32   Returns:   voteRegisterParams   of type bytes32  voteRemoveParams   of type bytes32  intVote   of type address", 
            "title": "function parameters"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#function-setparameters", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _voteRegisterParams   of type bytes32  _voteRemoveParams   of type bytes32  _intVote   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function setParameters"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#function-updateparameters", 
            "text": "Execution cost:  less than 20572 gas.  nonpayable  Inputs:   _hashedParameters   of type bytes32   Returns:  Nothing", 
            "title": "function updateParameters"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#function-transferownership", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost:  less than 23005 gas.  nonpayable  Inputs:   newOwner   of type address- The address to transfer ownership to.   Returns:  Nothing", 
            "title": "function transferOwnership"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#function-proposescheme", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _avatar   of type address  _scheme   of type address  _parametersHash   of type bytes32  _isRegistering   of type bool   Returns:   unnamed   of type bytes32", 
            "title": "function proposeScheme"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#function-owner", 
            "text": "Execution cost:  less than 765 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function owner"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#function-organizationsproposals", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   unnamed   of type address  unnamed   of type bytes32   Returns:   scheme   of type address  parametersHash   of type bytes32  proposalType   of type uint256  isRegistering   of type bool", 
            "title": "function organizationsProposals"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#function-hashedparameters", 
            "text": "Execution cost:  less than 656 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type bytes32", 
            "title": "function hashedParameters"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#function-getparametershash", 
            "text": "Execution cost:  No bound available.  constant | pure  Inputs:   _voteRegisterParams   of type bytes32  _voteRemoveParams   of type bytes32  _intVote   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function getParametersHash"
        }, 
        {
            "location": "/reference/universalSchemes/SchemeRegistrar/#function-execute", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _avatar   of type address  _param   of type int256   Returns:   unnamed   of type bool", 
            "title": "function execute"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/", 
            "text": "SimpleICO\n\n\nsee the source\n\n\nCode deposit cost: \nless than 876400 gas.\n\n\nExecution cost: \nless than 21277 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 897677 gas.\n\n\n\n\nSimpleICO scheme.\n\n\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n SimpleICO()\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\nNothing\n\n\nEvents\n\n\nevent\n OwnershipTransferred\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type address\n\n\nnewOwner\n \nof type address\n\n\n\n\nevent\n LogNewProposal\n\n\nParams:\n\n\n\n\nproposalId\n \nof type bytes32\n\n\n\n\nevent\n DonationReceived\n\n\nParams:\n\n\n\n\norganization\n \nof type address\n\n\n_beneficiary\n \nof type address\n\n\n_incomingEther\n \nof type uint256\n\n\n_tokensAmount\n \nof type uint256\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n owner\n\n\nExecution cost: \nless than 721 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n parameters\n\n\nExecution cost: \nless than 1880 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\ncap\n \nof type uint256\n\n\nprice\n \nof type uint256\n\n\nstartBlock\n \nof type uint256\n\n\nendBlock\n \nof type uint256\n\n\nbeneficiary\n \nof type address\n\n\nadmin\n \nof type address\n\n\n\n\nfunction\n transferOwnership\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost: \nless than 23049 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nnewOwner\n \nof type address- The address to transfer ownership to.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n updateParameters\n\n\nExecution cost: \nless than 20572 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_hashedParameters\n \nof type bytes32\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n resumeICO\n\n\n\n\nAllowing admin to reopen an ICO.\n\n\n\n\nExecution cost: \nless than 21513 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address- The Avatar's of the organization\n\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n start\n\n\n\n\nstart an ICO\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address- The Avatar's of the organization\n\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n setParameters\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_cap\n \nof type uint256\n\n\n_price\n \nof type uint256\n\n\n_startBlock\n \nof type uint256\n\n\n_endBlock\n \nof type uint256\n\n\n_beneficiary\n \nof type address\n\n\n_admin\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n organizationsICOInfo\n\n\nExecution cost: \nless than 1559 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nparamsHash\n \nof type bytes32\n\n\navatarContractICO\n \nof type address\n\n\ntotalEthRaised\n \nof type uint256\n\n\nisHalted\n \nof type bool\n\n\n\n\nfunction\n isActive\n\n\n\n\nCheck is an ICO is active (halted is still considered active). Active ICO:\n 1. The organization is registered.\n 2. The ICO didn't reach it's cap yet.\n 3. The current block isn't bigger than the \"endBlock\" \n Smaller then the \"startBlock\"\n\n\n\n\nExecution cost: \nless than 3761 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address- The Avatar's of the organization\n\n\n\n\n\nbool which represents a successful of the function\n\n\nfunction\n hashedParameters\n\n\nExecution cost: \nless than 700 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n haltICO\n\n\n\n\nAllowing admin to halt an ICO.\n\n\n\n\nExecution cost: \nless than 21475 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address- The Avatar's of the organization\n\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n getParametersHash\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | pure\n\n\nInputs:\n\n\n\n\n_cap\n \nof type uint256\n\n\n_price\n \nof type uint256\n\n\n_startBlock\n \nof type uint256\n\n\n_endBlock\n \nof type uint256\n\n\n_beneficiary\n \nof type address\n\n\n_admin\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n donate\n\n\nExecution cost: \nNo bound available.\n\n\npayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n_beneficiary\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256", 
            "title": "SimpleICO"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#simpleico", 
            "text": "see the source  Code deposit cost:  less than 876400 gas.  Execution cost:  less than 21277 gas.  Total deploy cost(deposit + execution):  less than 897677 gas.   SimpleICO scheme.", 
            "title": "SimpleICO"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#constructor-simpleico", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:  Nothing", 
            "title": "constructor SimpleICO()"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#event-ownershiptransferred", 
            "text": "Params:   previousOwner   of type address  newOwner   of type address", 
            "title": "event OwnershipTransferred"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#event-lognewproposal", 
            "text": "Params:   proposalId   of type bytes32", 
            "title": "event LogNewProposal"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#event-donationreceived", 
            "text": "Params:   organization   of type address  _beneficiary   of type address  _incomingEther   of type uint256  _tokensAmount   of type uint256", 
            "title": "event DonationReceived"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#function-owner", 
            "text": "Execution cost:  less than 721 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function owner"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#function-parameters", 
            "text": "Execution cost:  less than 1880 gas.  constant | view  Inputs:   unnamed   of type bytes32   Returns:   cap   of type uint256  price   of type uint256  startBlock   of type uint256  endBlock   of type uint256  beneficiary   of type address  admin   of type address", 
            "title": "function parameters"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#function-transferownership", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost:  less than 23049 gas.  nonpayable  Inputs:   newOwner   of type address- The address to transfer ownership to.   Returns:  Nothing", 
            "title": "function transferOwnership"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#function-updateparameters", 
            "text": "Execution cost:  less than 20572 gas.  nonpayable  Inputs:   _hashedParameters   of type bytes32   Returns:  Nothing", 
            "title": "function updateParameters"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#function-resumeico", 
            "text": "Allowing admin to reopen an ICO.   Execution cost:  less than 21513 gas.  nonpayable  Inputs:   _avatar   of type address- The Avatar's of the organization   Returns:  Nothing", 
            "title": "function resumeICO"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#function-start", 
            "text": "start an ICO   Execution cost:  No bound available.  nonpayable  Inputs:   _avatar   of type address- The Avatar's of the organization   Returns:  Nothing", 
            "title": "function start"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#function-setparameters", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _cap   of type uint256  _price   of type uint256  _startBlock   of type uint256  _endBlock   of type uint256  _beneficiary   of type address  _admin   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function setParameters"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#function-organizationsicoinfo", 
            "text": "Execution cost:  less than 1559 gas.  constant | view  Inputs:   unnamed   of type address   Returns:   paramsHash   of type bytes32  avatarContractICO   of type address  totalEthRaised   of type uint256  isHalted   of type bool", 
            "title": "function organizationsICOInfo"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#function-isactive", 
            "text": "Check is an ICO is active (halted is still considered active). Active ICO:\n 1. The organization is registered.\n 2. The ICO didn't reach it's cap yet.\n 3. The current block isn't bigger than the \"endBlock\"   Smaller then the \"startBlock\"   Execution cost:  less than 3761 gas.  constant | view  Inputs:   _avatar   of type address- The Avatar's of the organization   bool which represents a successful of the function", 
            "title": "function isActive"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#function-hashedparameters", 
            "text": "Execution cost:  less than 700 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type bytes32", 
            "title": "function hashedParameters"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#function-haltico", 
            "text": "Allowing admin to halt an ICO.   Execution cost:  less than 21475 gas.  nonpayable  Inputs:   _avatar   of type address- The Avatar's of the organization   Returns:  Nothing", 
            "title": "function haltICO"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#function-getparametershash", 
            "text": "Execution cost:  No bound available.  constant | pure  Inputs:   _cap   of type uint256  _price   of type uint256  _startBlock   of type uint256  _endBlock   of type uint256  _beneficiary   of type address  _admin   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function getParametersHash"
        }, 
        {
            "location": "/reference/universalSchemes/SimpleICO/#function-donate", 
            "text": "Execution cost:  No bound available.  payable  Inputs:   _avatar   of type address  _beneficiary   of type address   Returns:   unnamed   of type uint256", 
            "title": "function donate"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalScheme/", 
            "text": "UniversalScheme\n\n\nsee the source\n\n\nCode deposit cost: \nless than 98600 gas.\n\n\nExecution cost: \nless than 20496 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 119096 gas.\n\n\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nevent\n OwnershipTransferred\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type address\n\n\nnewOwner\n \nof type address\n\n\n\n\nevent\n LogNewProposal\n\n\nParams:\n\n\n\n\nproposalId\n \nof type bytes32\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n updateParameters\n\n\nExecution cost: \nless than 20443 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_hashedParameters\n \nof type bytes32\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n transferOwnership\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost: \nless than 22788 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nnewOwner\n \nof type address- The address to transfer ownership to.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n owner\n\n\nExecution cost: \nless than 548 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n hashedParameters\n\n\nExecution cost: \nless than 439 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32", 
            "title": "UniversalScheme"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalScheme/#universalscheme", 
            "text": "see the source  Code deposit cost:  less than 98600 gas.  Execution cost:  less than 20496 gas.  Total deploy cost(deposit + execution):  less than 119096 gas.", 
            "title": "UniversalScheme"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalScheme/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalScheme/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalScheme/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalScheme/#event-ownershiptransferred", 
            "text": "Params:   previousOwner   of type address  newOwner   of type address", 
            "title": "event OwnershipTransferred"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalScheme/#event-lognewproposal", 
            "text": "Params:   proposalId   of type bytes32", 
            "title": "event LogNewProposal"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalScheme/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalScheme/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalScheme/#function-updateparameters", 
            "text": "Execution cost:  less than 20443 gas.  nonpayable  Inputs:   _hashedParameters   of type bytes32   Returns:  Nothing", 
            "title": "function updateParameters"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalScheme/#function-transferownership", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost:  less than 22788 gas.  nonpayable  Inputs:   newOwner   of type address- The address to transfer ownership to.   Returns:  Nothing", 
            "title": "function transferOwnership"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalScheme/#function-owner", 
            "text": "Execution cost:  less than 548 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function owner"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalScheme/#function-hashedparameters", 
            "text": "Execution cost:  less than 439 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type bytes32", 
            "title": "function hashedParameters"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalSchemeInterface/", 
            "text": "UniversalSchemeInterface\n\n\nsee the source\n\n\nCode deposit cost: \nNo bound available.\n\n\nExecution cost: \nNo bound available.\n\n\nTotal deploy cost(deposit + execution): \nNo bound available.\n\n\n\n\nA Scheme defines rules the DAO follows.\nA special \nScheme\n called the \nGenesis Scheme\n takes care of creating a brand new DAO.\n\n\n\n\nUniversal Scheme\n\n\nUniversal Schemes\n are schemes that inherit from \nUniversalSchemeInterface\n and are supposed to be deployed once.\n\n\nNon-universal Scheme\n\n\nNon-Universal Schemes\n are schemes that do not follow any standard and do not inherit from \nUniversalSchemeInterface\n\n\nReference\n\n\nConstructors\n\n\nNothing\n\n\nEvents\n\n\nNothing\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n updateParameters\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_hashedParameters\n \nof type bytes32\n\n\n\n\nReturns:\n\n\nNothing", 
            "title": "UniversalSchemeInterface"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalSchemeInterface/#universalschemeinterface", 
            "text": "see the source  Code deposit cost:  No bound available.  Execution cost:  No bound available.  Total deploy cost(deposit + execution):  No bound available.   A Scheme defines rules the DAO follows.\nA special  Scheme  called the  Genesis Scheme  takes care of creating a brand new DAO.", 
            "title": "UniversalSchemeInterface"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalSchemeInterface/#universal-scheme", 
            "text": "Universal Schemes  are schemes that inherit from  UniversalSchemeInterface  and are supposed to be deployed once.", 
            "title": "Universal Scheme"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalSchemeInterface/#non-universal-scheme", 
            "text": "Non-Universal Schemes  are schemes that do not follow any standard and do not inherit from  UniversalSchemeInterface", 
            "title": "Non-universal Scheme"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalSchemeInterface/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalSchemeInterface/#constructors", 
            "text": "Nothing", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalSchemeInterface/#events", 
            "text": "Nothing", 
            "title": "Events"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalSchemeInterface/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalSchemeInterface/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/universalSchemes/UniversalSchemeInterface/#function-updateparameters", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _hashedParameters   of type bytes32   Returns:  Nothing", 
            "title": "function updateParameters"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/", 
            "text": "UpgradeScheme\n\n\nsee the source\n\n\nCode deposit cost: \nless than 711200 gas.\n\n\nExecution cost: \nless than 21115 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 732315 gas.\n\n\n\n\nA scheme to manage the upgrade of an organization.\n\n\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n UpgradeScheme()\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\nNothing\n\n\nEvents\n\n\nevent\n OwnershipTransferred\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type address\n\n\nnewOwner\n \nof type address\n\n\n\n\nevent\n LogProposalExecuted\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nevent\n LogProposalDeleted\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nevent\n LogNewUpgradeProposal\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n_intVoteInterface\n \nof type address\n\n\n_newController\n \nof type address\n\n\n\n\nevent\n LogNewProposal\n\n\nParams:\n\n\n\n\nproposalId\n \nof type bytes32\n\n\n\n\nevent\n LogChangeUpgradeSchemeProposal\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n_intVoteInterface\n \nof type address\n\n\nnewUpgradeScheme\n \nof type address\n\n\n_params\n \nof type bytes32\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n execute\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_avatar\n \nof type address\n\n\n_param\n \nof type int256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n parameters\n\n\nExecution cost: \nless than 894 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nvoteParams\n \nof type bytes32\n\n\nintVote\n \nof type address\n\n\n\n\nfunction\n transferOwnership\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost: \nless than 23005 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nnewOwner\n \nof type address- The address to transfer ownership to.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n proposeUpgrade\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n_newController\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n updateParameters\n\n\nExecution cost: \nless than 20594 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_hashedParameters\n \nof type bytes32\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n proposeChangeUpgradingScheme\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n_scheme\n \nof type address\n\n\n_params\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n setParameters\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_voteParams\n \nof type bytes32\n\n\n_intVote\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n owner\n\n\nExecution cost: \nless than 765 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n organizationsProposals\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nupgradeContract\n \nof type address\n\n\nparams\n \nof type bytes32\n\n\nproposalType\n \nof type uint256\n\n\n\n\nfunction\n hashedParameters\n\n\nExecution cost: \nless than 656 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n getParametersHash\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | pure\n\n\nInputs:\n\n\n\n\n_voteParams\n \nof type bytes32\n\n\n_intVote\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32", 
            "title": "UpgradeScheme"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#upgradescheme", 
            "text": "see the source  Code deposit cost:  less than 711200 gas.  Execution cost:  less than 21115 gas.  Total deploy cost(deposit + execution):  less than 732315 gas.   A scheme to manage the upgrade of an organization.", 
            "title": "UpgradeScheme"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#constructor-upgradescheme", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:  Nothing", 
            "title": "constructor UpgradeScheme()"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#event-ownershiptransferred", 
            "text": "Params:   previousOwner   of type address  newOwner   of type address", 
            "title": "event OwnershipTransferred"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#event-logproposalexecuted", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32", 
            "title": "event LogProposalExecuted"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#event-logproposaldeleted", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32", 
            "title": "event LogProposalDeleted"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#event-lognewupgradeproposal", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32  _intVoteInterface   of type address  _newController   of type address", 
            "title": "event LogNewUpgradeProposal"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#event-lognewproposal", 
            "text": "Params:   proposalId   of type bytes32", 
            "title": "event LogNewProposal"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#event-logchangeupgradeschemeproposal", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32  _intVoteInterface   of type address  newUpgradeScheme   of type address  _params   of type bytes32", 
            "title": "event LogChangeUpgradeSchemeProposal"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#function-execute", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _avatar   of type address  _param   of type int256   Returns:   unnamed   of type bool", 
            "title": "function execute"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#function-parameters", 
            "text": "Execution cost:  less than 894 gas.  constant | view  Inputs:   unnamed   of type bytes32   Returns:   voteParams   of type bytes32  intVote   of type address", 
            "title": "function parameters"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#function-transferownership", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost:  less than 23005 gas.  nonpayable  Inputs:   newOwner   of type address- The address to transfer ownership to.   Returns:  Nothing", 
            "title": "function transferOwnership"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#function-proposeupgrade", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _avatar   of type address  _newController   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function proposeUpgrade"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#function-updateparameters", 
            "text": "Execution cost:  less than 20594 gas.  nonpayable  Inputs:   _hashedParameters   of type bytes32   Returns:  Nothing", 
            "title": "function updateParameters"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#function-proposechangeupgradingscheme", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _avatar   of type address  _scheme   of type address  _params   of type bytes32   Returns:   unnamed   of type bytes32", 
            "title": "function proposeChangeUpgradingScheme"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#function-setparameters", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _voteParams   of type bytes32  _intVote   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function setParameters"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#function-owner", 
            "text": "Execution cost:  less than 765 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function owner"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#function-organizationsproposals", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   unnamed   of type address  unnamed   of type bytes32   Returns:   upgradeContract   of type address  params   of type bytes32  proposalType   of type uint256", 
            "title": "function organizationsProposals"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#function-hashedparameters", 
            "text": "Execution cost:  less than 656 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type bytes32", 
            "title": "function hashedParameters"
        }, 
        {
            "location": "/reference/universalSchemes/UpgradeScheme/#function-getparametershash", 
            "text": "Execution cost:  No bound available.  constant | pure  Inputs:   _voteParams   of type bytes32  _intVote   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function getParametersHash"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/", 
            "text": "VestingScheme\n\n\nsee the source\n\n\nCode deposit cost: \nless than 1408400 gas.\n\n\nExecution cost: \nless than 21840 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 1430240 gas.\n\n\n\n\nA schme for vesting.\n\n\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n VestingScheme()\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\nNothing\n\n\nEvents\n\n\nevent\n SignToCancelAgreement\n\n\nParams:\n\n\n\n\n_agreementId\n \nof type uint256\n\n\n_signer\n \nof type address\n\n\n\n\nevent\n RevokeSignToCancelAgreement\n\n\nParams:\n\n\n\n\n_agreementId\n \nof type uint256\n\n\n_signer\n \nof type address\n\n\n\n\nevent\n OwnershipTransferred\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type address\n\n\nnewOwner\n \nof type address\n\n\n\n\nevent\n NewVestedAgreement\n\n\nParams:\n\n\n\n\n_agreementId\n \nof type uint256\n\n\n\n\nevent\n LogRegisterOrg\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n\n\nevent\n LogNewProposal\n\n\nParams:\n\n\n\n\nproposalId\n \nof type bytes32\n\n\n\n\nevent\n LogExecutaion\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n_result\n \nof type int256\n\n\n\n\nevent\n LogCollect\n\n\nParams:\n\n\n\n\n_agreementId\n \nof type uint256\n\n\n\n\nevent\n LogAgreementProposal\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nevent\n LogAgreementCancel\n\n\nParams:\n\n\n\n\n_agreementId\n \nof type uint256\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n revokeSignToCancelAgreement\n\n\n\n\nFunction to revoke vote for canceling agreement.\n\n\n\n\nExecution cost: \nless than 43398 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_agreementId\n \nof type uint256- the relevant agreement.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n parameters\n\n\nExecution cost: \nless than 894 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nvoteParams\n \nof type bytes32\n\n\nintVote\n \nof type address\n\n\n\n\nfunction\n transferOwnership\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost: \nless than 23071 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nnewOwner\n \nof type address- The address to transfer ownership to.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n updateParameters\n\n\nExecution cost: \nless than 20572 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_hashedParameters\n \nof type bytes32\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n signToCancelAgreement\n\n\n\n\nFunction to sign to cancel an agreement.\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_agreementId\n \nof type uint256- the relevant agreement.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n proposeVestingAgreement\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_beneficiary\n \nof type address\n\n\n_returnOnCancelAddress\n \nof type address\n\n\n_startingBlock\n \nof type uint256\n\n\n_amountPerPeriod\n \nof type uint256\n\n\n_periodLength\n \nof type uint256\n\n\n_numOfAgreedPeriods\n \nof type uint256\n\n\n_cliffInPeriods\n \nof type uint256\n\n\n_signaturesReqToCancel\n \nof type uint256\n\n\n_signersArray\n \nof type address[]\n\n\n_avatar\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n setParameters\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_voteParams\n \nof type bytes32\n\n\n_intVote\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n owner\n\n\nExecution cost: \nless than 787 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n organizationsData\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\ntoken\n \nof type address\n\n\nbeneficiary\n \nof type address\n\n\nreturnOnCancelAddress\n \nof type address\n\n\nstartingBlock\n \nof type uint256\n\n\namountPerPeriod\n \nof type uint256\n\n\nperiodLength\n \nof type uint256\n\n\nnumOfAgreedPeriods\n \nof type uint256\n\n\ncliffInPeriods\n \nof type uint256\n\n\nsignaturesReqToCancel\n \nof type uint256\n\n\ncollectedPeriods\n \nof type uint256\n\n\nsignaturesReceivedCounter\n \nof type uint256\n\n\n\n\nfunction\n hashedParameters\n\n\nExecution cost: \nless than 744 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n getParametersHash\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | pure\n\n\nInputs:\n\n\n\n\n_voteParams\n \nof type bytes32\n\n\n_intVote\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n execute\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_avatar\n \nof type address\n\n\n_param\n \nof type int256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n createVestedAgreement\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_token\n \nof type address\n\n\n_beneficiary\n \nof type address\n\n\n_returnOnCancelAddress\n \nof type address\n\n\n_startingBlock\n \nof type uint256\n\n\n_amountPerPeriod\n \nof type uint256\n\n\n_periodLength\n \nof type uint256\n\n\n_numOfAgreedPeriods\n \nof type uint256\n\n\n_cliffInPeriods\n \nof type uint256\n\n\n_signaturesReqToCancel\n \nof type uint256\n\n\n_signersArray\n \nof type address[]\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nfunction\n collect\n\n\n\n\nFunction for a beneficiary to collect.\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_agreementId\n \nof type uint256- the relevant agreement.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n agreements\n\n\nExecution cost: \nless than 3271 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type uint256\n\n\n\n\nReturns:\n\n\n\n\ntoken\n \nof type address\n\n\nbeneficiary\n \nof type address\n\n\nreturnOnCancelAddress\n \nof type address\n\n\nstartingBlock\n \nof type uint256\n\n\namountPerPeriod\n \nof type uint256\n\n\nperiodLength\n \nof type uint256\n\n\nnumOfAgreedPeriods\n \nof type uint256\n\n\ncliffInPeriods\n \nof type uint256\n\n\nsignaturesReqToCancel\n \nof type uint256\n\n\ncollectedPeriods\n \nof type uint256\n\n\nsignaturesReceivedCounter\n \nof type uint256", 
            "title": "VestingScheme"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#vestingscheme", 
            "text": "see the source  Code deposit cost:  less than 1408400 gas.  Execution cost:  less than 21840 gas.  Total deploy cost(deposit + execution):  less than 1430240 gas.   A schme for vesting.", 
            "title": "VestingScheme"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#constructor-vestingscheme", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:  Nothing", 
            "title": "constructor VestingScheme()"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#event-signtocancelagreement", 
            "text": "Params:   _agreementId   of type uint256  _signer   of type address", 
            "title": "event SignToCancelAgreement"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#event-revokesigntocancelagreement", 
            "text": "Params:   _agreementId   of type uint256  _signer   of type address", 
            "title": "event RevokeSignToCancelAgreement"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#event-ownershiptransferred", 
            "text": "Params:   previousOwner   of type address  newOwner   of type address", 
            "title": "event OwnershipTransferred"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#event-newvestedagreement", 
            "text": "Params:   _agreementId   of type uint256", 
            "title": "event NewVestedAgreement"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#event-logregisterorg", 
            "text": "Params:   _avatar   of type address", 
            "title": "event LogRegisterOrg"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#event-lognewproposal", 
            "text": "Params:   proposalId   of type bytes32", 
            "title": "event LogNewProposal"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#event-logexecutaion", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32  _result   of type int256", 
            "title": "event LogExecutaion"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#event-logcollect", 
            "text": "Params:   _agreementId   of type uint256", 
            "title": "event LogCollect"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#event-logagreementproposal", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32", 
            "title": "event LogAgreementProposal"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#event-logagreementcancel", 
            "text": "Params:   _agreementId   of type uint256", 
            "title": "event LogAgreementCancel"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#function-revokesigntocancelagreement", 
            "text": "Function to revoke vote for canceling agreement.   Execution cost:  less than 43398 gas.  nonpayable  Inputs:   _agreementId   of type uint256- the relevant agreement.   Returns:  Nothing", 
            "title": "function revokeSignToCancelAgreement"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#function-parameters", 
            "text": "Execution cost:  less than 894 gas.  constant | view  Inputs:   unnamed   of type bytes32   Returns:   voteParams   of type bytes32  intVote   of type address", 
            "title": "function parameters"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#function-transferownership", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost:  less than 23071 gas.  nonpayable  Inputs:   newOwner   of type address- The address to transfer ownership to.   Returns:  Nothing", 
            "title": "function transferOwnership"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#function-updateparameters", 
            "text": "Execution cost:  less than 20572 gas.  nonpayable  Inputs:   _hashedParameters   of type bytes32   Returns:  Nothing", 
            "title": "function updateParameters"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#function-signtocancelagreement", 
            "text": "Function to sign to cancel an agreement.   Execution cost:  No bound available.  nonpayable  Inputs:   _agreementId   of type uint256- the relevant agreement.   Returns:  Nothing", 
            "title": "function signToCancelAgreement"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#function-proposevestingagreement", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _beneficiary   of type address  _returnOnCancelAddress   of type address  _startingBlock   of type uint256  _amountPerPeriod   of type uint256  _periodLength   of type uint256  _numOfAgreedPeriods   of type uint256  _cliffInPeriods   of type uint256  _signaturesReqToCancel   of type uint256  _signersArray   of type address[]  _avatar   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function proposeVestingAgreement"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#function-setparameters", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _voteParams   of type bytes32  _intVote   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function setParameters"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#function-owner", 
            "text": "Execution cost:  less than 787 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function owner"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#function-organizationsdata", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   unnamed   of type address  unnamed   of type bytes32   Returns:   token   of type address  beneficiary   of type address  returnOnCancelAddress   of type address  startingBlock   of type uint256  amountPerPeriod   of type uint256  periodLength   of type uint256  numOfAgreedPeriods   of type uint256  cliffInPeriods   of type uint256  signaturesReqToCancel   of type uint256  collectedPeriods   of type uint256  signaturesReceivedCounter   of type uint256", 
            "title": "function organizationsData"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#function-hashedparameters", 
            "text": "Execution cost:  less than 744 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type bytes32", 
            "title": "function hashedParameters"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#function-getparametershash", 
            "text": "Execution cost:  No bound available.  constant | pure  Inputs:   _voteParams   of type bytes32  _intVote   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function getParametersHash"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#function-execute", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _avatar   of type address  _param   of type int256   Returns:   unnamed   of type bool", 
            "title": "function execute"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#function-createvestedagreement", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _token   of type address  _beneficiary   of type address  _returnOnCancelAddress   of type address  _startingBlock   of type uint256  _amountPerPeriod   of type uint256  _periodLength   of type uint256  _numOfAgreedPeriods   of type uint256  _cliffInPeriods   of type uint256  _signaturesReqToCancel   of type uint256  _signersArray   of type address[]   Returns:   unnamed   of type uint256", 
            "title": "function createVestedAgreement"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#function-collect", 
            "text": "Function for a beneficiary to collect.   Execution cost:  No bound available.  nonpayable  Inputs:   _agreementId   of type uint256- the relevant agreement.   Returns:  Nothing", 
            "title": "function collect"
        }, 
        {
            "location": "/reference/universalSchemes/VestingScheme/#function-agreements", 
            "text": "Execution cost:  less than 3271 gas.  constant | view  Inputs:   unnamed   of type uint256   Returns:   token   of type address  beneficiary   of type address  returnOnCancelAddress   of type address  startingBlock   of type uint256  amountPerPeriod   of type uint256  periodLength   of type uint256  numOfAgreedPeriods   of type uint256  cliffInPeriods   of type uint256  signaturesReqToCancel   of type uint256  collectedPeriods   of type uint256  signaturesReceivedCounter   of type uint256", 
            "title": "function agreements"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/", 
            "text": "VoteInOrganizationScheme\n\n\nsee the source\n\n\nCode deposit cost: \nless than 599200 gas.\n\n\nExecution cost: \nless than 21000 gas.\n\n\nTotal deploy cost(deposit + execution): \nless than 620200 gas.\n\n\n\n\nVoteInOrganizationScheme.\n\n\n\n\nReference\n\n\nConstructors\n\n\nconstructor\n VoteInOrganizationScheme()\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nParams:\n\n\nNothing\n\n\nEvents\n\n\nevent\n ProposalExecuted\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nevent\n ProposalDeleted\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n\n\nevent\n OwnershipTransferred\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type address\n\n\nnewOwner\n \nof type address\n\n\n\n\nevent\n NewVoteProposal\n\n\nParams:\n\n\n\n\n_avatar\n \nof type address\n\n\n_proposalId\n \nof type bytes32\n\n\n_intVoteInterface\n \nof type address\n\n\n_originalIntVote\n \nof type address\n\n\n_originalProposalId\n \nof type bytes32\n\n\n_originalNumOfChoices\n \nof type uint256\n\n\n\n\nevent\n LogNewProposal\n\n\nParams:\n\n\n\n\nproposalId\n \nof type bytes32\n\n\n\n\nFallback\n\n\nNothing\n\n\nFunctions\n\n\nfunction\n proposeVote\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_avatar\n \nof type address\n\n\n_originalIntVote\n \nof type address\n\n\n_originalProposalId\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n parameters\n\n\nExecution cost: \nless than 906 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\nintVote\n \nof type address\n\n\nvoteParams\n \nof type bytes32\n\n\n\n\nfunction\n transferOwnership\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost: \nless than 23005 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\nnewOwner\n \nof type address- The address to transfer ownership to.\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n updateParameters\n\n\nExecution cost: \nless than 20572 gas.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_hashedParameters\n \nof type bytes32\n\n\n\n\nReturns:\n\n\nNothing\n\n\nfunction\n setParameters\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_voteParams\n \nof type bytes32\n\n\n_intVote\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n owner\n\n\nExecution cost: \nless than 765 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type address\n\n\n\n\nfunction\n organizationsData\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | view\n\n\nInputs:\n\n\n\n\nunnamed\n \nof type address\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nReturns:\n\n\n\n\noriginalIntVote\n \nof type address\n\n\noriginalProposalId\n \nof type bytes32\n\n\noriginalNumOfChoices\n \nof type uint256\n\n\n\n\nfunction\n hashedParameters\n\n\nExecution cost: \nless than 656 gas.\n\n\nconstant | view\n\n\nInputs:\n\n\nNothing\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n getParametersHash\n\n\nExecution cost: \nNo bound available.\n\n\nconstant | pure\n\n\nInputs:\n\n\n\n\n_voteParams\n \nof type bytes32\n\n\n_intVote\n \nof type address\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bytes32\n\n\n\n\nfunction\n execute\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_proposalId\n \nof type bytes32\n\n\n_avatar\n \nof type address\n\n\n_param\n \nof type int256\n\n\n\n\nReturns:\n\n\n\n\nunnamed\n \nof type bool\n\n\n\n\nfunction\n action\n\n\n\n\ndo the actual voting in the other organization in behalf of the organization's avatar.\n     This function is deleted called by the organization.\n\n\n\n\nExecution cost: \nNo bound available.\n\n\nnonpayable\n\n\nInputs:\n\n\n\n\n_params\n \nof type bytes32[]- array represent the voting .\n       _params[0] - the address of the voting machine.\n       _params[1] - the proposalId.\n       _params[2] - the voting machine params.\n\n\n\n\n\nbool which indicate success.", 
            "title": "VoteInOrganizationScheme"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#voteinorganizationscheme", 
            "text": "see the source  Code deposit cost:  less than 599200 gas.  Execution cost:  less than 21000 gas.  Total deploy cost(deposit + execution):  less than 620200 gas.   VoteInOrganizationScheme.", 
            "title": "VoteInOrganizationScheme"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#reference", 
            "text": "", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#constructors", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#constructor-voteinorganizationscheme", 
            "text": "Execution cost:  No bound available.  nonpayable  Params:  Nothing", 
            "title": "constructor VoteInOrganizationScheme()"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#event-proposalexecuted", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32", 
            "title": "event ProposalExecuted"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#event-proposaldeleted", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32", 
            "title": "event ProposalDeleted"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#event-ownershiptransferred", 
            "text": "Params:   previousOwner   of type address  newOwner   of type address", 
            "title": "event OwnershipTransferred"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#event-newvoteproposal", 
            "text": "Params:   _avatar   of type address  _proposalId   of type bytes32  _intVoteInterface   of type address  _originalIntVote   of type address  _originalProposalId   of type bytes32  _originalNumOfChoices   of type uint256", 
            "title": "event NewVoteProposal"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#event-lognewproposal", 
            "text": "Params:   proposalId   of type bytes32", 
            "title": "event LogNewProposal"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#fallback", 
            "text": "Nothing", 
            "title": "Fallback"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#functions", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#function-proposevote", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _avatar   of type address  _originalIntVote   of type address  _originalProposalId   of type bytes32   Returns:   unnamed   of type bytes32", 
            "title": "function proposeVote"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#function-parameters", 
            "text": "Execution cost:  less than 906 gas.  constant | view  Inputs:   unnamed   of type bytes32   Returns:   intVote   of type address  voteParams   of type bytes32", 
            "title": "function parameters"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#function-transferownership", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost:  less than 23005 gas.  nonpayable  Inputs:   newOwner   of type address- The address to transfer ownership to.   Returns:  Nothing", 
            "title": "function transferOwnership"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#function-updateparameters", 
            "text": "Execution cost:  less than 20572 gas.  nonpayable  Inputs:   _hashedParameters   of type bytes32   Returns:  Nothing", 
            "title": "function updateParameters"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#function-setparameters", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _voteParams   of type bytes32  _intVote   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function setParameters"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#function-owner", 
            "text": "Execution cost:  less than 765 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type address", 
            "title": "function owner"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#function-organizationsdata", 
            "text": "Execution cost:  No bound available.  constant | view  Inputs:   unnamed   of type address  unnamed   of type bytes32   Returns:   originalIntVote   of type address  originalProposalId   of type bytes32  originalNumOfChoices   of type uint256", 
            "title": "function organizationsData"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#function-hashedparameters", 
            "text": "Execution cost:  less than 656 gas.  constant | view  Inputs:  Nothing  Returns:   unnamed   of type bytes32", 
            "title": "function hashedParameters"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#function-getparametershash", 
            "text": "Execution cost:  No bound available.  constant | pure  Inputs:   _voteParams   of type bytes32  _intVote   of type address   Returns:   unnamed   of type bytes32", 
            "title": "function getParametersHash"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#function-execute", 
            "text": "Execution cost:  No bound available.  nonpayable  Inputs:   _proposalId   of type bytes32  _avatar   of type address  _param   of type int256   Returns:   unnamed   of type bool", 
            "title": "function execute"
        }, 
        {
            "location": "/reference/universalSchemes/VoteInOrganizationScheme/#function-action", 
            "text": "do the actual voting in the other organization in behalf of the organization's avatar.\n     This function is deleted called by the organization.   Execution cost:  No bound available.  nonpayable  Inputs:   _params   of type bytes32[]- array represent the voting .\n       _params[0] - the address of the voting machine.\n       _params[1] - the proposalId.\n       _params[2] - the voting machine params.   bool which indicate success.", 
            "title": "function action"
        }
    ]
}